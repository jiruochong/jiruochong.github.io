"use strict";var THREE={REVISION:"67"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};(function(){for(var e=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!self.requestAnimationFrame;++n)self.requestAnimationFrame=self[t[n]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[n]+"CancelAnimationFrame"]||self[t[n]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var n=Date.now(),r=Math.max(0,16-(n-e)),i=self.setTimeout(function(){t(n+r)},r);e=n+r;return i});void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1e3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){e instanceof THREE.Color?this.copy(e):"number"===typeof e?this.setHex(e):"string"===typeof e&&this.setStyle(e);return this},setHex:function(e){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;return this},setRGB:function(e,t,n){this.r=e;this.g=t;this.b=n;return this},setHSL:function(e,t,n){if(0===t)this.r=this.g=this.b=n;else{var r=function(e,t,n){0>n&&(n+=1);1<n&&(n-=1);return n<1/6?e+6*(t-e)*n:.5>n?t:n<2/3?e+6*(t-e)*(2/3-n):e};t=.5>=n?n*(1+t):n+t-n*t;n=2*n-t;this.r=r(n,t,e+1/3);this.g=r(n,t,e);this.b=r(n,t,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e))return e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e))return e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(e))return e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e))return e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this;if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},copy:function(e){this.r=e.r;this.g=e.g;this.b=e.b;return this},copyGammaToLinear:function(e){this.r=e.r*e.r;this.g=e.g*e.g;this.b=e.b*e.b;return this},copyLinearToGamma:function(e){this.r=Math.sqrt(e.r);this.g=Math.sqrt(e.g);this.b=Math.sqrt(e.b);return this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;this.r=e*e;this.g=t*t;this.b=n*n;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e=e||{h:0,s:0,l:0};var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),s=Math.min(t,n,r),o,u=(s+i)/2;if(s===i)s=o=0;else{var a=i-s,s=.5>=u?a/(i+s):a/(2-i-s);switch(i){case t:o=(n-r)/a+(n<r?6:0);break;case n:o=(r-t)/a+2;break;case r:o=(t-n)/a+4}o/=6}e.h=o;e.s=s;e.l=u;return e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();r.h+=e;r.s+=t;r.l+=n;this.setHSL(r.h,r.s,r.l);return this},add:function(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this},addColors:function(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this},addScalar:function(e){this.r+=e;this.g+=e;this.b+=e;return this},multiply:function(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this},multiplyScalar:function(e){this.r*=e;this.g*=e;this.b*=e;return this},lerp:function(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){this.r=e[0];this.g=e[1];this.b=e[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(e,t,n,r){this._x=e||0;this._y=t||0;this._z=n||0;this._w=void 0!==r?r:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e;this.onChangeCallback()},set:function(e,t,n,r){this._x=e;this._y=t;this._z=n;this._w=r;this.onChangeCallback();return this},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._w=e._w;this.onChangeCallback();return this},setFromEuler:function(e,t){if(!1===e instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var n=Math.cos(e._x/2),r=Math.cos(e._y/2),i=Math.cos(e._z/2),s=Math.sin(e._x/2),o=Math.sin(e._y/2),u=Math.sin(e._z/2);"XYZ"===e.order?(this._x=s*r*i+n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i-s*o*u):"YXZ"===e.order?(this._x=s*r*i+n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i+s*o*u):"ZXY"===e.order?(this._x=s*r*i-n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i-s*o*u):"ZYX"===e.order?(this._x=s*r*i-n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i+s*o*u):"YZX"===e.order?(this._x=s*r*i+n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i-s*o*u):"XZY"===e.order&&(this._x=s*r*i-n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i+s*o*u);if(!1!==t)this.onChangeCallback();return this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);this._x=e.x*r;this._y=e.y*r;this._z=e.z*r;this._w=Math.cos(n);this.onChangeCallback();return this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0];e=t[4];var r=t[8],i=t[1],s=t[5],o=t[9],u=t[2],a=t[6],t=t[10],f=n+s+t;0<f?(n=.5/Math.sqrt(f+1),this._w=.25/n,this._x=(a-o)*n,this._y=(r-u)*n,this._z=(i-e)*n):n>s&&n>t?(n=2*Math.sqrt(1+n-s-t),this._w=(a-o)/n,this._x=.25*n,this._y=(e+i)/n,this._z=(r+u)/n):s>t?(n=2*Math.sqrt(1+s-n-t),this._w=(r-u)/n,this._x=(e+i)/n,this._y=.25*n,this._z=(o+a)/n):(n=2*Math.sqrt(1+t-n-s),this._w=(i-e)/n,this._x=(r+u)/n,this._y=(o+a)/n,this._z=.25*n);this.onChangeCallback();return this},setFromUnitVectors:function(){var e,t;return function(n,r){void 0===e&&(e=new THREE.Vector3);t=n.dot(r)+1;1e-6>t?(t=0,Math.abs(n.x)>Math.abs(n.z)?e.set(-n.y,n.x,0):e.set(0,-n.z,n.y)):e.crossVectors(n,r);this._x=e.x;this._y=e.y;this._z=e.z;this._w=t;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e);this.onChangeCallback();return this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,s=e._w,o=t._x,u=t._y,a=t._z,f=t._w;this._x=n*f+s*o+r*a-i*u;this._y=r*f+s*u+i*o-n*a;this._z=i*f+s*a+n*u-r*o;this._w=s*f-n*o-r*u-i*a;this.onChangeCallback();return this},multiplyVector3:function(e){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)},slerp:function(e,t){var n=this._x,r=this._y,i=this._z,s=this._w,o=s*e._w+n*e._x+r*e._y+i*e._z;0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e);if(1<=o)return this._w=s,this._x=n,this._y=r,this._z=i,this;var u=Math.acos(o),a=Math.sqrt(1-o*o);if(.001>Math.abs(a))return this._w=.5*(s+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(i+this._z),this;o=Math.sin((1-t)*u)/a;u=Math.sin(t*u)/a;this._w=s*o+this._w*u;this._x=n*o+this._x*u;this._y=r*o+this._y*u;this._z=i*o+this._z*u;this.onChangeCallback();return this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];this._w=e[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(e,t,n,r){return n.copy(e).slerp(t,r)};THREE.Vector2=function(e,t){this.x=e||0;this.y=t||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){this.x=e;this.y=t;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;return this},add:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this},addScalar:function(e){this.x+=e;this.y+=e;return this},sub:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this},multiply:function(e){this.x*=e.x;this.y*=e.y;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;return this},divide:function(e){this.x/=e.x;this.y/=e.y;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e):this.y=this.x=0;return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);return this},clampScalar:function(){var e,t;return function(n,r){void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2);e.set(n,n);t.set(r,r);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;e=this.y-e.y;return t*t+e*e},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){this.x=e[0];this.y=e[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,t,n){this.x=e||0;this.y=t||0;this.z=n||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,n){this.x=e;this.y=t;this.z=n;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;return this},add:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;this.z+=e.z;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this},sub:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;this.z-=e.z;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this},multiply:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t);this.x*=e.x;this.y*=e.y;this.z*=e.z;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;return this},multiplyVectors:function(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this},applyEuler:function(){var e;return function(t){!1===t instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");void 0===e&&(e=new THREE.Quaternion);this.applyQuaternion(e.setFromEuler(t));return this}}(),applyAxisAngle:function(){var e;return function(t,n){void 0===e&&(e=new THREE.Quaternion);this.applyQuaternion(e.setFromAxisAngle(t,n));return this}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z;e=e.elements;this.x=e[0]*t+e[3]*n+e[6]*r;this.y=e[1]*t+e[4]*n+e[7]*r;this.z=e[2]*t+e[5]*n+e[8]*r;return this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z;e=e.elements;this.x=e[0]*t+e[4]*n+e[8]*r+e[12];this.y=e[1]*t+e[5]*n+e[9]*r+e[13];this.z=e[2]*t+e[6]*n+e[10]*r+e[14];return this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z;e=e.elements;var i=1/(e[3]*t+e[7]*n+e[11]*r+e[15]);this.x=(e[0]*t+e[4]*n+e[8]*r+e[12])*i;this.y=(e[1]*t+e[5]*n+e[9]*r+e[13])*i;this.z=(e[2]*t+e[6]*n+e[10]*r+e[14])*i;return this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,s=e.y,o=e.z;e=e.w;var u=e*t+s*r-o*n,a=e*n+o*t-i*r,f=e*r+i*n-s*t,t=-i*t-s*n-o*r;this.x=u*e+t*-i+a*-o-f*-s;this.y=a*e+t*-s+f*-i-u*-o;this.z=f*e+t*-o+u*-s-a*-i;return this},transformDirection:function(e){var t=this.x,n=this.y,r=this.z;e=e.elements;this.x=e[0]*t+e[4]*n+e[8]*r;this.y=e[1]*t+e[5]*n+e[9]*r;this.z=e[2]*t+e[6]*n+e[10]*r;this.normalize();return this},divide:function(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0;return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);this.z>e.z&&(this.z=e.z);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);this.z<e.z&&(this.z=e.z);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z);return this},clampScalar:function(){var e,t;return function(n,r){void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3);e.set(n,n,n);t.set(r,r,r);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,i=this.z;this.x=r*e.z-i*e.y;this.y=i*e.x-n*e.z;this.z=n*e.y-r*e.x;return this},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,s=t.x,o=t.y,u=t.z;this.x=r*u-i*o;this.y=i*s-n*u;this.z=n*o-r*s;return this},projectOnVector:function(){var e,t;return function(n){void 0===e&&(e=new THREE.Vector3);e.copy(n).normalize();t=this.dot(e);return this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){void 0===e&&(e=new THREE.Vector3);e.copy(this).projectOnVector(t);return this.sub(e)}}(),reflect:function(){var e;return function(t){void 0===e&&(e=new THREE.Vector3);return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){e=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;e=this.z-e.z;return t*t+n*n+e*e},setEulerFromRotationMatrix:function(e,t){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(e,t){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");return this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){this.x=e.elements[12];this.y=e.elements[13];this.z=e.elements[14];return this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),n=this.set(e.elements[4],e.elements[5],e.elements[6]).length();e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=t;this.y=n;this.z=e;return this},setFromMatrixColumn:function(e,t){var n=4*e,r=t.elements;this.x=r[n];this.y=r[n+1];this.z=r[n+2];return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(e,t,n,r){this.x=e||0;this.y=t||0;this.z=n||0;this.w=void 0!==r?r:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,n,r){this.x=e;this.y=t;this.z=n;this.w=r;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setW:function(e){this.w=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=void 0!==e.w?e.w:1;return this},add:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this},sub:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;this.w*=e;return this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w;e=e.elements;this.x=e[0]*t+e[4]*n+e[8]*r+e[12]*i;this.y=e[1]*t+e[5]*n+e[9]*r+e[13]*i;this.z=e[2]*t+e[6]*n+e[10]*r+e[14]*i;this.w=e[3]*t+e[7]*n+e[11]*r+e[15]*i;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t);return this},setAxisAngleFromRotationMatrix:function(e){var t,n,r;e=e.elements;var i=e[0];r=e[4];var s=e[8],o=e[1],u=e[5],a=e[9];n=e[2];t=e[6];var f=e[10];if(.01>Math.abs(r-o)&&.01>Math.abs(s-n)&&.01>Math.abs(a-t)){if(.1>Math.abs(r+o)&&.1>Math.abs(s+n)&&.1>Math.abs(a+t)&&.1>Math.abs(i+u+f-3))return this.set(1,0,0,0),this;e=Math.PI;i=(i+1)/2;u=(u+1)/2;f=(f+1)/2;r=(r+o)/4;s=(s+n)/4;a=(a+t)/4;i>u&&i>f?.01>i?(t=0,r=n=.707106781):(t=Math.sqrt(i),n=r/t,r=s/t):u>f?.01>u?(t=.707106781,n=0,r=.707106781):(n=Math.sqrt(u),t=r/n,r=a/n):.01>f?(n=t=.707106781,r=0):(r=Math.sqrt(f),t=s/r,n=a/r);this.set(t,n,r,e);return this}e=Math.sqrt((t-a)*(t-a)+(s-n)*(s-n)+(o-r)*(o-r));.001>Math.abs(e)&&(e=1);this.x=(t-a)/e;this.y=(s-n)/e;this.z=(o-r)/e;this.w=Math.acos((i+u+f-1)/2);return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);this.z>e.z&&(this.z=e.z);this.w>e.w&&(this.w=e.w);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);this.z<e.z&&(this.z=e.z);this.w<e.w&&(this.w=e.w);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z);this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w);return this},clampScalar:function(){var e,t;return function(n,r){void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4);e.set(n,n,n,n);t.set(r,r,r,r);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];this.w=e[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(e,t,n,r){this._x=e||0;this._y=t||0;this._z=n||0;this._order=r||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e;this.onChangeCallback()},set:function(e,t,n,r){this._x=e;this._y=t;this._z=n;this._order=r||this._order;this.onChangeCallback();return this},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this.onChangeCallback();return this},setFromRotationMatrix:function(e,t){var n=THREE.Math.clamp,r=e.elements,i=r[0],s=r[4],o=r[8],u=r[1],a=r[5],f=r[9],l=r[2],c=r[6],r=r[10];t=t||this._order;"XYZ"===t?(this._y=Math.asin(n(o,-1,1)),.99999>Math.abs(o)?(this._x=Math.atan2(-f,r),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(c,a),this._z=0)):"YXZ"===t?(this._x=Math.asin(-n(f,-1,1)),.99999>Math.abs(f)?(this._y=Math.atan2(o,r),this._z=Math.atan2(u,a)):(this._y=Math.atan2(-l,i),this._z=0)):"ZXY"===t?(this._x=Math.asin(n(c,-1,1)),.99999>Math.abs(c)?(this._y=Math.atan2(-l,r),this._z=Math.atan2(-s,a)):(this._y=0,this._z=Math.atan2(u,i))):"ZYX"===t?(this._y=Math.asin(-n(l,-1,1)),.99999>Math.abs(l)?(this._x=Math.atan2(c,r),this._z=Math.atan2(u,i)):(this._x=0,this._z=Math.atan2(-s,a))):"YZX"===t?(this._z=Math.asin(n(u,-1,1)),.99999>Math.abs(u)?(this._x=Math.atan2(-f,a),this._y=Math.atan2(-l,i)):(this._x=0,this._y=Math.atan2(o,r))):"XZY"===t?(this._z=Math.asin(-n(s,-1,1)),.99999>Math.abs(s)?(this._x=Math.atan2(c,a),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-f,r),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t);this._order=t;this.onChangeCallback();return this},setFromQuaternion:function(e,t,n){var r=THREE.Math.clamp,i=e.x*e.x,s=e.y*e.y,o=e.z*e.z,u=e.w*e.w;t=t||this._order;"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),u-i-s+o),this._y=Math.asin(r(2*(e.x*e.z+e.y*e.w),-1,1)),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),u+i-s-o)):"YXZ"===t?(this._x=Math.asin(r(2*(e.x*e.w-e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),u-i-s+o),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),u-i+s-o)):"ZXY"===t?(this._x=Math.asin(r(2*(e.x*e.w+e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),u-i-s+o),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),u-i+s-o)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),u-i-s+o),this._y=Math.asin(r(2*(e.y*e.w-e.x*e.z),-1,1)),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),u+i-s-o)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),u-i+s-o),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),u+i-s-o),this._z=Math.asin(r(2*(e.x*e.y+e.z*e.w),-1,1))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),u-i+s-o),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),u+i-s-o),this._z=Math.asin(r(2*(e.z*e.w-e.x*e.y),-1,1))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t);this._order=t;if(!1!==n)this.onChangeCallback();return this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this);this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];void 0!==e[3]&&(this._order=e[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3;this.end=void 0!==t?t:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){this.start.copy(e);this.end.copy(t);return this},copy:function(e){this.start.copy(e.start);this.end.copy(e.end);return this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new THREE.Vector3;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n,r){e.subVectors(n,this.start);t.subVectors(this.end,this.start);var i=t.dot(t),i=t.dot(e)/i;r&&(i=THREE.Math.clamp(i,0,1));return i}}(),closestPointToPoint:function(e,t,n){e=this.closestPointToPointParameter(e,t);n=n||new THREE.Vector3;return this.delta(n).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){this.start.applyMatrix4(e);this.end.applyMatrix4(e);return this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==t?t:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t);this.max.copy(t);for(var n=1,r=e.length;n<r;n++)t=e[n],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,n){var r=e.copy(n).multiplyScalar(.5);this.min.copy(t).sub(r);this.max.copy(t).add(r);return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==t?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x);e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y);e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z);return this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t);this.max.copy(t);for(var t=1,n=e.length;t<n;t++)this.addPoint(e[t])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,n){var r=e.copy(n).multiplyScalar(.5);this.min.copy(t).sub(r);this.max.copy(t).add(r);return this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var n=this;t.updateMatrixWorld(!0);this.makeEmpty();t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var r=t.geometry.vertices,i=0,s=r.length;i<s;i++)e.copy(r[i]),e.applyMatrix4(t.matrixWorld),n.expandByPoint(e)});return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){t=t||new THREE.Sphere;t.center=this.center();t.radius=.5*this.size(e).length();return t}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t);e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t);e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t);e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t);e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t);e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t);e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t);e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t);this.makeEmpty();this.setFromPoints(e);return this}}(),translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(e,t,n,r,i,s,o,u,a){var f=this.elements=new Float32Array(9);f[0]=void 0!==e?e:1;f[3]=t||0;f[6]=n||0;f[1]=r||0;f[4]=void 0!==i?i:1;f[7]=s||0;f[2]=o||0;f[5]=u||0;f[8]=void 0!==a?a:1};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,n,r,i,s,o,u,a){var f=this.elements;f[0]=e;f[3]=t;f[6]=n;f[1]=r;f[4]=i;f[7]=s;f[2]=o;f[5]=u;f[8]=a;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(e){e=e.elements;this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]);return this},multiplyVector3:function(e){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)},multiplyVector3Array:function(e){console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,n,r){void 0===n&&(n=0);void 0===r&&(r=t.length);for(var i=0;i<r;i+=3,n+=3)e.x=t[n],e.y=t[n+1],e.z=t[n+2],e.applyMatrix3(this),t[n]=e.x,t[n+1]=e.y,t[n+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],u=e[6],a=e[7],e=e[8];return t*s*e-t*o*a-n*i*e+n*o*u+r*i*a-r*s*u},getInverse:function(e,t){var n=e.elements,r=this.elements;r[0]=n[10]*n[5]-n[6]*n[9];r[1]=-n[10]*n[1]+n[2]*n[9];r[2]=n[6]*n[1]-n[2]*n[5];r[3]=-n[10]*n[4]+n[6]*n[8];r[4]=n[10]*n[0]-n[2]*n[8];r[5]=-n[6]*n[0]+n[2]*n[4];r[6]=n[9]*n[4]-n[5]*n[8];r[7]=-n[9]*n[0]+n[1]*n[8];r[8]=n[5]*n[0]-n[1]*n[4];n=n[0]*r[0]+n[1]*r[3]+n[2]*r[6];if(0===n){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/n);return this},transpose:function(){var e,t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this},flattenToArrayOffset:function(e,t){var n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];return e},getNormalMatrix:function(e){this.getInverse(e).transpose();return this},transposeIntoArray:function(e){var t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}};THREE.Matrix4=function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1;m[4]=t||0;m[8]=n||0;m[12]=r||0;m[1]=i||0;m[5]=void 0!==s?s:1;m[9]=o||0;m[13]=u||0;m[2]=a||0;m[6]=f||0;m[10]=void 0!==l?l:1;m[14]=c||0;m[3]=h||0;m[7]=p||0;m[11]=d||0;m[15]=void 0!==v?v:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements;m[0]=e;m[4]=t;m[8]=n;m[12]=r;m[1]=i;m[5]=s;m[9]=o;m[13]=u;m[2]=a;m[6]=f;m[10]=l;m[14]=c;m[3]=h;m[7]=p;m[11]=d;m[15]=v;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(e){this.elements.set(e.elements);return this},extractPosition:function(e){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(e)},copyPosition:function(e){var t=this.elements;e=e.elements;t[12]=e[12];t[13]=e[13];t[14]=e[14];return this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var n=this.elements;t=t.elements;var r=1/e.set(t[0],t[1],t[2]).length(),i=1/e.set(t[4],t[5],t[6]).length(),s=1/e.set(t[8],t[9],t[10]).length();n[0]=t[0]*r;n[1]=t[1]*r;n[2]=t[2]*r;n[4]=t[4]*i;n[5]=t[5]*i;n[6]=t[6]*i;n[8]=t[8]*s;n[9]=t[9]*s;n[10]=t[10]*s;return this}}(),makeRotationFromEuler:function(e){!1===e instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,n=e.x,r=e.y,i=e.z,s=Math.cos(n),n=Math.sin(n),o=Math.cos(r),r=Math.sin(r),u=Math.cos(i),i=Math.sin(i);if("XYZ"===e.order){e=s*u;var a=s*i,f=n*u,l=n*i;t[0]=o*u;t[4]=-o*i;t[8]=r;t[1]=a+f*r;t[5]=e-l*r;t[9]=-n*o;t[2]=l-e*r;t[6]=f+a*r;t[10]=s*o}else"YXZ"===e.order?(e=o*u,a=o*i,f=r*u,l=r*i,t[0]=e+l*n,t[4]=f*n-a,t[8]=s*r,t[1]=s*i,t[5]=s*u,t[9]=-n,t[2]=a*n-f,t[6]=l+e*n,t[10]=s*o):"ZXY"===e.order?(e=o*u,a=o*i,f=r*u,l=r*i,t[0]=e-l*n,t[4]=-s*i,t[8]=f+a*n,t[1]=a+f*n,t[5]=s*u,t[9]=l-e*n,t[2]=-s*r,t[6]=n,t[10]=s*o):"ZYX"===e.order?(e=s*u,a=s*i,f=n*u,l=n*i,t[0]=o*u,t[4]=f*r-a,t[8]=e*r+l,t[1]=o*i,t[5]=l*r+e,t[9]=a*r-f,t[2]=-r,t[6]=n*o,t[10]=s*o):"YZX"===e.order?(e=s*o,a=s*r,f=n*o,l=n*r,t[0]=o*u,t[4]=l-e*i,t[8]=f*i+a,t[1]=i,t[5]=s*u,t[9]=-n*u,t[2]=-r*u,t[6]=a*i+f,t[10]=e-l*i):"XZY"===e.order&&(e=s*o,a=s*r,f=n*o,l=n*r,t[0]=o*u,t[4]=-i,t[8]=r*u,t[1]=e*i+l,t[5]=s*u,t[9]=a*i-f,t[2]=f*i-a,t[6]=n*u,t[10]=l*i+e);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},setRotationFromQuaternion:function(e){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,s=e.w,o=n+n,u=r+r,a=i+i;e=n*o;var f=n*u,n=n*a,l=r*u,r=r*a,i=i*a,o=s*o,u=s*u,s=s*a;t[0]=1-(l+i);t[4]=f-s;t[8]=n+u;t[1]=f+s;t[5]=1-(e+i);t[9]=r-o;t[2]=n-u;t[6]=r+o;t[10]=1-(e+l);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(r,i,s){var o=this.elements;n.subVectors(r,i).normalize();0===n.length()&&(n.z=1);e.crossVectors(s,n).normalize();0===e.length()&&(n.x+=1e-4,e.crossVectors(s,n).normalize());t.crossVectors(n,e);o[0]=e.x;o[4]=t.x;o[8]=n.x;o[1]=e.y;o[5]=t.y;o[9]=n.y;o[2]=e.z;o[6]=t.z;o[10]=n.z;return this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,s=n[0],o=n[4],u=n[8],a=n[12],f=n[1],l=n[5],c=n[9],h=n[13],p=n[2],d=n[6],v=n[10],m=n[14],g=n[3],y=n[7],b=n[11],n=n[15],w=r[0],E=r[4],S=r[8],x=r[12],T=r[1],N=r[5],C=r[9],k=r[13],L=r[2],A=r[6],O=r[10],M=r[14],_=r[3],D=r[7],P=r[11],r=r[15];i[0]=s*w+o*T+u*L+a*_;i[4]=s*E+o*N+u*A+a*D;i[8]=s*S+o*C+u*O+a*P;i[12]=s*x+o*k+u*M+a*r;i[1]=f*w+l*T+c*L+h*_;i[5]=f*E+l*N+c*A+h*D;i[9]=f*S+l*C+c*O+h*P;i[13]=f*x+l*k+c*M+h*r;i[2]=p*w+d*T+v*L+m*_;i[6]=p*E+d*N+v*A+m*D;i[10]=p*S+d*C+v*O+m*P;i[14]=p*x+d*k+v*M+m*r;i[3]=g*w+y*T+b*L+n*_;i[7]=g*E+y*N+b*A+n*D;i[11]=g*S+y*C+b*O+n*P;i[15]=g*x+y*k+b*M+n*r;return this},multiplyToArray:function(e,t,n){var r=this.elements;this.multiplyMatrices(e,t);n[0]=r[0];n[1]=r[1];n[2]=r[2];n[3]=r[3];n[4]=r[4];n[5]=r[5];n[6]=r[6];n[7]=r[7];n[8]=r[8];n[9]=r[9];n[10]=r[10];n[11]=r[11];n[12]=r[12];n[13]=r[13];n[14]=r[14];n[15]=r[15];return this},multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this},multiplyVector3:function(e){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return e.applyProjection(this)},multiplyVector4:function(e){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},multiplyVector3Array:function(e){console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,n,r){void 0===n&&(n=0);void 0===r&&(r=t.length);for(var i=0;i<r;i+=3,n+=3)e.x=t[n],e.y=t[n+1],e.z=t[n+2],e.applyMatrix4(this),t[n]=e.x,t[n+1]=e.y,t[n+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");e.transformDirection(this)},crossVector:function(e){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],s=e[1],o=e[5],u=e[9],a=e[13],f=e[2],l=e[6],c=e[10],h=e[14];return e[3]*(+i*u*l-r*a*l-i*o*c+n*a*c+r*o*h-n*u*h)+e[7]*(+t*u*h-t*a*c+i*s*c-r*s*h+r*a*f-i*u*f)+e[11]*(+t*a*l-t*o*h-i*s*l+n*s*h+i*o*f-n*a*f)+e[15]*(-r*o*f-t*u*l+t*o*c+r*s*l-n*s*c+n*u*f)},transpose:function(){var e=this.elements,t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this},flattenToArrayOffset:function(e,t){var n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];e[t+9]=n[9];e[t+10]=n[10];e[t+11]=n[11];e[t+12]=n[12];e[t+13]=n[13];e[t+14]=n[14];e[t+15]=n[15];return e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;t[12]=e.x;t[13]=e.y;t[14]=e.z;return this},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],s=r[4],o=r[8],u=r[12],a=r[1],f=r[5],l=r[9],c=r[13],h=r[2],p=r[6],d=r[10],v=r[14],m=r[3],g=r[7],y=r[11],r=r[15];n[0]=l*v*g-c*d*g+c*p*y-f*v*y-l*p*r+f*d*r;n[4]=u*d*g-o*v*g-u*p*y+s*v*y+o*p*r-s*d*r;n[8]=o*c*g-u*l*g+u*f*y-s*c*y-o*f*r+s*l*r;n[12]=u*l*p-o*c*p-u*f*d+s*c*d+o*f*v-s*l*v;n[1]=c*d*m-l*v*m-c*h*y+a*v*y+l*h*r-a*d*r;n[5]=o*v*m-u*d*m+u*h*y-i*v*y-o*h*r+i*d*r;n[9]=u*l*m-o*c*m-u*a*y+i*c*y+o*a*r-i*l*r;n[13]=o*c*h-u*l*h+u*a*d-i*c*d-o*a*v+i*l*v;n[2]=f*v*m-c*p*m+c*h*g-a*v*g-f*h*r+a*p*r;n[6]=u*p*m-s*v*m-u*h*g+i*v*g+s*h*r-i*p*r;n[10]=s*c*m-u*f*m+u*a*g-i*c*g-s*a*r+i*f*r;n[14]=u*f*h-s*c*h-u*a*p+i*c*p+s*a*v-i*f*v;n[3]=l*p*m-f*d*m-l*h*g+a*d*g+f*h*y-a*p*y;n[7]=s*d*m-o*p*m+o*h*g-i*d*g-s*h*y+i*p*y;n[11]=o*f*m-s*l*m-o*a*g+i*l*g+s*a*y-i*f*y;n[15]=s*l*h-o*f*h+o*a*p-i*l*p-s*a*d+i*f*d;n=i*n[0]+a*n[4]+h*n[8]+m*n[12];if(0==n){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/n);return this},translate:function(e){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(e){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(e){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(e){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,n=e.x,r=e.y;e=e.z;t[0]*=n;t[4]*=r;t[8]*=e;t[1]*=n;t[5]*=r;t[9]*=e;t[2]*=n;t[6]*=r;t[10]*=e;t[3]*=n;t[7]*=r;t[11]*=e;return this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,n){this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1);return this},makeRotationX:function(e){var t=Math.cos(e);e=Math.sin(e);this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1);return this},makeRotationY:function(e){var t=Math.cos(e);e=Math.sin(e);this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1);return this},makeRotationZ:function(e){var t=Math.cos(e);e=Math.sin(e);this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,s=e.x,o=e.y,u=e.z,a=i*s,f=i*o;this.set(a*s+n,a*o-r*u,a*u+r*o,0,a*o+r*u,f*o+n,f*u-r*s,0,a*u-r*o,f*u+r*s,i*u*u+n,0,0,0,0,1);return this},makeScale:function(e,t,n){this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1);return this},compose:function(e,t,n){this.makeRotationFromQuaternion(t);this.scale(n);this.setPosition(e);return this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(n,r,i){var s=this.elements,o=e.set(s[0],s[1],s[2]).length(),u=e.set(s[4],s[5],s[6]).length(),f=e.set(s[8],s[9],s[10]).length();0>this.determinant()&&(o=-o);n.x=s[12];n.y=s[13];n.z=s[14];t.elements.set(this.elements);n=1/o;var s=1/u,l=1/f;t.elements[0]*=n;t.elements[1]*=n;t.elements[2]*=n;t.elements[4]*=s;t.elements[5]*=s;t.elements[6]*=s;t.elements[8]*=l;t.elements[9]*=l;t.elements[10]*=l;r.setFromRotationMatrix(t);i.x=o;i.y=u;i.z=f;return this}}(),makeFrustum:function(e,t,n,r,i,s){var o=this.elements;o[0]=2*i/(t-e);o[4]=0;o[8]=(t+e)/(t-e);o[12]=0;o[1]=0;o[5]=2*i/(r-n);o[9]=(r+n)/(r-n);o[13]=0;o[2]=0;o[6]=0;o[10]=-(s+i)/(s-i);o[14]=-2*s*i/(s-i);o[3]=0;o[7]=0;o[11]=-1;o[15]=0;return this},makePerspective:function(e,t,n,r){e=n*Math.tan(THREE.Math.degToRad(.5*e));var i=-e;return this.makeFrustum(i*t,e*t,i,e,n,r)},makeOrthographic:function(e,t,n,r,i,s){var o=this.elements,u=t-e,a=n-r,f=s-i;o[0]=2/u;o[4]=0;o[8]=0;o[12]=-((t+e)/u);o[1]=0;o[5]=2/a;o[9]=0;o[13]=-((n+r)/a);o[2]=0;o[6]=0;o[10]=-2/f;o[14]=-((s+i)/f);o[3]=0;o[7]=0;o[11]=0;o[15]=1;return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}};THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3;this.direction=void 0!==t?t:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){this.origin.copy(e);this.direction.copy(t);return this},copy:function(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){this.origin.copy(this.at(t,e));return this}}(),closestPointToPoint:function(e,t){var n=t||new THREE.Vector3;n.subVectors(e,this.origin);var r=n.dot(this.direction);return 0>r?n.copy(this.origin):n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);if(0>n)return this.origin.distanceTo(t);e.copy(this.direction).multiplyScalar(n).add(this.origin);return e.distanceTo(t)}}(),distanceSqToSegment:function(e,t,n,r){var i=e.clone().add(t).multiplyScalar(.5),s=t.clone().sub(e).normalize(),o=.5*e.distanceTo(t),u=this.origin.clone().sub(i);e=-this.direction.dot(s);t=u.dot(this.direction);var a=-u.dot(s),f=u.lengthSq(),l=Math.abs(1-e*e),c,h;0<=l?(u=e*a-t,c=e*t-a,h=o*l,0<=u?c>=-h?c<=h?(o=1/l,u*=o,c*=o,e=u*(u+e*c+2*t)+c*(e*u+c+2*a)+f):(c=o,u=Math.max(0,-(e*c+t)),e=-u*u+c*(c+2*a)+f):(c=-o,u=Math.max(0,-(e*c+t)),e=-u*u+c*(c+2*a)+f):c<=-h?(u=Math.max(0,-(-e*o+t)),c=0<u?-o:Math.min(Math.max(-o,-a),o),e=-u*u+c*(c+2*a)+f):c<=h?(u=0,c=Math.min(Math.max(-o,-a),o),e=c*(c+2*a)+f):(u=Math.max(0,-(e*o+t)),c=0<u?o:Math.min(Math.max(-o,-a),o),e=-u*u+c*(c+2*a)+f)):(c=0<e?-o:o,u=Math.max(0,-(e*c+t)),e=-u*u+c*(c+2*a)+f);n&&n.copy(this.direction.clone().multiplyScalar(u).add(this.origin));r&&r.copy(s.clone().multiplyScalar(c).add(i));return e},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;e=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=e?e:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var n,r,i,s,o;r=1/this.direction.x;s=1/this.direction.y;o=1/this.direction.z;var u=this.origin;0<=r?(n=(e.min.x-u.x)*r,r*=e.max.x-u.x):(n=(e.max.x-u.x)*r,r*=e.min.x-u.x);0<=s?(i=(e.min.y-u.y)*s,s*=e.max.y-u.y):(i=(e.max.y-u.y)*s,s*=e.min.y-u.y);if(n>s||i>r)return null;if(i>n||n!==n)n=i;if(s<r||r!==r)r=s;0<=o?(i=(e.min.z-u.z)*o,o*=e.max.z-u.z):(i=(e.max.z-u.z)*o,o*=e.min.z-u.z);if(n>o||i>r)return null;if(i>n||n!==n)n=i;if(o<r||r!==r)r=o;return 0>r?null:this.at(0<=n?n:r,t)},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3;return function(i,s,o,u,f){t.subVectors(s,i);n.subVectors(o,i);r.crossVectors(t,n);s=this.direction.dot(r);if(0<s){if(u)return null;u=1}else if(0>s)u=-1,s=-s;else return null;e.subVectors(this.origin,i);i=u*this.direction.dot(n.crossVectors(e,n));if(0>i)return null;o=u*this.direction.dot(t.cross(e));if(0>o||i+o>s)return null;i=-u*e.dot(r);return 0>i?null:this.at(i/s,f)}}(),applyMatrix4:function(e){this.direction.add(this.origin).applyMatrix4(e);this.origin.applyMatrix4(e);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3;this.radius=void 0!==t?t:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){this.center.copy(e);this.radius=t;return this},setFromPoints:function(){var e=new THREE.Box3;return function(t,n){var r=this.center;void 0!==n?r.copy(n):e.setFromPoints(t).center(r);for(var i=0,s=0,o=t.length;s<o;s++)i=Math.max(i,r.distanceToSquared(t[s]));this.radius=Math.sqrt(i);return this}}(),copy:function(e){this.center.copy(e.center);this.radius=e.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new THREE.Vector3;r.copy(e);n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center));return r},getBoundingBox:function(e){e=e||new THREE.Box3;e.set(this.center,this.center);e.expandByScalar(this.radius);return e},applyMatrix4:function(e){this.center.applyMatrix4(e);this.radius*=e.getMaxScaleOnAxis();return this},translate:function(e){this.center.add(e);return this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(e,t,n,r,i,s){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==s?s:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,n,r,i,s){var o=this.planes;o[0].copy(e);o[1].copy(t);o[2].copy(n);o[3].copy(r);o[4].copy(i);o[5].copy(s);return this},copy:function(e){for(var t=this.planes,n=0;6>n;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements;e=n[0];var r=n[1],i=n[2],s=n[3],o=n[4],u=n[5],a=n[6],f=n[7],l=n[8],c=n[9],h=n[10],p=n[11],d=n[12],v=n[13],m=n[14],n=n[15];t[0].setComponents(s-e,f-o,p-l,n-d).normalize();t[1].setComponents(s+e,f+o,p+l,n+d).normalize();t[2].setComponents(s+r,f+u,p+c,n+v).normalize();t[3].setComponents(s-r,f-u,p-c,n-v).normalize();t[4].setComponents(s-i,f-a,p-h,n-m).normalize();t[5].setComponents(s+i,f+a,p+h,n+m).normalize();return this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var n=t.geometry;null===n.boundingSphere&&n.computeBoundingSphere();e.copy(n.boundingSphere);e.applyMatrix4(t.matrixWorld);return this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,n=e.center;e=-e.radius;for(var r=0;6>r;r++)if(t[r].distanceToPoint(n)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n){for(var r=this.planes,i=0;6>i;i++){var s=r[i];e.x=0<s.normal.x?n.min.x:n.max.x;t.x=0<s.normal.x?n.max.x:n.min.x;e.y=0<s.normal.y?n.min.y:n.max.y;t.y=0<s.normal.y?n.max.y:n.min.y;e.z=0<s.normal.z?n.min.z:n.max.z;t.z=0<s.normal.z?n.max.z:n.min.z;var o=s.distanceToPoint(e),s=s.distanceToPoint(t);if(0>o&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,n=0;6>n;n++)if(0>t[n].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0);this.constant=void 0!==t?t:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){this.normal.copy(e);this.constant=t;return this},setComponents:function(e,t,n,r){this.normal.set(e,t,n);this.constant=r;return this},setFromNormalAndCoplanarPoint:function(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n,r,i){r=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();this.setFromNormalAndCoplanarPoint(r,n);return this}}(),copy:function(e){this.normal.copy(e.normal);this.constant=e.constant;return this},normalize:function(){var e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(n)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start);e=this.distanceToPoint(e.end);return 0>t&&0<e||0>e&&0<t},intersectLine:function(){var e=new THREE.Vector3;return function(t,n){var r=n||new THREE.Vector3,i=t.delta(e),s=this.normal.dot(i);if(0==s){if(0==this.distanceToPoint(t.start))return r.copy(t.start)}else return s=-(t.start.dot(this.normal)+this.constant)/s,0>s||1<s?void 0:r.copy(i).multiplyScalar(s).add(t.start)}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Matrix3;return function(r,i){var s=i||n.getNormalMatrix(r),s=e.copy(this.normal).applyMatrix3(s),o=this.coplanarPoint(t);o.applyMatrix4(r);this.setFromNormalAndCoplanarPoint(s,o);return this}}(),translate:function(e){this.constant-=e.dot(this.normal);return this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=Array(36),n=0,r;return function(){for(var i=0;36>i;i++)8==i||13==i||18==i||23==i?t[i]="-":14==i?t[i]="4":(2>=n&&(n=33554432+16777216*Math.random()|0),r=n&15,n>>=4,t[i]=e[19==i?r&3|8:r]);return t.join("")}}(),clamp:function(e,t,n){return e<t?t:e>n?n:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},smoothstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*(3-2*e)},smootherstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:0<e?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e}};THREE.Spline=function(e){function t(e,t,n,r,i,s,o){e=.5*(n-e);r=.5*(r-t);return(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t}this.points=e;var n=[],r={x:0,y:0,z:0},i,s,o,u,a,f,l,c,h;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}};this.getPoint=function(e){i=(this.points.length-1)*e;s=Math.floor(i);o=i-s;n[0]=0===s?s:s-1;n[1]=s;n[2]=s>this.points.length-2?this.points.length-1:s+1;n[3]=s>this.points.length-3?this.points.length-1:s+2;f=this.points[n[0]];l=this.points[n[1]];c=this.points[n[2]];h=this.points[n[3]];u=o*o;a=o*u;r.x=t(f.x,l.x,c.x,h.x,o,u,a);r.y=t(f.y,l.y,c.y,h.y,o,u,a);r.z=t(f.z,l.z,c.z,h.z,o,u,a);return r};this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;e<n;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r};this.getLength=function(e){var t,n,r,i=t=t=0,s=new THREE.Vector3,o=new THREE.Vector3,u=[],a=0;u[0]=0;e||(e=100);n=this.points.length*e;s.copy(this.points[0]);for(e=1;e<n;e++)t=e/n,r=this.getPoint(t),o.copy(r),a+=o.distanceTo(s),s.copy(r),t*=this.points.length-1,t=Math.floor(t),t!=i&&(u[t]=a,i=t);u[u.length]=a;return{chunks:u,total:a}};this.reparametrizeByArcLength=function(e){var t,n,r,i,s,o,u=[],a=new THREE.Vector3,f=this.getLength();u.push(a.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){n=f.chunks[t]-f.chunks[t-1];o=Math.ceil(e*n/f.total);i=(t-1)/(this.points.length-1);s=t/(this.points.length-1);for(n=1;n<o-1;n++)r=i+1/o*n*(s-i),r=this.getPoint(r),u.push(a.copy(r).clone());u.push(a.copy(this.points[t]).clone())}this.points=u}};THREE.Triangle=function(e,t,n){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==t?t:new THREE.Vector3;this.c=void 0!==n?n:new THREE.Vector3};THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,n,r,i){i=i||new THREE.Vector3;i.subVectors(r,n);e.subVectors(t,n);i.cross(e);t=i.lengthSq();return 0<t?i.multiplyScalar(1/Math.sqrt(t)):i.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(r,i,s,o,u){e.subVectors(o,i);t.subVectors(s,i);n.subVectors(r,i);r=e.dot(e);i=e.dot(t);s=e.dot(n);var f=t.dot(t);o=t.dot(n);var l=r*f-i*i;u=u||new THREE.Vector3;if(0==l)return u.set(-2,-1,-1);l=1/l;f=(f*s-i*o)*l;r=(r*o-i*s)*l;return u.set(1-f-r,r,f)}}();THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,n,r,i){t=THREE.Triangle.barycoordFromPoint(t,n,r,i,e);return 0<=t.x&&0<=t.y&&1>=t.x+t.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,n){this.a.copy(e);this.b.copy(t);this.c.copy(n);return this},setFromPointsAndIndices:function(e,t,n,r){this.a.copy(e[t]);this.b.copy(e[n]);this.c.copy(e[r]);return this},copy:function(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){e.subVectors(this.c,this.b);t.subVectors(this.a,this.b);return.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(e){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return e};THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var e=0;this.autoStart&&!this.running&&this.start();if(this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t;this.elapsedTime+=e}return e}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener;e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]);-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var r=n.indexOf(t);-1!==r&&n.splice(r,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=[],r=t.length,i=0;i<r;i++)n[i]=t[i];for(i=0;i<r;i++)n[i].call(this,e)}}}};(function(e){e.Raycaster=function(t,n,r,i){this.ray=new e.Ray(t,n);this.near=r||0;this.far=i||Infinity};var t=new e.Sphere,n=new e.Ray;new e.Plane;new e.Vector3;var r=new e.Vector3,i=new e.Matrix4,s=function(e,t){return e.distance-t.distance},o=new e.Vector3,u=new e.Vector3,a=new e.Vector3,f=function(s,l,p){if(s instanceof e.Sprite){r.setFromMatrixPosition(s.matrixWorld);var v=l.ray.distanceToPoint(r);if(v>s.scale.x)return p;p.push({distance:v,point:s.position,face:null,object:s})}else if(s instanceof e.LOD)r.setFromMatrixPosition(s.matrixWorld),v=l.ray.origin.distanceTo(r),f(s.getObjectForDistance(v),l,p);else if(s instanceof e.Mesh){var m=s.geometry;null===m.boundingSphere&&m.computeBoundingSphere();t.copy(m.boundingSphere);t.applyMatrix4(s.matrixWorld);if(!1===l.ray.isIntersectionSphere(t))return p;i.getInverse(s.matrixWorld);n.copy(l.ray).applyMatrix4(i);if(null!==m.boundingBox&&!1===n.isIntersectionBox(m.boundingBox))return p;if(m instanceof e.BufferGeometry){var y=s.material;if(void 0===y)return p;var w=m.attributes,E,S,x=l.precision;if(void 0!==w.index){var T=w.index.array,N=w.position.array,C=m.offsets;0===C.length&&(C=[{start:0,count:N.length,index:0}]);for(var L=0,A=C.length;L<A;++L)for(var w=C[L].start,O=C[L].index,m=w,M=w+C[L].count;m<M;m+=3){w=O+T[m];E=O+T[m+1];S=O+T[m+2];o.set(N[3*w],N[3*w+1],N[3*w+2]);u.set(N[3*E],N[3*E+1],N[3*E+2]);a.set(N[3*S],N[3*S+1],N[3*S+2]);var _=y.side===e.BackSide?n.intersectTriangle(a,u,o,!0):n.intersectTriangle(o,u,a,y.side!==e.DoubleSide);null!==_&&(_.applyMatrix4(s.matrixWorld),v=l.ray.origin.distanceTo(_),v<x||v<l.near||v>l.far||p.push({distance:v,point:_,indices:[w,E,S],face:null,faceIndex:null,object:s}))}}else for(N=w.position.array,m=0,M=w.position.array.length;m<M;m+=3)w=m,E=m+1,S=m+2,o.set(N[3*w],N[3*w+1],N[3*w+2]),u.set(N[3*E],N[3*E+1],N[3*E+2]),a.set(N[3*S],N[3*S+1],N[3*S+2]),_=y.side===e.BackSide?n.intersectTriangle(a,u,o,!0):n.intersectTriangle(o,u,a,y.side!==e.DoubleSide),null!==_&&(_.applyMatrix4(s.matrixWorld),v=l.ray.origin.distanceTo(_),v<x||v<l.near||v>l.far||p.push({distance:v,point:_,indices:[w,E,S],face:null,faceIndex:null,object:s}))}else if(m instanceof e.Geometry)for(N=s.material instanceof e.MeshFaceMaterial,C=!0===N?s.material.materials:null,x=l.precision,T=m.vertices,L=0,A=m.faces.length;L<A;L++)if(O=m.faces[L],y=!0===N?C[O.materialIndex]:s.material,void 0!==y){w=T[O.a];E=T[O.b];S=T[O.c];if(!0===y.morphTargets){v=m.morphTargets;_=s.morphTargetInfluences;o.set(0,0,0);u.set(0,0,0);a.set(0,0,0);for(var M=0,D=v.length;M<D;M++){var P=_[M];if(0!==P){var H=v[M].vertices;o.x+=(H[O.a].x-w.x)*P;o.y+=(H[O.a].y-w.y)*P;o.z+=(H[O.a].z-w.z)*P;u.x+=(H[O.b].x-E.x)*P;u.y+=(H[O.b].y-E.y)*P;u.z+=(H[O.b].z-E.z)*P;a.x+=(H[O.c].x-S.x)*P;a.y+=(H[O.c].y-S.y)*P;a.z+=(H[O.c].z-S.z)*P}}o.add(w);u.add(E);a.add(S);w=o;E=u;S=a}_=y.side===e.BackSide?n.intersectTriangle(S,E,w,!0):n.intersectTriangle(w,E,S,y.side!==e.DoubleSide);null!==_&&(_.applyMatrix4(s.matrixWorld),v=l.ray.origin.distanceTo(_),v<x||v<l.near||v>l.far||p.push({distance:v,point:_,face:O,faceIndex:L,object:s}))}}else if(s instanceof e.Line){x=l.linePrecision;y=x*x;m=s.geometry;null===m.boundingSphere&&m.computeBoundingSphere();t.copy(m.boundingSphere);t.applyMatrix4(s.matrixWorld);if(!1===l.ray.isIntersectionSphere(t))return p;i.getInverse(s.matrixWorld);n.copy(l.ray).applyMatrix4(i);if(m instanceof e.Geometry)for(T=m.vertices,x=T.length,w=new e.Vector3,E=new e.Vector3,S=s.type===e.LineStrip?1:2,m=0;m<x-1;m+=S)n.distanceSqToSegment(T[m],T[m+1],E,w)>y||(v=n.origin.distanceTo(E),v<l.near||v>l.far||p.push({distance:v,point:w.clone().applyMatrix4(s.matrixWorld),face:null,faceIndex:null,object:s}))}},l=function(e,t,n){e=e.getDescendants();for(var r=0,i=e.length;r<i;r++)f(e[r],t,n)};e.Raycaster.prototype.precision=1e-4;e.Raycaster.prototype.linePrecision=1;e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)};e.Raycaster.prototype.intersectObject=function(e,t){var n=[];!0===t&&l(e,this,n);f(e,this,n);n.sort(s);return n};e.Raycaster.prototype.intersectObjects=function(e,t){for(var n=[],r=0,i=e.length;r<i;r++)f(e[r],this,n),!0===t&&l(e[r],this,n);n.sort(s);return n}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;var e=this;Object.defineProperties(this,{rotation:{enumerable:!0,value:(new THREE.Euler).onChange(function(){e.quaternion.setFromEuler(e.rotation,!1)})},quaternion:{enumerable:!0,value:(new THREE.Quaternion).onChange(function(){e.rotation.setFromQuaternion(e.quaternion,void 0,!1)})},scale:{enumerable:!0,value:new THREE.Vector3(1,1,1)}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");return this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,n){e.setFromAxisAngle(t,n);this.quaternion.multiply(e);return this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,n){e.copy(t);e.applyQuaternion(this.quaternion);this.position.add(e.multiplyScalar(n));return this}}(),translate:function(e,t){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up);this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e);e.parent=this;e.dispatchEvent({type:"added"});this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0;e.dispatchEvent({type:"removed"});this.children.splice(t,1);for(t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,n=this.children.length;t<n;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.id===e||!0===t&&(i=i.getObjectById(e,t),void 0!==i))return i}},getObjectByName:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.name===e||!0===t&&(i=i.getObjectByName(e,t),void 0!==i))return i}},getChildByName:function(e,t){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]);Array.prototype.push.apply(e,this.children);for(var t=0,n=this.children.length;t<n;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){void 0===e&&(e=new THREE.Object3D);void 0===t&&(t=!0);e.name=this.name;e.up.copy(this.up);e.position.copy(this.position);e.quaternion.copy(this.quaternion);e.scale.copy(this.scale);e.renderDepth=this.renderDepth;e.rotationAutoUpdate=this.rotationAutoUpdate;e.matrix.copy(this.matrix);e.matrixWorld.copy(this.matrixWorld);e.matrixAutoUpdate=this.matrixAutoUpdate;e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;e.visible=this.visible;e.castShadow=this.castShadow;e.receiveShadow=this.receiveShadow;e.frustumCulled=this.frustumCulled;e.userData=JSON.parse(JSON.stringify(this.userData));if(!0===t)for(var n=0;n<this.children.length;n++)e.add(this.children[n].clone());return e}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function e(){if(l===h){var e=new THREE.RenderableVertex;c.push(e);h++;l++;return e}return c[l++]}function t(){if(d===m){var e=new THREE.RenderableFace;v.push(e);m++;d++;return e}return v[d++]}function n(){if(y===w){var e=new THREE.RenderableLine;b.push(e);w++;y++;return e}return b[y++]}function r(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function i(e,t){var n=0,r=1,i=e.z+e.w,s=t.z+t.w,o=-e.z+e.w,u=-t.z+t.w;if(0<=i&&0<=s&&0<=o&&0<=u)return!0;if(0>i&&0>s||0>o&&0>u)return!1;0>i?n=Math.max(n,i/(i-s)):0>s&&(r=Math.min(r,i/(i-s)));0>o?n=Math.max(n,o/(o-u)):0>u&&(r=Math.min(r,o/(o-u)));if(r<n)return!1;e.lerp(t,n);t.lerp(e,1-r);return!0}var s,o,u=[],a=0,f,l,c=[],h=0,p,d,v=[],m=0,g,y,b=[],w=0,E,S,x=[],T=0,N={objects:[],lights:[],elements:[]},C=new THREE.Vector3,k=new THREE.Vector3,L=new THREE.Vector3,A=new THREE.Vector3,O=new THREE.Vector4,M=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),_=new THREE.Box3,D=Array(3),P=new THREE.Matrix4,H=new THREE.Matrix4,B,j=new THREE.Matrix4,F=new THREE.Matrix3,I=new THREE.Frustum,q=new THREE.Vector4,R=new THREE.Vector4;this.projectVector=function(e,t){t.matrixWorldInverse.getInverse(t.matrixWorld);H.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);return e.applyProjection(H)};this.unprojectVector=function(){var e=new THREE.Matrix4;return function(t,n){e.getInverse(n.projectionMatrix);H.multiplyMatrices(n.matrixWorld,e);return t.applyProjection(H)}}();this.pickingRay=function(e,t){e.z=-1;var n=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,t);this.unprojectVector(n,t);n.sub(e).normalize();return new THREE.Raycaster(e,n)};var U=function(e){if(!1!==e.visible){if(e instanceof THREE.Light)N.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite)if(!1===e.frustumCulled||!0===I.intersectsObject(e)){if(o===a){var t=new THREE.RenderableObject;u.push(t);a++;o++;s=t}else s=u[o++];s.id=e.id;s.object=e;null!==e.renderDepth?s.z=e.renderDepth:(A.setFromMatrixPosition(e.matrixWorld),A.applyProjection(H),s.z=A.z);N.objects.push(s)}for(var t=0,n=e.children.length;t<n;t++)U(e.children[t])}},z=new function(){var r=[],i=[],s=null,o=null,u=new THREE.Matrix3,a=function(e){var t=e.positionWorld,n=e.positionScreen;t.copy(e.position).applyMatrix4(B);n.copy(t).applyMatrix4(H);t=1/n.w;n.x*=t;n.y*=t;n.z*=t;e.visible=-1<=n.x&&1>=n.x&&-1<=n.y&&1>=n.y&&-1<=n.z&&1>=n.z},l=function(e,t,n){if(!0===e.visible||!0===t.visible||!0===n.visible)return!0;D[0]=e.positionScreen;D[1]=t.positionScreen;D[2]=n.positionScreen;return M.isIntersectionBox(_.setFromPoints(D))},h=function(e,t,n){return 0>(n.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(n.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)};return{setObject:function(e){s=e;o=s.material;u.getNormalMatrix(s.matrixWorld);r.length=0;i.length=0},projectVertex:a,checkTriangleVisibility:l,checkBackfaceCulling:h,pushVertex:function(t,n,r){f=e();f.position.set(t,n,r);a(f)},pushNormal:function(e,t,n){r.push(e,t,n)},pushUv:function(e,t){i.push(e,t)},pushLine:function(e,t){var r=c[e],i=c[t];g=n();g.id=s.id;g.v1.copy(r);g.v2.copy(i);g.z=(r.positionScreen.z+i.positionScreen.z)/2;g.material=s.material;N.elements.push(g)},pushTriangle:function(e,n,a){var f=c[e],d=c[n],v=c[a];if(!1!==l(f,d,v)&&(o.side===THREE.DoubleSide||!0===h(f,d,v))){p=t();p.id=s.id;p.v1.copy(f);p.v2.copy(d);p.v3.copy(v);p.z=(f.positionScreen.z+d.positionScreen.z+v.positionScreen.z)/3;for(f=0;3>f;f++)d=3*arguments[f],v=p.vertexNormalsModel[f],v.set(r[d],r[d+1],r[d+2]),v.applyMatrix3(u).normalize(),d=2*arguments[f],p.uvs[f].set(i[d],i[d+1]);p.vertexNormalsLength=3;p.material=s.material;N.elements.push(p)}}}};this.projectScene=function(s,u,a,f){var h,v,m,b,w,A,M,_;S=y=d=0;N.elements.length=0;!0===s.autoUpdate&&s.updateMatrixWorld();void 0===u.parent&&u.updateMatrixWorld();P.copy(u.matrixWorldInverse.getInverse(u.matrixWorld));H.multiplyMatrices(u.projectionMatrix,P);I.setFromMatrix(H);o=0;N.objects.length=0;N.lights.length=0;U(s);!0===a&&N.objects.sort(r);s=0;for(a=N.objects.length;s<a;s++)if(h=N.objects[s].object,v=h.geometry,z.setObject(h),B=h.matrixWorld,l=0,h instanceof THREE.Mesh)if(v instanceof THREE.BufferGeometry){if(A=v.attributes,h=v.offsets,void 0!==A.position){M=A.position.array;v=0;for(b=M.length;v<b;v+=3)z.pushVertex(M[v],M[v+1],M[v+2]);if(void 0!==A.normal)for(_=A.normal.array,v=0,b=_.length;v<b;v+=3)z.pushNormal(_[v],_[v+1],_[v+2]);if(void 0!==A.uv)for(_=A.uv.array,v=0,b=_.length;v<b;v+=2)z.pushUv(_[v],_[v+1]);if(void 0!==A.index)if(A=A.index.array,0<h.length)for(s=0;s<h.length;s++)for(b=h[s],M=b.index,v=b.start,b=b.start+b.count;v<b;v+=3)z.pushTriangle(A[v]+M,A[v+1]+M,A[v+2]+M);else for(v=0,b=A.length;v<b;v+=3)z.pushTriangle(A[v],A[v+1],A[v+2]);else for(v=0,b=M.length/3;v<b;v+=3)z.pushTriangle(v,v+1,v+2)}}else{if(v instanceof THREE.Geometry){m=v.vertices;b=v.faces;A=v.faceVertexUvs[0];F.getNormalMatrix(B);M=h.material instanceof THREE.MeshFaceMaterial;_=!0===M?h.material:null;for(var D=0,$=m.length;D<$;D++){var Z=m[D];z.pushVertex(Z.x,Z.y,Z.z)}D=0;for($=b.length;D<$;D++){m=b[D];var et=!0===M?_.materials[m.materialIndex]:h.material;if(void 0!==et){var tt=et.side,Z=c[m.a],nt=c[m.b],rt=c[m.c];if(!0===et.morphTargets){w=v.morphTargets;var it=h.morphTargetInfluences,st=Z.position,ot=nt.position,ut=rt.position;C.set(0,0,0);k.set(0,0,0);L.set(0,0,0);for(var at=0,ft=w.length;at<ft;at++){var lt=it[at];if(0!==lt){var ct=w[at].vertices;C.x+=(ct[m.a].x-st.x)*lt;C.y+=(ct[m.a].y-st.y)*lt;C.z+=(ct[m.a].z-st.z)*lt;k.x+=(ct[m.b].x-ot.x)*lt;k.y+=(ct[m.b].y-ot.y)*lt;k.z+=(ct[m.b].z-ot.z)*lt;L.x+=(ct[m.c].x-ut.x)*lt;L.y+=(ct[m.c].y-ut.y)*lt;L.z+=(ct[m.c].z-ut.z)*lt}}Z.position.add(C);nt.position.add(k);rt.position.add(L);z.projectVertex(Z);z.projectVertex(nt);z.projectVertex(rt)}if(!1!==z.checkTriangleVisibility(Z,nt,rt)){it=z.checkBackfaceCulling(Z,nt,rt);if(tt!==THREE.DoubleSide){if(tt===THREE.FrontSide&&!1===it)continue;if(tt===THREE.BackSide&&!0===it)continue}p=t();p.id=h.id;p.v1.copy(Z);p.v2.copy(nt);p.v3.copy(rt);p.normalModel.copy(m.normal);!1!==it||tt!==THREE.BackSide&&tt!==THREE.DoubleSide||p.normalModel.negate();p.normalModel.applyMatrix3(F).normalize();w=m.vertexNormals;st=0;for(ot=Math.min(w.length,3);st<ot;st++)ut=p.vertexNormalsModel[st],ut.copy(w[st]),!1!==it||tt!==THREE.BackSide&&tt!==THREE.DoubleSide||ut.negate(),ut.applyMatrix3(F).normalize();p.vertexNormalsLength=w.length;tt=A[D];if(void 0!==tt)for(w=0;3>w;w++)p.uvs[w].copy(tt[w]);p.color=m.color;p.material=et;p.z=(Z.positionScreen.z+nt.positionScreen.z+rt.positionScreen.z)/3;N.elements.push(p)}}}}}else if(h instanceof THREE.Line)if(v instanceof THREE.BufferGeometry){if(A=v.attributes,void 0!==A.position){M=A.position.array;v=0;for(b=M.length;v<b;v+=3)z.pushVertex(M[v],M[v+1],M[v+2]);if(void 0!==A.index)for(A=A.index.array,v=0,b=A.length;v<b;v+=2)z.pushLine(A[v],A[v+1]);else for(v=0,b=M.length/3-1;v<b;v++)z.pushLine(v,v+1)}}else{if(v instanceof THREE.Geometry&&(j.multiplyMatrices(H,B),m=h.geometry.vertices,0!==m.length))for(Z=e(),Z.positionScreen.copy(m[0]).applyMatrix4(j),v=h.type===THREE.LinePieces?2:1,D=1,$=m.length;D<$;D++)Z=e(),Z.positionScreen.copy(m[D]).applyMatrix4(j),0<(D+1)%v||(nt=c[l-2],q.copy(Z.positionScreen),R.copy(nt.positionScreen),!0===i(q,R)&&(q.multiplyScalar(1/q.w),R.multiplyScalar(1/R.w),g=n(),g.id=h.id,g.v1.positionScreen.copy(q),g.v2.positionScreen.copy(R),g.z=Math.max(q.z,R.z),g.material=h.material,h.material.vertexColors===THREE.VertexColors&&(g.vertexColors[0].copy(h.geometry.colors[D]),g.vertexColors[1].copy(h.geometry.colors[D-1])),N.elements.push(g)))}else h instanceof THREE.Sprite&&(O.set(B.elements[12],B.elements[13],B.elements[14],1),O.applyMatrix4(H),v=1/O.w,O.z*=v,-1<=O.z&&1>=O.z&&(S===T?(b=new THREE.RenderableSprite,x.push(b),T++,S++,E=b):E=x[S++],E.id=h.id,E.x=O.x*v,E.y=O.y*v,E.z=O.z,E.object=h,E.rotation=h.rotation,E.scale.x=h.scale.x*Math.abs(E.x-(O.x+u.projectionMatrix.elements[0])/(O.w+u.projectionMatrix.elements[12])),E.scale.y=h.scale.y*Math.abs(E.y-(O.y+u.projectionMatrix.elements[5])/(O.w+u.projectionMatrix.elements[13])),E.material=h.material,N.elements.push(E)));!0===f&&N.elements.sort(r);return N}};THREE.Face3=function(e,t,n,r,i,s){this.a=e;this.b=t;this.c=n;this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3;this.vertexNormals=r instanceof Array?r:[];this.color=i instanceof THREE.Color?i:new THREE.Color;this.vertexColors=i instanceof Array?i:[];this.vertexTangents=[];this.materialIndex=void 0!==s?s:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.materialIndex=this.materialIndex;var t,n;t=0;for(n=this.vertexNormals.length;t<n;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();t=0;for(n=this.vertexColors.length;t<n;t++)e.vertexColors[t]=this.vertexColors[t].clone();t=0;for(n=this.vertexTangents.length;t<n;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}};THREE.Face4=function(e,t,n,r,i,s,o){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(e,t,n,i,s,o)};THREE.BufferAttribute=function(){};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(e){this.array.set(e)},setX:function(e,t){this.array[e*this.itemSize]=t},setY:function(e,t){this.array[e*this.itemSize+1]=t},setZ:function(e,t){this.array[e*this.itemSize+2]=t},setXY:function(e,t,n){e*=this.itemSize;this.array[e]=t;this.array[e+1]=n},setXYZ:function(e,t,n,r){e*=this.itemSize;this.array[e]=t;this.array[e+1]=n;this.array[e+2]=r},setXYZW:function(e,t,n,r,i){e*=this.itemSize;this.array[e]=t;this.array[e+1]=n;this.array[e+2]=r;this.array[e+3]=i}};THREE.Int8Attribute=function(e,t){this.array=new Int8Array(e*t);this.itemSize=t};THREE.Int8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint8Attribute=function(e,t){this.array=new Uint8Array(e*t);this.itemSize=t};THREE.Uint8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint8ClampedAttribute=function(e,t){this.array=new Uint8ClampedArray(e*t);this.itemSize=t};THREE.Uint8ClampedAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Int16Attribute=function(e,t){this.array=new Int16Array(e*t);this.itemSize=t};THREE.Int16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint16Attribute=function(e,t){this.array=new Uint16Array(e*t);this.itemSize=t};THREE.Uint16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Int32Attribute=function(e,t){this.array=new Int32Array(e*t);this.itemSize=t};THREE.Int32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint32Attribute=function(e,t){this.array=new Uint32Array(e*t);this.itemSize=t};THREE.Uint32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Float32Attribute=function(e,t){this.array=new Float32Array(e*t);this.itemSize=t};THREE.Float32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Float64Attribute=function(e,t){this.array=new Float64Array(e*t);this.itemSize=t};THREE.Float64Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t,n){!1===t instanceof THREE.BufferAttribute?(console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute )."),this.attributes[e]={array:t,itemSize:n}):this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,n){this.drawcalls.push({start:e,count:t,index:void 0!==n?n:0})},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);t=this.attributes.normal;void 0!==t&&((new THREE.Matrix3).getNormalMatrix(e).applyToVector3Array(t.array),t.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox;3<=e.length&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var n=3,r=e.length;n<r;n+=3){var i=e[n],s=e[n+1],o=e[n+2];i<t.min.x?t.min.x=i:i>t.max.x&&(t.max.x=i);s<t.min.y?t.min.y=s:s>t.max.y&&(t.max.y=s);o<t.min.z?t.min.z=o:o>t.max.z&&(t.max.z=o)}}if(void 0===e||0===e.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var n=this.attributes.position.array;if(n){e.makeEmpty();for(var r=this.boundingSphere.center,i=0,s=n.length;i<s;i+=3)t.set(n[i],n[i+1],n[i+2]),e.addPoint(t);e.center(r);for(var o=0,i=0,s=n.length;i<s;i+=3)t.set(n[i],n[i+1],n[i+2]),o=Math.max(o,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(o)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var e,t,n,r;e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else for(e=0,t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0;var i=this.attributes.position.array,s=this.attributes.normal.array,o,u,a,f,l,c,h=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,v=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,y=0<this.offsets.length?this.offsets:[{start:0,count:g.length,index:0}];n=0;for(r=y.length;n<r;++n){t=y[n].start;o=y[n].count;var b=y[n].index;e=t;for(t+=o;e<t;e+=3)o=b+g[e],u=b+g[e+1],a=b+g[e+2],f=i[3*o],l=i[3*o+1],c=i[3*o+2],h.set(f,l,c),f=i[3*u],l=i[3*u+1],c=i[3*u+2],p.set(f,l,c),f=i[3*a],l=i[3*a+1],c=i[3*a+2],d.set(f,l,c),v.subVectors(d,p),m.subVectors(h,p),v.cross(m),s[3*o]+=v.x,s[3*o+1]+=v.y,s[3*o+2]+=v.z,s[3*u]+=v.x,s[3*u+1]+=v.y,s[3*u+2]+=v.z,s[3*a]+=v.x,s[3*a+1]+=v.y,s[3*a+2]+=v.z}}else for(e=0,t=i.length;e<t;e+=9)f=i[e],l=i[e+1],c=i[e+2],h.set(f,l,c),f=i[e+3],l=i[e+4],c=i[e+5],p.set(f,l,c),f=i[e+6],l=i[e+7],c=i[e+8],d.set(f,l,c),v.subVectors(d,p),m.subVectors(h,p),v.cross(m),s[e]=v.x,s[e+1]=v.y,s[e+2]=v.z,s[e+3]=v.x,s[e+4]=v.y,s[e+5]=v.z,s[e+6]=v.x,s[e+7]=v.y,s[e+8]=v.z;this.normalizeNormals();this.normalsNeedUpdate=!0}},computeTangents:function(){function e(e,t,n){c=r[3*e];h=r[3*e+1];p=r[3*e+2];d=r[3*t];v=r[3*t+1];m=r[3*t+2];g=r[3*n];y=r[3*n+1];b=r[3*n+2];w=s[2*e];E=s[2*e+1];S=s[2*t];x=s[2*t+1];T=s[2*n];N=s[2*n+1];C=d-c;k=g-c;L=v-h;A=y-h;O=m-p;M=b-p;_=S-w;D=T-w;P=x-E;H=N-E;B=1/(_*H-D*P);j.set((H*C-P*k)*B,(H*L-P*A)*B,(H*O-P*M)*B);F.set((_*k-D*C)*B,(_*A-D*L)*B,(_*M-D*O)*B);a[e].add(j);a[t].add(j);a[n].add(j);f[e].add(F);f[t].add(F);f[n].add(F)}function t(e){J.x=i[3*e];J.y=i[3*e+1];J.z=i[3*e+2];K.copy(J);G=a[e];V.copy(G);V.sub(J.multiplyScalar(J.dot(G))).normalize();$.crossVectors(K,G);Y=$.dot(f[e]);Q=0>Y?-1:1;u[4*e]=V.x;u[4*e+1]=V.y;u[4*e+2]=V.z;u[4*e+3]=Q}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var n=this.attributes.index.array,r=this.attributes.position.array,i=this.attributes.normal.array,s=this.attributes.uv.array,o=r.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*o)});for(var u=this.attributes.tangent.array,a=[],f=[],l=0;l<o;l++)a[l]=new THREE.Vector3,f[l]=new THREE.Vector3;var c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H,B,j=new THREE.Vector3,F=new THREE.Vector3,I,q,R,U,z,W=this.offsets,l=0;for(q=W.length;l<q;++l){I=W[l].start;R=W[l].count;var X=W[l].index,o=I;for(I+=R;o<I;o+=3)R=X+n[o],U=X+n[o+1],z=X+n[o+2],e(R,U,z)}var V=new THREE.Vector3,$=new THREE.Vector3,J=new THREE.Vector3,K=new THREE.Vector3,Q,G,Y,l=0;for(q=W.length;l<q;++l)for(I=W[l].start,R=W[l].count,X=W[l].index,o=I,I+=R;o<I;o+=3)R=X+n[o],U=X+n[o+1],z=X+n[o+2],t(R),t(U),t(z)}},computeOffsets:function(e){var t=e;void 0===e&&(t=65535);Date.now();e=this.attributes.index.array;for(var n=this.attributes.position.array,r=e.length/3,i=new Uint16Array(e.length),s=0,o=0,u=[{start:0,count:0,index:0}],a=u[0],f=0,l=0,c=new Int32Array(6),h=new Int32Array(n.length),p=new Int32Array(n.length),d=0;d<n.length;d++)h[d]=-1,p[d]=-1;for(n=0;n<r;n++){for(var v=l=0;3>v;v++)d=e[3*n+v],-1==h[d]?(c[2*v]=d,c[2*v+1]=-1,l++):h[d]<a.index?(c[2*v]=d,c[2*v+1]=-1,f++):(c[2*v]=d,c[2*v+1]=h[d]);if(o+l>a.index+t)for(a={start:s,count:0,index:o},u.push(a),l=0;6>l;l+=2)v=c[l+1],-1<v&&v<a.index&&(c[l+1]=-1);for(l=0;6>l;l+=2)d=c[l],v=c[l+1],-1===v&&(v=o++),h[d]=v,p[v]=d,i[s++]=v-a.index,a.count++}this.reorderBuffers(i,p,o);return this.offsets=u},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,n,r,i=0,s=e.length;i<s;i+=3)t=e[i],n=e[i+1],r=e[i+2],t=1/Math.sqrt(t*t+n*n+r*r),e[i]*=t,e[i+1]*=t,e[i+2]*=t},reorderBuffers:function(e,t,n){var r={},i=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],s;for(s in this.attributes)if("index"!=s)for(var o=this.attributes[s].array,u=0,a=i.length;u<a;u++){var f=i[u];if(o instanceof f){r[s]=new f(this.attributes[s].itemSize*n);break}}for(i=0;i<n;i++)for(s in o=t[i],this.attributes)if("index"!=s)for(var u=this.attributes[s].array,a=this.attributes[s].itemSize,f=r[s],l=0;l<a;l++)f[i*a+l]=u[o*a+l];this.attributes.index.array=e;for(s in this.attributes)"index"!=s&&(this.attributes[s].array=r[s],this.attributes[s].numItems=this.attributes[s].itemSize*n)},clone:function(){var e=new THREE.BufferGeometry,t=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],n;for(n in this.attributes){for(var r=this.attributes[n],i=r.array,s={itemSize:r.itemSize,array:null},r=0,o=t.length;r<o;r++){var u=t[r];if(i instanceof u){s.array=new u(i);break}}e.attributes[n]=s}r=0;for(o=this.offsets.length;r<o;r++)t=this.offsets[r],e.offsets.push({start:t.start,index:t.index,count:t.count});return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++)this.vertices[n].applyMatrix4(e);n=0;for(r=this.faces.length;n<r;n++){e=this.faces[n];e.normal.applyMatrix3(t).normalize();for(var i=0,s=e.vertexNormals.length;i<s;i++)e.vertexNormals[i].applyMatrix3(t).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],s=this.vertices[i.a],o=this.vertices[i.b];e.subVectors(this.vertices[i.c],o);t.subVectors(s,o);e.cross(t);e.normalize();i.normal.copy(e)}},computeVertexNormals:function(e){var t,n,r;r=Array(this.vertices.length);t=0;for(n=this.vertices.length;t<n;t++)r[t]=new THREE.Vector3;if(e){var i,s,o,u=new THREE.Vector3,a=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],i=this.vertices[n.a],s=this.vertices[n.b],o=this.vertices[n.c],u.subVectors(o,s),a.subVectors(i,s),u.cross(a),r[n.a].add(u),r[n.b].add(u),r[n.c].add(u)}else for(e=0,t=this.faces.length;e<t;e++)n=this.faces[e],r[n.a].add(n.normal),r[n.b].add(n.normal),r[n.c].add(n.normal);t=0;for(n=this.vertices.length;t<n;t++)r[t].normalize();e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],n.vertexNormals[0]=r[n.a].clone(),n.vertexNormals[1]=r[n.b].clone(),n.vertexNormals[2]=r[n.c].clone()},computeMorphNormals:function(){var e,t,n,r,i;n=0;for(r=this.faces.length;n<r;n++)for(i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var s=new THREE.Geometry;s.faces=this.faces;e=0;for(t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];i=this.morphNormals[e].faceNormals;var o=this.morphNormals[e].vertexNormals,u,a;n=0;for(r=this.faces.length;n<r;n++)u=new THREE.Vector3,a={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},i.push(u),o.push(a)}o=this.morphNormals[e];s.vertices=this.morphTargets[e].vertices;s.computeFaceNormals();s.computeVertexNormals();n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],u=o.faceNormals[n],a=o.vertexNormals[n],u.copy(i.normal),a.a.copy(i.vertexNormals[0]),a.b.copy(i.vertexNormals[1]),a.c.copy(i.vertexNormals[2])}n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){var e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g=[],y=[];n=new THREE.Vector3;var b=new THREE.Vector3,w=new THREE.Vector3,E=new THREE.Vector3,S=new THREE.Vector3;e=0;for(t=this.vertices.length;e<t;e++)g[e]=new THREE.Vector3,y[e]=new THREE.Vector3;e=0;for(t=this.faces.length;e<t;e++)i=this.faces[e],s=this.faceVertexUvs[0][e],r=i.a,m=i.b,i=i.c,o=this.vertices[r],u=this.vertices[m],a=this.vertices[i],f=s[0],l=s[1],c=s[2],s=u.x-o.x,h=a.x-o.x,p=u.y-o.y,d=a.y-o.y,u=u.z-o.z,o=a.z-o.z,a=l.x-f.x,v=c.x-f.x,l=l.y-f.y,f=c.y-f.y,c=1/(a*f-v*l),n.set((f*s-l*h)*c,(f*p-l*d)*c,(f*u-l*o)*c),b.set((a*h-v*s)*c,(a*d-v*p)*c,(a*o-v*u)*c),g[r].add(n),g[m].add(n),g[i].add(n),y[r].add(b),y[m].add(b),y[i].add(b);b=["a","b","c","d"];e=0;for(t=this.faces.length;e<t;e++)for(i=this.faces[e],n=0;n<Math.min(i.vertexNormals.length,3);n++)S.copy(i.vertexNormals[n]),r=i[b[n]],m=g[r],w.copy(m),w.sub(S.multiplyScalar(S.dot(m))).normalize(),E.crossVectors(i.vertexNormals[n],m),r=E.dot(y[r]),r=0>r?-1:1,i.vertexTangents[n]=new THREE.Vector4(w.x,w.y,w.z,r);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;n<r;n++)0<n&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!1===e instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);else{var r,i=this.vertices.length,s=this.vertices,o=e.vertices,u=this.faces,a=e.faces,f=this.faceVertexUvs[0];e=e.faceVertexUvs[0];void 0===n&&(n=0);void 0!==t&&(r=(new THREE.Matrix3).getNormalMatrix(t));for(var l=0,c=o.length;l<c;l++){var h=o[l].clone();void 0!==t&&h.applyMatrix4(t);s.push(h)}l=0;for(c=a.length;l<c;l++){var o=a[l],p,d=o.vertexNormals,v=o.vertexColors,h=new THREE.Face3(o.a+i,o.b+i,o.c+i);h.normal.copy(o.normal);void 0!==r&&h.normal.applyMatrix3(r).normalize();t=0;for(s=d.length;t<s;t++)p=d[t].clone(),void 0!==r&&p.applyMatrix3(r).normalize(),h.vertexNormals.push(p);h.color.copy(o.color);t=0;for(s=v.length;t<s;t++)p=v[t],h.vertexColors.push(p.clone());h.materialIndex=o.materialIndex+n;u.push(h)}l=0;for(c=e.length;l<c;l++)if(n=e[l],r=[],void 0!==n){t=0;for(s=n.length;t<s;t++)r.push(new THREE.Vector2(n[t].x,n[t].y));f.push(r)}}},mergeVertices:function(){var e={},t=[],n=[],r,i=Math.pow(10,4),s,o;s=0;for(o=this.vertices.length;s<o;s++)r=this.vertices[s],r=Math.round(r.x*i)+"_"+Math.round(r.y*i)+"_"+Math.round(r.z*i),void 0===e[r]?(e[r]=s,t.push(this.vertices[s]),n[s]=t.length-1):n[s]=n[e[r]];e=[];s=0;for(o=this.faces.length;s<o;s++)for(i=this.faces[s],i.a=n[i.a],i.b=n[i.b],i.c=n[i.c],i=[i.a,i.b,i.c],r=0;3>r;r++)if(i[r]==i[(r+1)%3]){e.push(s);break}for(s=e.length-1;0<=s;s--)for(i=e[s],this.faces.splice(i,1),n=0,o=this.faceVertexUvs.length;n<o;n++)this.faceVertexUvs[n].splice(i,1);s=this.vertices.length-t.length;this.vertices=t;return s},makeGroups:function(){var e=0;return function(t,n){var r,i,s,o,u={},f=this.morphTargets.length,l=this.morphNormals.length;this.geometryGroups={};r=0;for(i=this.faces.length;r<i;r++)s=this.faces[r],s=t?s.materialIndex:0,s in u||(u[s]={hash:s,counter:0}),o=u[s].hash+"_"+u[s].counter,o in this.geometryGroups||(this.geometryGroups[o]={faces3:[],materialIndex:s,vertices:0,numMorphTargets:f,numMorphNormals:l}),this.geometryGroups[o].vertices+3>n&&(u[s].counter+=1,o=u[s].hash+"_"+u[s].counter,o in this.geometryGroups||(this.geometryGroups[o]={faces3:[],materialIndex:s,vertices:0,numMorphTargets:f,numMorphNormals:l})),this.geometryGroups[o].faces3.push(r),this.geometryGroups[o].vertices+=3;this.geometryGroupsList=[];for(var c in this.geometryGroups)this.geometryGroups[c].id=e++,this.geometryGroupsList.push(this.geometryGroups[c])}}(),clone:function(){for(var e=new THREE.Geometry,t=this.vertices,n=0,r=t.length;n<r;n++)e.vertices.push(t[n].clone());t=this.faces;n=0;for(r=t.length;n<r;n++)e.faces.push(t[n].clone());t=this.faceVertexUvs[0];n=0;for(r=t.length;n<r;n++){for(var i=t[n],s=[],o=0,u=i.length;o<u;o++)s.push(new THREE.Vector2(i[o].x,i[o].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up);this.quaternion.setFromRotationMatrix(e)}}();THREE.Camera.prototype.clone=function(e){void 0===e&&(e=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,e);e.matrixWorldInverse.copy(this.matrixWorldInverse);e.projectionMatrix.copy(this.projectionMatrix);return e};THREE.OrthographicCamera=function(e,t,n,r,i,s){THREE.Camera.call(this);this.left=e;this.right=t;this.top=n;this.bottom=r;this.near=void 0!==i?i:.1;this.far=void 0!==s?s:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,e);e.left=this.left;e.right=this.right;e.top=this.top;e.bottom=this.bottom;e.near=this.near;e.far=this.far;return e};THREE.PerspectiveCamera=function(e,t,n,r){THREE.Camera.call(this);this.fov=void 0!==e?e:50;this.aspect=void 0!==t?t:1;this.near=void 0!==n?n:.1;this.far=void 0!==r?r:2e3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,n,r,i,s){this.fullWidth=e;this.fullHeight=t;this.x=n;this.y=r;this.width=i;this.height=s;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,n=-t,r=e*n,e=Math.abs(e*t-r),n=Math.abs(t-n);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,e);e.fov=this.fov;e.aspect=this.aspect;e.near=this.near;e.far=this.far;return e};THREE.Light=function(e){THREE.Object3D.call(this);this.color=new THREE.Color(e)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(e){void 0===e&&(e=new THREE.Light);THREE.Object3D.prototype.clone.call(this,e);e.color.copy(this.color);return e};THREE.AmbientLight=function(e){THREE.Light.call(this,e)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,e);return e};THREE.AreaLight=function(e,t){THREE.Light.call(this,e);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==t?t:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==t?t:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;e.shadowCameraNear=this.shadowCameraNear;e.shadowCameraFar=this.shadowCameraFar;e.shadowCameraLeft=this.shadowCameraLeft;e.shadowCameraRight=this.shadowCameraRight;e.shadowCameraTop=this.shadowCameraTop;e.shadowCameraBottom=this.shadowCameraBottom;e.shadowCameraVisible=this.shadowCameraVisible;e.shadowBias=this.shadowBias;e.shadowDarkness=this.shadowDarkness;e.shadowMapWidth=this.shadowMapWidth;e.shadowMapHeight=this.shadowMapHeight;e.shadowCascade=this.shadowCascade;e.shadowCascadeOffset.copy(this.shadowCascadeOffset);e.shadowCascadeCount=this.shadowCascadeCount;e.shadowCascadeBias=this.shadowCascadeBias.slice(0);e.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);e.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);e.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);e.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return e};THREE.HemisphereLight=function(e,t,n){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(t);this.intensity=void 0!==n?n:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,e);e.groundColor.copy(this.groundColor);e.intensity=this.intensity;return e};THREE.PointLight=function(e,t,n){THREE.Light.call(this,e);this.intensity=void 0!==t?t:1;this.distance=void 0!==n?n:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;THREE.Light.prototype.clone.call(this,e);e.intensity=this.intensity;e.distance=this.distance;return e};THREE.SpotLight=function(e,t,n,r,i){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==t?t:1;this.distance=void 0!==n?n:0;this.angle=void 0!==r?r:Math.PI/3;this.exponent=void 0!==i?i:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.distance=this.distance;e.angle=this.angle;e.exponent=this.exponent;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;e.shadowCameraNear=this.shadowCameraNear;e.shadowCameraFar=this.shadowCameraFar;e.shadowCameraFov=this.shadowCameraFov;e.shadowCameraVisible=this.shadowCameraVisible;e.shadowBias=this.shadowBias;e.shadowDarkness=this.shadowDarkness;e.shadowMapWidth=this.shadowMapWidth;e.shadowMapHeight=this.shadowMapHeight;return e};THREE.Cache=function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(e,t){this.files[e]=t},get:function(e){return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");e.style.position="absolute";e.style.right="0px";e.style.top="0px";e.style.fontSize="0.8em";e.style.textAlign="left";e.style.background="rgba(0,0,0,0.25)";e.style.color="#fff";e.style.width="120px";e.style.padding="0.5em 0.5em 0.5em 0.5em";e.style.zIndex=1e3;e.innerHTML="Loading ...";return e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){e=e.split("/");if(1===e.length)return"./";e.pop();return e.join("/")+"/"},initMaterials:function(e,t){for(var n=[],r=0;r<e.length;++r)n[r]=this.createMaterial(e[r],t);return n},needsTangents:function(e){for(var t=0,n=e.length;t<n;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function n(e){e=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(e))}function r(e,r,i,o,u,a,l){var h=/\.dds$/i.test(i),p=t+i;if(h){var d=THREE.ImageUtils.loadCompressedTexture(p);e[r]=d}else d=document.createElement("canvas"),e[r]=new THREE.Texture(d);e[r].sourceFile=i;o&&(e[r].repeat.set(o[0],o[1]),1!==o[0]&&(e[r].wrapS=THREE.RepeatWrapping),1!==o[1]&&(e[r].wrapT=THREE.RepeatWrapping));u&&e[r].offset.set(u[0],u[1]);a&&(i={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==i[a[0]]&&(e[r].wrapS=i[a[0]]),void 0!==i[a[1]]&&(e[r].wrapT=i[a[1]]));l&&(e[r].anisotropy=l);h||(d=e[r],s.imageLoader.crossOrigin=s.crossOrigin,s.imageLoader.load(p,function(e){if(!1===THREE.Math.isPowerOfTwo(e.width)||!1===THREE.Math.isPowerOfTwo(e.height)){var t=n(e.width),r=n(e.height);d.image.width=t;d.image.height=r;d.image.getContext("2d").drawImage(e,0,0,t,r)}else d.image=e;d.needsUpdate=!0}))}function i(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s=this,o="MeshLambertMaterial",u={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var a=e.shading.toLowerCase();"phong"===a?o="MeshPhongMaterial":"basic"===a&&(o="MeshBasicMaterial")}void 0!==e.blending&&void 0!==THREE[e.blending]&&(u.blending=THREE[e.blending]);if(void 0!==e.transparent||1>e.opacity)u.transparent=e.transparent;void 0!==e.depthTest&&(u.depthTest=e.depthTest);void 0!==e.depthWrite&&(u.depthWrite=e.depthWrite);void 0!==e.visible&&(u.visible=e.visible);void 0!==e.flipSided&&(u.side=THREE.BackSide);void 0!==e.doubleSided&&(u.side=THREE.DoubleSide);void 0!==e.wireframe&&(u.wireframe=e.wireframe);void 0!==e.vertexColors&&("face"===e.vertexColors?u.vertexColors=THREE.FaceColors:e.vertexColors&&(u.vertexColors=THREE.VertexColors));e.colorDiffuse?u.color=i(e.colorDiffuse):e.DbgColor&&(u.color=e.DbgColor);e.colorSpecular&&(u.specular=i(e.colorSpecular));e.colorAmbient&&(u.ambient=i(e.colorAmbient));e.colorEmissive&&(u.emissive=i(e.colorEmissive));e.transparency&&(u.opacity=e.transparency);e.specularCoef&&(u.shininess=e.specularCoef);e.mapDiffuse&&t&&r(u,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);e.mapLight&&t&&r(u,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);e.mapBump&&t&&r(u,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);e.mapNormal&&t&&r(u,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);e.mapSpecular&&t&&r(u,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);e.mapBumpScale&&(u.bumpScale=e.mapBumpScale);e.mapNormal?(o=THREE.ShaderLib.normalmap,a=THREE.UniformsUtils.clone(o.uniforms),a.tNormal.value=u.normalMap,e.mapNormalFactor&&a.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),u.map&&(a.tDiffuse.value=u.map,a.enableDiffuse.value=!0),u.specularMap&&(a.tSpecular.value=u.specularMap,a.enableSpecular.value=!0),u.lightMap&&(a.tAO.value=u.lightMap,a.enableAO.value=!0),a.diffuse.value.setHex(u.color),a.specular.value.setHex(u.specular),a.ambient.value.setHex(u.ambient),a.shininess.value=u.shininess,void 0!==u.opacity&&(a.opacity.value=u.opacity),o=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:a,lights:!0,fog:!0}),u.transparent&&(o.transparent=!0)):o=new THREE[o](u);void 0!==e.DbgName&&(o.name=e.DbgName);return o}};THREE.XHRLoader=function(e){this.cache=new THREE.Cache;this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,n,r){var i=this,s=i.cache.get(e);void 0!==s?t(s):(s=new XMLHttpRequest,void 0!==t&&s.addEventListener("load",function(n){i.cache.add(e,n.target.responseText);t(n.target.responseText);i.manager.itemEnd(e)},!1),void 0!==n&&s.addEventListener("progress",function(e){n(e)},!1),void 0!==r&&s.addEventListener("error",function(e){r(e)},!1),void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),s.open("GET",e,!0),s.send(null),i.manager.itemStart(e))},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.ImageLoader=function(e){this.cache=new THREE.Cache;this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,n,r){var i=this,s=i.cache.get(e);if(void 0!==s)t(s);else return s=document.createElement("img"),void 0!==t&&s.addEventListener("load",function(n){i.cache.add(e,this);t(this);i.manager.itemEnd(e)},!1),void 0!==n&&s.addEventListener("progress",function(e){n(e)},!1),void 0!==r&&s.addEventListener("error",function(e){r(e)},!1),void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),s.src=e,i.manager.itemStart(e),s},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.JSONLoader=function(e){THREE.Loader.call(this,e);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,t,n){n=n&&"string"===typeof n?n:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,t,n)};THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,n,r,i){var s=new XMLHttpRequest,o=0;s.onreadystatechange=function(){if(s.readyState===s.DONE)if(200===s.status||0===s.status){if(s.responseText){var u=JSON.parse(s.responseText);if(void 0!==u.metadata&&"scene"===u.metadata.type){console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}u=e.parse(u,r);n(u.geometry,u.materials)}else console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.');e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+s.status+")");else s.readyState===s.LOADING?i&&(0===o&&(o=s.getResponseHeader("Content-Length")),i({total:o,loaded:s.responseText.length})):s.readyState===s.HEADERS_RECEIVED&&void 0!==i&&(o=s.getResponseHeader("Content-Length"))};s.open("GET",t,!0);s.withCredentials=this.withCredentials;s.send(null)};THREE.JSONLoader.prototype.parse=function(e,t){var n=new THREE.Geometry,r=void 0!==e.scale?1/e.scale:1;(function(t){var r,i,s,o,u,f,l,h,p,d,v,m,g,y=e.faces;f=e.vertices;var b=e.normals,w=e.colors,E=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&E++;for(r=0;r<E;r++)n.faceVertexUvs[r]=[]}o=0;for(u=f.length;o<u;)r=new THREE.Vector3,r.x=f[o++]*t,r.y=f[o++]*t,r.z=f[o++]*t,n.vertices.push(r);o=0;for(u=y.length;o<u;)if(t=y[o++],p=t&1,s=t&2,r=t&8,l=t&16,d=t&32,f=t&64,t&=128,p){p=new THREE.Face3;p.a=y[o];p.b=y[o+1];p.c=y[o+3];v=new THREE.Face3;v.a=y[o+1];v.b=y[o+2];v.c=y[o+3];o+=4;s&&(s=y[o++],p.materialIndex=s,v.materialIndex=s);s=n.faces.length;if(r)for(r=0;r<E;r++)for(m=e.uvs[r],n.faceVertexUvs[r][s]=[],n.faceVertexUvs[r][s+1]=[],i=0;4>i;i++)h=y[o++],g=m[2*h],h=m[2*h+1],g=new THREE.Vector2(g,h),2!==i&&n.faceVertexUvs[r][s].push(g),0!==i&&n.faceVertexUvs[r][s+1].push(g);l&&(l=3*y[o++],p.normal.set(b[l++],b[l++],b[l]),v.normal.copy(p.normal));if(d)for(r=0;4>r;r++)l=3*y[o++],d=new THREE.Vector3(b[l++],b[l++],b[l]),2!==r&&p.vertexNormals.push(d),0!==r&&v.vertexNormals.push(d);f&&(f=y[o++],f=w[f],p.color.setHex(f),v.color.setHex(f));if(t)for(r=0;4>r;r++)f=y[o++],f=w[f],2!==r&&p.vertexColors.push(new THREE.Color(f)),0!==r&&v.vertexColors.push(new THREE.Color(f));n.faces.push(p);n.faces.push(v)}else{p=new THREE.Face3;p.a=y[o++];p.b=y[o++];p.c=y[o++];s&&(s=y[o++],p.materialIndex=s);s=n.faces.length;if(r)for(r=0;r<E;r++)for(m=e.uvs[r],n.faceVertexUvs[r][s]=[],i=0;3>i;i++)h=y[o++],g=m[2*h],h=m[2*h+1],g=new THREE.Vector2(g,h),n.faceVertexUvs[r][s].push(g);l&&(l=3*y[o++],p.normal.set(b[l++],b[l++],b[l]));if(d)for(r=0;3>r;r++)l=3*y[o++],d=new THREE.Vector3(b[l++],b[l++],b[l]),p.vertexNormals.push(d);f&&(f=y[o++],p.color.setHex(w[f]));if(t)for(r=0;3>r;r++)f=y[o++],p.vertexColors.push(new THREE.Color(w[f]));n.faces.push(p)}})(r);(function(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,i=e.skinWeights.length;r<i;r+=t)n.skinWeights.push(new THREE.Vector4(e.skinWeights[r],1<t?e.skinWeights[r+1]:0,2<t?e.skinWeights[r+2]:0,3<t?e.skinWeights[r+3]:0));if(e.skinIndices)for(r=0,i=e.skinIndices.length;r<i;r+=t)n.skinIndices.push(new THREE.Vector4(e.skinIndices[r],1<t?e.skinIndices[r+1]:0,2<t?e.skinIndices[r+2]:0,3<t?e.skinIndices[r+3]:0));n.bones=e.bones;n.bones&&0<n.bones.length&&(n.skinWeights.length!==n.skinIndices.length||n.skinIndices.length!==n.vertices.length)&&console.warn("When skinning, number of vertices ("+n.vertices.length+"), skinIndices ("+n.skinIndices.length+"), and skinWeights ("+n.skinWeights.length+") should match.");n.animation=e.animation;n.animations=e.animations})();(function(t){if(void 0!==e.morphTargets){var r,i,s,o,u,f;r=0;for(i=e.morphTargets.length;r<i;r++)for(n.morphTargets[r]={},n.morphTargets[r].name=e.morphTargets[r].name,n.morphTargets[r].vertices=[],u=n.morphTargets[r].vertices,f=e.morphTargets[r].vertices,s=0,o=f.length;s<o;s+=3){var l=new THREE.Vector3;l.x=f[s]*t;l.y=f[s+1]*t;l.z=f[s+2]*t;u.push(l)}}if(void 0!==e.morphColors)for(r=0,i=e.morphColors.length;r<i;r++)for(n.morphColors[r]={},n.morphColors[r].name=e.morphColors[r].name,n.morphColors[r].colors=[],o=n.morphColors[r].colors,u=e.morphColors[r].colors,t=0,s=u.length;t<s;t+=3)f=new THREE.Color(16755200),f.setRGB(u[t],u[t+1],u[t+2]),o.push(f)})(r);n.computeFaceNormals();n.computeBoundingSphere();if(void 0===e.materials||0===e.materials.length)return{geometry:n};r=this.initMaterials(e.materials,t);this.needsTangents(r)&&n.computeTangents();return{geometry:n,materials:r}};THREE.LoadingManager=function(e,t,n){var r=this,i=0,s=0;this.onLoad=e;this.onProgress=t;this.onError=n;this.itemStart=function(e){s++};this.itemEnd=function(e){i++;if(void 0!==r.onProgress)r.onProgress(e,i,s);if(i===s&&void 0!==r.onLoad)r.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,n,r){var i=this;n=new THREE.XHRLoader;n.setCrossOrigin(this.crossOrigin);n.load(e,function(e){t(i.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,n=e.attributes,r=e.offsets;e=e.boundingSphere;for(var i in n){var s=n[i];t.attributes[i]={itemSize:s.itemSize,array:new self[s.type](s.array)}}void 0!==r&&(t.offsets=JSON.parse(JSON.stringify(r)));void 0!==e&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius));return t}};THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,n,r){var i=this;n=new THREE.XHRLoader;n.setCrossOrigin(this.crossOrigin);n.load(e,function(e){t(i.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];void 0!==e.color&&t.color.setHex(e.color);void 0!==e.ambient&&t.ambient.setHex(e.ambient);void 0!==e.emissive&&t.emissive.setHex(e.emissive);void 0!==e.specular&&t.specular.setHex(e.specular);void 0!==e.shininess&&(t.shininess=e.shininess);void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors);void 0!==e.blending&&(t.blending=e.blending);void 0!==e.side&&(t.side=e.side);void 0!==e.opacity&&(t.opacity=e.opacity);void 0!==e.transparent&&(t.transparent=e.transparent);void 0!==e.wireframe&&(t.wireframe=e.wireframe);if(void 0!==e.materials)for(var n=0,r=e.materials.length;n<r;n++)t.materials.push(this.parse(e.materials[n]));return t}};THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,n,r){var i=this;n=new THREE.XHRLoader(i.manager);n.setCrossOrigin(this.crossOrigin);n.load(e,function(e){t(i.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),n=this.parseMaterials(e.materials);return this.parseObject(e.object,t,n)},parseGeometries:function(e){var t={};if(void 0!==e)for(var n=new THREE.JSONLoader,r=new THREE.BufferGeometryLoader,i=0,s=e.length;i<s;i++){var o,u=e[i];switch(u.type){case"PlaneGeometry":o=new THREE.PlaneGeometry(u.width,u.height,u.widthSegments,u.heightSegments);break;case"BoxGeometry":case"CubeGeometry":o=new THREE.BoxGeometry(u.width,u.height,u.depth,u.widthSegments,u.heightSegments,u.depthSegments);break;case"CircleGeometry":o=new THREE.CircleGeometry(u.radius,u.segments);break;case"CylinderGeometry":o=new THREE.CylinderGeometry(u.radiusTop,u.radiusBottom,u.height,u.radialSegments,u.heightSegments,u.openEnded);break;case"SphereGeometry":o=new THREE.SphereGeometry(u.radius,u.widthSegments,u.heightSegments,u.phiStart,u.phiLength,u.thetaStart,u.thetaLength);break;case"IcosahedronGeometry":o=new THREE.IcosahedronGeometry(u.radius,u.detail);break;case"TorusGeometry":o=new THREE.TorusGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.arc);break;case"TorusKnotGeometry":o=new THREE.TorusKnotGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.p,u.q,u.heightScale);break;case"BufferGeometry":o=r.parse(u.data);break;case"Geometry":o=n.parse(u.data).geometry}o.uuid=u.uuid;void 0!==u.name&&(o.name=u.name);t[u.uuid]=o}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var n=new THREE.MaterialLoader,r=0,i=e.length;r<i;r++){var s=e[r],o=n.parse(s);o.uuid=s.uuid;void 0!==s.name&&(o.name=s.name);t[s.uuid]=o}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,n,r){var i;switch(t.type){case"Scene":i=new THREE.Scene;break;case"PerspectiveCamera":i=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":i=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":i=new THREE.AmbientLight(t.color);break;case"DirectionalLight":i=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":i=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":i=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":i=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":i=n[t.geometry];var s=r[t.material];void 0===i&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry);void 0===s&&console.error("THREE.ObjectLoader: Undefined material "+t.material);i=new THREE.Mesh(i,s);break;case"Sprite":s=r[t.material];void 0===s&&console.error("THREE.ObjectLoader: Undefined material "+t.material);i=new THREE.Sprite(s);break;default:i=new THREE.Object3D}i.uuid=t.uuid;void 0!==t.name&&(i.name=t.name);void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.scale&&i.scale.fromArray(t.scale));void 0!==t.visible&&(i.visible=t.visible);void 0!==t.userData&&(i.userData=t.userData);if(void 0!==t.children)for(var o in t.children)i.add(this.parseObject(t.children[o],n,r));return i}}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t,n,r){var i=this;n=new THREE.XHRLoader(i.manager);n.setCrossOrigin(this.crossOrigin);n.load(e,function(n){i.parse(JSON.parse(n),t,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,n){function r(e,t){return"relativeToHTML"==t?e:p+e}function i(){s(T.scene,C.objects)}function s(e,t){var n,i,o,u,f,l;for(l in t){var c=T.objects[l],p=t[l];if(void 0===c){if(p.type&&p.type in h.hierarchyHandlers){if(void 0===p.loading){n={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var g={},y;for(y in p)y in n||(g[y]=p[y]);v=T.materials[p.material];p.loading=!0;n=h.hierarchyHandlers[p.type].loaderObject;n.options?n.load(r(p.url,C.urlBaseType),a(l,e,v,p)):n.load(r(p.url,C.urlBaseType),a(l,e,v,p),g)}}else if(void 0!==p.geometry){if(d=T.geometries[p.geometry]){c=!1;v=T.materials[p.material];c=v instanceof THREE.ShaderMaterial;i=p.position;o=p.rotation;u=p.scale;n=p.matrix;f=p.quaternion;p.material||(v=new THREE.MeshFaceMaterial(T.face_materials[p.geometry]));v instanceof THREE.MeshFaceMaterial&&0===v.materials.length&&(v=new THREE.MeshFaceMaterial(T.face_materials[p.geometry]));if(v instanceof THREE.MeshFaceMaterial)for(g=0;g<v.materials.length;g++)c=c||v.materials[g]instanceof THREE.ShaderMaterial;c&&d.computeTangents();p.skin?c=new THREE.SkinnedMesh(d,v):p.morph?(c=new THREE.MorphAnimMesh(d,v),void 0!==p.duration&&(c.duration=p.duration),void 0!==p.time&&(c.time=p.time),void 0!==p.mirroredLoop&&(c.mirroredLoop=p.mirroredLoop),v.morphNormals&&d.computeMorphNormals()):c=new THREE.Mesh(d,v);c.name=l;n?(c.matrixAutoUpdate=!1,c.matrix.set(n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15])):(c.position.fromArray(i),f?c.quaternion.fromArray(f):c.rotation.fromArray(o),c.scale.fromArray(u));c.visible=p.visible;c.castShadow=p.castShadow;c.receiveShadow=p.receiveShadow;e.add(c);T.objects[l]=c}}else if("AmbientLight"===p.type||"PointLight"===p.type||"DirectionalLight"===p.type||"SpotLight"===p.type||"HemisphereLight"===p.type||"AreaLight"===p.type){g=p.color;n=p.intensity;i=p.distance;o=p.position;u=p.rotation;switch(p.type){case"AmbientLight":b=new THREE.AmbientLight(g);break;case"PointLight":b=new THREE.PointLight(g,n,i);b.position.fromArray(o);break;case"DirectionalLight":b=new THREE.DirectionalLight(g,n);b.position.fromArray(p.direction);break;case"SpotLight":b=new THREE.SpotLight(g,n,i,1);b.angle=p.angle;b.position.fromArray(o);b.target.set(o[0],o[1]-i,o[2]);b.target.applyEuler(new THREE.Euler(u[0],u[1],u[2],"XYZ"));break;case"HemisphereLight":b=new THREE.DirectionalLight(g,n,i);b.target.set(o[0],o[1]-i,o[2]);b.target.applyEuler(new THREE.Euler(u[0],u[1],u[2],"XYZ"));break;case"AreaLight":b=new THREE.AreaLight(g,n),b.position.fromArray(o),b.width=p.size,b.height=p.size_y}e.add(b);b.name=l;T.lights[l]=b;T.objects[l]=b}else"PerspectiveCamera"===p.type||"OrthographicCamera"===p.type?(i=p.position,o=p.rotation,f=p.quaternion,"PerspectiveCamera"===p.type?m=new THREE.PerspectiveCamera(p.fov,p.aspect,p.near,p.far):"OrthographicCamera"===p.type&&(m=new THREE.OrthographicCamera(p.left,p.right,p.top,p.bottom,p.near,p.far)),m.name=l,m.position.fromArray(i),void 0!==f?m.quaternion.fromArray(f):void 0!==o&&m.rotation.fromArray(o),e.add(m),T.cameras[l]=m,T.objects[l]=m):(i=p.position,o=p.rotation,u=p.scale,f=p.quaternion,c=new THREE.Object3D,c.name=l,c.position.fromArray(i),f?c.quaternion.fromArray(f):c.rotation.fromArray(o),c.scale.fromArray(u),c.visible=void 0!==p.visible?p.visible:!1,e.add(c),T.objects[l]=c,T.empties[l]=c);if(c){if(void 0!==p.userData)for(var w in p.userData)c.userData[w]=p.userData[w];if(void 0!==p.groups)for(g=0;g<p.groups.length;g++)n=p.groups[g],void 0===T.groups[n]&&(T.groups[n]=[]),T.groups[n].push(l)}}void 0!==c&&void 0!==p.children&&s(c,p.children)}}function o(e,t,n,r,s){var o=s.rotation,u=s.quaternion,a=s.scale;e.position.fromArray(s.position);u?e.quaternion.fromArray(u):e.rotation.fromArray(o);e.scale.fromArray(a);r&&e.traverse(function(e){e.material=r});var f=void 0!==s.visible?s.visible:!0;e.traverse(function(e){e.visible=f});n.add(e);e.name=t;T.objects[t]=e;i()}function u(e){return function(t,n){t.name=e;T.geometries[e]=t;T.face_materials[e]=n;i();w-=1;h.onLoadComplete();l()}}function a(e,t,n,r){return function(i){o(i.content?i.content:i.dae?i.scene:i,e,t,n,r);w-=1;h.onLoadComplete();l()}}function f(e){return function(t,n){t.name=e;T.geometries[e]=t;T.face_materials[e]=n}}function l(){h.callbackProgress({totalModels:S,totalTextures:x,loadedModels:S-w,loadedTextures:x-E},T);h.onLoadProgress();if(0===w&&0===E){for(var e=0;e<N.length;e++){var n=N[e],r=T.objects[n.targetName];r?n.object.target=r:(n.object.target=new THREE.Object3D,T.scene.add(n.object.target));n.object.target.userData.targetInverse=n.object}t(T)}}function c(e,t){t(e);if(void 0!==e.children)for(var n in e.children)c(e.children[n],t)}var h=this,p=THREE.Loader.prototype.extractUrlBase(n),d,v,m,g,y,b,w,E,S,x,T,N=[],C=e,k;for(k in this.geometryHandlers)e=this.geometryHandlers[k].loaderClass,this.geometryHandlers[k].loaderObject=new e;for(k in this.hierarchyHandlers)e=this.hierarchyHandlers[k].loaderClass,this.hierarchyHandlers[k].loaderObject=new e;E=w=0;T={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};C.transform&&(k=C.transform.position,e=C.transform.rotation,n=C.transform.scale,k&&T.scene.position.fromArray(k),e&&T.scene.rotation.fromArray(e),n&&T.scene.scale.fromArray(n),k||e||n)&&(T.scene.updateMatrix(),T.scene.updateMatrixWorld());k=function(e){return function(){E-=e;l();h.onLoadComplete()}};for(var L in C.fogs)e=C.fogs[L],"linear"===e.type?g=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(g=new THREE.FogExp2(0,e.density)),e=e.color,g.color.setRGB(e[0],e[1],e[2]),T.fogs[L]=g;for(var A in C.geometries)g=C.geometries[A],g.type in this.geometryHandlers&&(w+=1,h.onLoadStart());for(var O in C.objects)c(C.objects[O],function(e){e.type&&e.type in h.hierarchyHandlers&&(w+=1,h.onLoadStart())});S=w;for(A in C.geometries)if(g=C.geometries[A],"cube"===g.type)d=new THREE.BoxGeometry(g.width,g.height,g.depth,g.widthSegments,g.heightSegments,g.depthSegments),d.name=A,T.geometries[A]=d;else if("plane"===g.type)d=new THREE.PlaneGeometry(g.width,g.height,g.widthSegments,g.heightSegments),d.name=A,T.geometries[A]=d;else if("sphere"===g.type)d=new THREE.SphereGeometry(g.radius,g.widthSegments,g.heightSegments),d.name=A,T.geometries[A]=d;else if("cylinder"===g.type)d=new THREE.CylinderGeometry(g.topRad,g.botRad,g.height,g.radSegs,g.heightSegs),d.name=A,T.geometries[A]=d;else if("torus"===g.type)d=new THREE.TorusGeometry(g.radius,g.tube,g.segmentsR,g.segmentsT),d.name=A,T.geometries[A]=d;else if("icosahedron"===g.type)d=new THREE.IcosahedronGeometry(g.radius,g.subdivisions),d.name=A,T.geometries[A]=d;else if(g.type in this.geometryHandlers){O={};for(y in g)"type"!==y&&"url"!==y&&(O[y]=g[y]);this.geometryHandlers[g.type].loaderObject.load(r(g.url,C.urlBaseType),u(A),O)}else"embedded"===g.type&&(O=C.embeds[g.id],O.metadata=C.metadata,O&&(O=this.geometryHandlers.ascii.loaderObject.parse(O,""),f(A)(O.geometry,O.materials)));for(var M in C.textures)if(A=C.textures[M],A.url instanceof Array)for(E+=A.url.length,y=0;y<A.url.length;y++)h.onLoadStart();else E+=1,h.onLoadStart();x=E;for(M in C.textures){A=C.textures[M];void 0!==A.mapping&&void 0!==THREE[A.mapping]&&(A.mapping=new THREE[A.mapping]);if(A.url instanceof Array){O=A.url.length;g=[];for(y=0;y<O;y++)g[y]=r(A.url[y],C.urlBaseType);y=(y=/\.dds$/i.test(g[0]))?THREE.ImageUtils.loadCompressedTextureCube(g,A.mapping,k(O)):THREE.ImageUtils.loadTextureCube(g,A.mapping,k(O))}else y=/\.dds$/i.test(A.url),O=r(A.url,C.urlBaseType),g=k(1),y=y?THREE.ImageUtils.loadCompressedTexture(O,A.mapping,g):THREE.ImageUtils.loadTexture(O,A.mapping,g),void 0!==THREE[A.minFilter]&&(y.minFilter=THREE[A.minFilter]),void 0!==THREE[A.magFilter]&&(y.magFilter=THREE[A.magFilter]),A.anisotropy&&(y.anisotropy=A.anisotropy),A.repeat&&(y.repeat.set(A.repeat[0],A.repeat[1]),1!==A.repeat[0]&&(y.wrapS=THREE.RepeatWrapping),1!==A.repeat[1]&&(y.wrapT=THREE.RepeatWrapping)),A.offset&&y.offset.set(A.offset[0],A.offset[1]),A.wrap&&(O={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==O[A.wrap[0]]&&(y.wrapS=O[A.wrap[0]]),void 0!==O[A.wrap[1]]&&(y.wrapT=O[A.wrap[1]]));T.textures[M]=y}var _,D;for(_ in C.materials){M=C.materials[_];for(D in M.parameters)"envMap"===D||"map"===D||"lightMap"===D||"bumpMap"===D?M.parameters[D]=T.textures[M.parameters[D]]:"shading"===D?M.parameters[D]="flat"===M.parameters[D]?THREE.FlatShading:THREE.SmoothShading:"side"===D?M.parameters[D]="double"==M.parameters[D]?THREE.DoubleSide:"back"==M.parameters[D]?THREE.BackSide:THREE.FrontSide:"blending"===D?M.parameters[D]=M.parameters[D]in THREE?THREE[M.parameters[D]]:THREE.NormalBlending:"combine"===D?M.parameters[D]=M.parameters[D]in THREE?THREE[M.parameters[D]]:THREE.MultiplyOperation:"vertexColors"===D?"face"==M.parameters[D]?M.parameters[D]=THREE.FaceColors:M.parameters[D]&&(M.parameters[D]=THREE.VertexColors):"wrapRGB"===D&&(k=M.parameters[D],M.parameters[D]=new THREE.Vector3(k[0],k[1],k[2]));void 0!==M.parameters.opacity&&1>M.parameters.opacity&&(M.parameters.transparent=!0);M.parameters.normalMap?(k=THREE.ShaderLib.normalmap,A=THREE.UniformsUtils.clone(k.uniforms),y=M.parameters.color,O=M.parameters.specular,g=M.parameters.ambient,L=M.parameters.shininess,A.tNormal.value=T.textures[M.parameters.normalMap],M.parameters.normalScale&&A.uNormalScale.value.set(M.parameters.normalScale[0],M.parameters.normalScale[1]),M.parameters.map&&(A.tDiffuse.value=M.parameters.map,A.enableDiffuse.value=!0),M.parameters.envMap&&(A.tCube.value=M.parameters.envMap,A.enableReflection.value=!0,A.reflectivity.value=M.parameters.reflectivity),M.parameters.lightMap&&(A.tAO.value=M.parameters.lightMap,A.enableAO.value=!0),M.parameters.specularMap&&(A.tSpecular.value=T.textures[M.parameters.specularMap],A.enableSpecular.value=!0),M.parameters.displacementMap&&(A.tDisplacement.value=T.textures[M.parameters.displacementMap],A.enableDisplacement.value=!0,A.uDisplacementBias.value=M.parameters.displacementBias,A.uDisplacementScale.value=M.parameters.displacementScale),A.diffuse.value.setHex(y),A.specular.value.setHex(O),A.ambient.value.setHex(g),A.shininess.value=L,M.parameters.opacity&&(A.opacity.value=M.parameters.opacity),v=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:A,lights:!0,fog:!0})):v=new THREE[M.type](M.parameters);v.name=_;T.materials[_]=v}for(_ in C.materials)if(M=C.materials[_],M.parameters.materials){D=[];for(y=0;y<M.parameters.materials.length;y++)D.push(T.materials[M.parameters.materials[y]]);T.materials[_].materials=D}i();T.cameras&&C.defaults.camera&&(T.currentCamera=T.cameras[C.defaults.camera]);T.fogs&&C.defaults.fog&&(T.scene.fog=T.fogs[C.defaults.fog]);h.callbackSync(T);l()}};THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,n,r){n=new THREE.ImageLoader(this.manager);n.setCrossOrigin(this.crossOrigin);n.load(e,function(e){e=new THREE.Texture(e);e.needsUpdate=!0;void 0!==t&&t(e)})},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0===n)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color?r.set(n):r instanceof THREE.Vector3&&n instanceof THREE.Vector3?r.copy(n):this[t]="overdraw"==t?Number(n):n}}},clone:function(e){void 0===e&&(e=new THREE.Material);e.name=this.name;e.side=this.side;e.opacity=this.opacity;e.transparent=this.transparent;e.blending=this.blending;e.blendSrc=this.blendSrc;e.blendDst=this.blendDst;e.blendEquation=this.blendEquation;e.depthTest=this.depthTest;e.depthWrite=this.depthWrite;e.polygonOffset=this.polygonOffset;e.polygonOffsetFactor=this.polygonOffsetFactor;e.polygonOffsetUnits=this.polygonOffsetUnits;e.alphaTest=this.alphaTest;e.overdraw=this.overdraw;e.visible=this.visible;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(e)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.linecap=this.linecap;e.linejoin=this.linejoin;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.LineDashedMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(e)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.scale=this.scale;e.dashSize=this.dashSize;e.gapSize=this.gapSize;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.MeshBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;return e};THREE.MeshLambertMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshPhongMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.specular.copy(this.specular);e.shininess=this.shininess;e.metal=this.metal;e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.bumpMap=this.bumpMap;e.bumpScale=this.bumpScale;e.normalMap=this.normalMap;e.normalScale.copy(this.normalScale);e.specularMap=this.specularMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshDepthMaterial=function(e){THREE.Material.call(this);this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(e)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,e);e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(e)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,e);e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e};THREE.ParticleSystemMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(e)};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleSystemMaterial.prototype.clone=function(){var e=new THREE.ParticleSystemMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.size=this.size;e.sizeAttenuation=this.sizeAttenuation;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;THREE.ShaderMaterial=function(e){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(e)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,e);e.fragmentShader=this.fragmentShader;e.vertexShader=this.vertexShader;e.uniforms=THREE.UniformsUtils.clone(this.uniforms);e.attributes=this.attributes;e.defines=this.defines;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.fog=this.fog;e.lights=this.lights;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var e=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,e);return e};THREE.SpriteMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(e)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.rotation=this.rotation;e.fog=this.fog;return e};THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(e,t){};this.setValues(e)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.program=this.program;return e};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;THREE.Texture=function(e,t,n,r,i,s,o,u,a){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=e;this.mipmaps=[];this.mapping=void 0!==t?t:new THREE.UVMapping;this.wrapS=void 0!==n?n:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==i?i:THREE.LinearFilter;this.minFilter=void 0!==s?s:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==a?a:1;this.format=void 0!==o?o:THREE.RGBAFormat;this.type=void 0!==u?u:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update();this._needsUpdate=e},clone:function(e){void 0===e&&(e=new THREE.Texture);e.image=this.image;e.mipmaps=this.mipmaps.slice(0);e.mapping=this.mapping;e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.format=this.format;e.type=this.type;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.generateMipmaps=this.generateMipmaps;e.premultiplyAlpha=this.premultiplyAlpha;e.flipY=this.flipY;e.unpackAlignment=this.unpackAlignment;return e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l);this.image={width:t,height:n};this.mipmaps=e;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.DataTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l);this.image={data:e,width:t,height:n}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.ParticleSystemMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(e){void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material));e.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Line=function(e,t,n){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==n?n:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(e){void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Mesh=function(e,t){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){if(void 0!==this.morphTargetDictionary[e])return this.morphTargetDictionary[e];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(e,t){void 0===e&&(e=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,e,t);return e};THREE.Bone=function(e){THREE.Object3D.call(this);this.skin=e;this.skinMatrix=new THREE.Matrix4;this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix());if(t||this.matrixWorldNeedsUpdate)e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0,this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0;for(var n=0,r=this.children.length;n<r;n++)this.children[n].update(this.skinMatrix,t)};THREE.Skeleton=function(e,t){this.useVertexTexture=void 0!==t?t:!0;this.bones=[];this.boneMatrices=[];var n,r,i,s,o;if(void 0!==e){for(var u=0;u<e.length;++u)r=e[u],i=r.pos,s=r.rotq,o=r.scl,n=this.addBone(),n.name=r.name,n.position.set(i[0],i[1],i[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==o?n.scale.set(o[0],o[1],o[2]):n.scale.set(1,1,1);for(u=0;u<e.length;++u)r=e[u],-1!==r.parent&&this.bones[r.parent].add(this.bones[u]);n=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=n=256<n?64:64<n?32:16<n?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*n)}};THREE.Skeleton.prototype=Object.create(THREE.Mesh.prototype);THREE.Skeleton.prototype.addBone=function(e){void 0===e&&(e=new THREE.Bone(this));this.bones.push(e);return e};THREE.Skeleton.prototype.calculateInverses=function(e){this.boneInverses=[];e=0;for(var t=this.bones.length;e<t;++e){var n=new THREE.Matrix4;n.getInverse(this.bones[e].skinMatrix);this.boneInverses.push(n)}};THREE.SkinnedMesh=function(e,t,n){THREE.Mesh.call(this,e,t);this.skeleton=new THREE.Skeleton(this.geometry&&this.geometry.bones,n);for(e=0;e<this.skeleton.bones.length;++e)t=this.skeleton.bones[e],void 0===t.parent&&this.add(t);this.identityMatrix=new THREE.Matrix4;this.pose()};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||t)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;t=0;for(var n=this.children.length;t<n;t++){var r=this.children[t];r instanceof THREE.Bone?r.update(this.identityMatrix,!1):r.updateMatrixWorld(!0)}void 0===this.skeleton.boneInverses&&this.skeleton.calculateInverses();t=0;for(n=this.skeleton.bones.length;t<n;t++)e.multiplyMatrices(this.skeleton.bones[t].skinMatrix,this.skeleton.boneInverses[t]),e.flattenToArrayOffset(this.skeleton.boneMatrices,16*t);this.skeleton.useVertexTexture&&(this.skeleton.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],n=1/t.lengthManhattan();Infinity!==n?t.multiplyScalar(n):t.set(1)}};THREE.SkinnedMesh.prototype.clone=function(e){void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,e);return e};THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t);this.duration=1e3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e;this.endKeyframe=t;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,n=e.animations,r=/([a-z]+)(\d+)/,i=0,s=e.morphTargets.length;i<s;i++){var o=e.morphTargets[i].name.match(r);if(o&&1<o.length){o=o[1];n[o]||(n[o]={start:Infinity,end:-Infinity});var u=n[o];i<u.start&&(u.start=i);i>u.end&&(u.end=i);t||(t=o)}}e.firstAnimation=t};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,n){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:t,end:n}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var n=this.geometry.animations[e];n?(this.setFrameRange(n.start,n.end),this.duration=(n.end-n.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e);t=this.time%t/t;this.directionBackwards&&(t=1-t);this.morphTargetInfluences[this.currentKeyframe]=t;this.morphTargetInfluences[this.lastKeyframe]=1-t};THREE.MorphAnimMesh.prototype.clone=function(e){void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material));e.duration=this.duration;e.mirroredLoop=this.mirroredLoop;e.time=this.time;e.lastKeyframe=this.lastKeyframe;e.currentKeyframe=this.currentKeyframe;e.direction=this.direction;e.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,e);return e};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);t=Math.abs(t);for(var n=0;n<this.objects.length&&!(t<this.objects[n].distance);n++);this.objects.splice(n,0,{distance:t,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,n=this.objects.length;t<n&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object};THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n){if(1<this.objects.length){e.setFromMatrixPosition(n.matrixWorld);t.setFromMatrixPosition(this.matrixWorld);n=e.distanceTo(t);this.objects[0].object.visible=!0;for(var r=1,i=this.objects.length;r<i;r++)if(n>=this.objects[r].distance)this.objects[r-1].object.visible=!1,this.objects[r].object.visible=!0;else break;for(;r<i;r++)this.objects[r].object.visible=!1}}}();THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,e);for(var t=0,n=this.objects.length;t<n;t++){var r=this.objects[t].object.clone();r.visible=0===t;e.addLevel(r,this.objects[t].distance)}return e};THREE.Sprite=function(){var e=new THREE.Float32Attribute(3,3);e.set([-.5,-.5,0,.5,-.5,0,.5,.5,0]);var t=new THREE.BufferGeometry;t.addAttribute("position",e);return function(e){THREE.Object3D.call(this);this.geometry=t;this.material=void 0!==e?e:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(e){void 0===e&&(e=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}this.dispatchEvent({type:"objectAdded",object:e});e.dispatchEvent({type:"addedToScene",scene:this});for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])};THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1);if(e.shadowCascadeArray)for(t=0;t<e.shadowCascadeArray.length;t++)this.__removeObject(e.shadowCascadeArray[t])}else e instanceof THREE.Camera||(this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1));this.dispatchEvent({type:"objectRemoved",object:e});e.dispatchEvent({type:"removedFromScene",scene:this});for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])};THREE.Scene.prototype.clone=function(e){void 0===e&&(e=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,e);null!==this.fog&&(e.fog=this.fog.clone());null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone());e.autoUpdate=this.autoUpdate;e.matrixAutoUpdate=this.matrixAutoUpdate;return e};THREE.Fog=function(e,t,n){this.name="";this.color=new THREE.Color(e);this.near=void 0!==t?t:1;this.far=void 0!==n?n:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(e,t){this.name="";this.color=new THREE.Color(e);this.density=void 0!==t?t:25e-5};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(e){function t(e,t,n,r){f(t);l(n);c(r);h(e.getStyle());C.stroke();at.expandByScalar(2*t)}function n(e){p(e.getStyle());C.fill()}function r(e){i(e.target)}function i(e){var t=e.wrapS===THREE.RepeatWrapping,n=e.wrapT===THREE.RepeatWrapping,r=e.image,i=document.createElement("canvas");i.width=r.width;i.height=r.height;var s=i.getContext("2d");s.setTransform(1,0,0,-1,0,r.height);s.drawImage(r,0,0);Y[e.id]=C.createPattern(i,!0===t&&!0===n?"repeat":!0===t&&!1===n?"repeat-x":!1===t&&!0===n?"repeat-y":"no-repeat")}function s(e,t,n,s,o,u,a,f,l,c,h,d,v){if(!(v instanceof THREE.DataTexture)){!1===v.hasEventListener("update",r)&&(void 0!==v.image&&0<v.image.width&&i(v),v.addEventListener("update",r));var m=Y[v.id];if(void 0!==m){p(m);var m=v.offset.x/v.repeat.x,g=v.offset.y/v.repeat.y,y=v.image.width*v.repeat.x;v=v.image.height*v.repeat.y;a=(a+m)*y;f=(f+g)*v;n-=e;s-=t;o-=e;u-=t;l=(l+m)*y-a;c=(c+g)*v-f;h=(h+m)*y-a;d=(d+g)*v-f;v=l*d-h*c;0!==v&&(m=1/v,v=(d*n-c*o)*m,c=(d*s-c*u)*m,n=(l*o-h*n)*m,s=(l*u-h*s)*m,e=e-v*a-n*f,t=t-c*a-s*f,C.save(),C.transform(v,c,n,s,e,t),C.fill(),C.restore())}else p("rgba(0,0,0,1)"),C.fill()}}function o(e,t,n){var r=t.x-e.x,i=t.y-e.y,s=r*r+i*i;0!==s&&(n/=Math.sqrt(s),r*=n,i*=n,t.x+=r,t.y+=i,e.x-=r,e.y-=i)}function u(e){A!==e&&(A=C.globalAlpha=e)}function a(e){O!==e&&(e===THREE.NormalBlending?C.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?C.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(C.globalCompositeOperation="darker"),O=e)}function f(e){D!==e&&(D=C.lineWidth=e)}function l(e){P!==e&&(P=C.lineCap=e)}function c(e){H!==e&&(H=C.lineJoin=e)}function h(e){M!==e&&(M=C.strokeStyle=e)}function p(e){_!==e&&(_=C.fillStyle=e)}function d(e,t){if(B!==e||j!==t)C.setLineDash([e,t]),B=e,j=t}console.log("THREE.CanvasRenderer",THREE.REVISION);var v=THREE.Math.smoothstep;e=e||{};var m=this,g,y,b,w=new THREE.Projector,E=void 0!==e.canvas?e.canvas:document.createElement("canvas"),S=E.width,x=E.height,T=Math.floor(S/2),N=Math.floor(x/2),C=E.getContext("2d",{alpha:!0===e.alpha}),k=new THREE.Color(0),L=0,A=1,O=0,M=null,_=null,D=null,P=null,H=null,B=null,j=0,F,I,q,R;new THREE.RenderableVertex;new THREE.RenderableVertex;var U,z,W,X,V,$,J=new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;var K=new THREE.Color,Q=new THREE.Color,G=new THREE.Color,Y={},Z,et,tt,nt,rt,it,st,ot=new THREE.Box2,ut=new THREE.Box2,at=new THREE.Box2,ft=new THREE.Color,lt=new THREE.Color,ct=new THREE.Color,ht=new THREE.Vector3,pt=new THREE.Vector3,dt=new THREE.Vector3,vt=new THREE.Matrix3;void 0===C.setLineDash&&(C.setLineDash=function(){});this.domElement=E;this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,t,n){S=e*this.devicePixelRatio;x=t*this.devicePixelRatio;E.width=S;E.height=x;T=Math.floor(S/2);N=Math.floor(x/2);!1!==n&&(E.style.width=e+"px",E.style.height=t+"px");ot.min.set(-T,-N);ot.max.set(T,N);ut.min.set(-T,-N);ut.max.set(T,N);A=1;O=0;H=P=D=_=M=null;this.setViewport(0,0,e,t)};this.setViewport=function(e,t,n,r){C.setTransform(n*this.devicePixelRatio/S,0,0,-(r*this.devicePixelRatio)/x,e*this.devicePixelRatio,x-t*this.devicePixelRatio);C.translate(T,N)};this.setScissor=function(){};this.enableScissorTest=function(){};this.setClearColor=function(e,t){k.set(e);L=void 0!==t?t:1;ut.min.set(-T,-N);ut.max.set(T,N)};this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){!1===ut.empty()&&(ut.intersect(ot),ut.expandByScalar(2),1>L&&C.clearRect(ut.min.x|0,ut.min.y|0,ut.max.x-ut.min.x|0,ut.max.y-ut.min.y|0),0<L&&(a(THREE.NormalBlending),u(1),p("rgba("+Math.floor(255*k.r)+","+Math.floor(255*k.g)+","+Math.floor(255*k.b)+","+L+")"),C.fillRect(ut.min.x|0,ut.min.y|0,ut.max.x-ut.min.x|0,ut.max.y-ut.min.y|0)),ut.makeEmpty())};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(e,E){if(!1===E instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear();m.info.render.vertices=0;m.info.render.faces=0;g=w.projectScene(e,E,this.sortObjects,this.sortElements);y=g.elements;b=g.lights;F=E;vt.getNormalMatrix(E.matrixWorldInverse);ft.setRGB(0,0,0);lt.setRGB(0,0,0);ct.setRGB(0,0,0);for(var S=0,x=b.length;S<x;S++){var k=b[S],L=k.color;k instanceof THREE.AmbientLight?ft.add(L):k instanceof THREE.DirectionalLight?lt.add(L):k instanceof THREE.PointLight&&ct.add(L)}S=0;for(x=y.length;S<x;S++){var A=y[S],O=A.material;if(void 0!==O&&0!==O.opacity){at.makeEmpty();if(A instanceof THREE.RenderableSprite){I=A;I.x*=T;I.y*=N;var k=I,M=A,L=O;u(L.opacity);a(L.blending);var _=M.scale.x*T,M=M.scale.y*N,A=.5*Math.sqrt(_*_+M*M);at.min.set(k.x-A,k.y-A);at.max.set(k.x+A,k.y+A);if(L instanceof THREE.SpriteMaterial||L instanceof THREE.ParticleSystemMaterial){var D=L.map;if(null!==D){!1===D.hasEventListener("update",r)&&(void 0!==D.image&&0<D.image.width&&i(D),D.addEventListener("update",r));A=Y[D.id];void 0!==A?p(A):p("rgba( 0, 0, 0, 1 )");var P=D.image,A=P.width*D.offset.x,O=P.height*D.offset.y,H=P.width*D.repeat.x,D=P.height*D.repeat.y,P=_/H,B=M/D;C.save();C.translate(k.x,k.y);0!==L.rotation&&C.rotate(L.rotation);C.translate(-_/2,-M/2);C.scale(P,B);C.translate(-A,-O);C.fillRect(A,O,H,D)}else p(L.color.getStyle()),C.save(),C.translate(k.x,k.y),0!==L.rotation&&C.rotate(L.rotation),C.scale(_,-M),C.fillRect(-.5,-.5,1,1);C.restore()}else L instanceof THREE.SpriteCanvasMaterial&&(h(L.color.getStyle()),p(L.color.getStyle()),C.save(),C.translate(k.x,k.y),0!==L.rotation&&C.rotate(L.rotation),C.scale(_,M),L.program(C),C.restore())}else if(A instanceof THREE.RenderableLine){if(I=A.v1,q=A.v2,I.positionScreen.x*=T,I.positionScreen.y*=N,q.positionScreen.x*=T,q.positionScreen.y*=N,at.setFromPoints([I.positionScreen,q.positionScreen]),!0===ot.isIntersectionBox(at))if(k=I,L=q,_=A,M=O,u(M.opacity),a(M.blending),C.beginPath(),C.moveTo(k.positionScreen.x,k.positionScreen.y),C.lineTo(L.positionScreen.x,L.positionScreen.y),M instanceof THREE.LineBasicMaterial){f(M.linewidth);l(M.linecap);c(M.linejoin);if(M.vertexColors!==THREE.VertexColors)h(M.color.getStyle());else if(A=_.vertexColors[0].getStyle(),_=_.vertexColors[1].getStyle(),A===_)h(A);else{try{var j=C.createLinearGradient(k.positionScreen.x,k.positionScreen.y,L.positionScreen.x,L.positionScreen.y);j.addColorStop(0,A);j.addColorStop(1,_)}catch(mt){j=A}h(j)}C.stroke();at.expandByScalar(2*M.linewidth)}else M instanceof THREE.LineDashedMaterial&&(f(M.linewidth),l(M.linecap),c(M.linejoin),h(M.color.getStyle()),d(M.dashSize,M.gapSize),C.stroke(),at.expandByScalar(2*M.linewidth),d(null,null))}else if(A instanceof THREE.RenderableFace){I=A.v1;q=A.v2;R=A.v3;if(-1>I.positionScreen.z||1<I.positionScreen.z)continue;if(-1>q.positionScreen.z||1<q.positionScreen.z)continue;if(-1>R.positionScreen.z||1<R.positionScreen.z)continue;I.positionScreen.x*=T;I.positionScreen.y*=N;q.positionScreen.x*=T;q.positionScreen.y*=N;R.positionScreen.x*=T;R.positionScreen.y*=N;0<O.overdraw&&(o(I.positionScreen,q.positionScreen,O.overdraw),o(q.positionScreen,R.positionScreen,O.overdraw),o(R.positionScreen,I.positionScreen,O.overdraw));at.setFromPoints([I.positionScreen,q.positionScreen,R.positionScreen]);if(!0===ot.isIntersectionBox(at)){L=I;_=q;M=R;k=O;m.info.render.vertices+=3;m.info.render.faces++;u(k.opacity);a(k.blending);U=L.positionScreen.x;z=L.positionScreen.y;W=_.positionScreen.x;X=_.positionScreen.y;V=M.positionScreen.x;$=M.positionScreen.y;var O=U,H=z,D=W,P=X,B=V,gt=$;C.beginPath();C.moveTo(O,H);C.lineTo(D,P);C.lineTo(B,gt);C.closePath();if((k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial)&&null===k.map){K.copy(k.color);Q.copy(k.emissive);k.vertexColors===THREE.FaceColors&&K.multiply(A.color);J.copy(ft);pt.copy(L.positionWorld).add(_.positionWorld).add(M.positionWorld).divideScalar(3);L=pt;_=A.normalModel;M=J;A=0;for(O=b.length;A<O;A++)H=b[A],G.copy(H.color),H instanceof THREE.DirectionalLight?(D=ht.setFromMatrixPosition(H.matrixWorld).normalize(),P=_.dot(D),0>=P||(P*=H.intensity,M.add(G.multiplyScalar(P)))):H instanceof THREE.PointLight&&(D=ht.setFromMatrixPosition(H.matrixWorld),P=_.dot(ht.subVectors(D,L).normalize()),0>=P||(P*=0==H.distance?1:1-Math.min(L.distanceTo(D)/H.distance,1),0!=P&&(P*=H.intensity,M.add(G.multiplyScalar(P)))));J.multiply(K).add(Q);!0===k.wireframe?t(J,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):n(J)}else k instanceof THREE.MeshBasicMaterial||k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial?null!==k.map?k.map.mapping instanceof THREE.UVMapping&&(Z=A.uvs,s(U,z,W,X,V,$,Z[0].x,Z[0].y,Z[1].x,Z[1].y,Z[2].x,Z[2].y,k.map)):null!==k.envMap?k.envMap.mapping instanceof THREE.SphericalReflectionMapping?(dt.copy(A.vertexNormalsModel[0]).applyMatrix3(vt),et=.5*dt.x+.5,tt=.5*dt.y+.5,dt.copy(A.vertexNormalsModel[1]).applyMatrix3(vt),nt=.5*dt.x+.5,rt=.5*dt.y+.5,dt.copy(A.vertexNormalsModel[2]).applyMatrix3(vt),it=.5*dt.x+.5,st=.5*dt.y+.5,s(U,z,W,X,V,$,et,tt,nt,rt,it,st,k.envMap)):k.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(dt.copy(A.vertexNormalsModel[0]).applyMatrix3(vt),et=-.5*dt.x+.5,tt=-.5*dt.y+.5,dt.copy(A.vertexNormalsModel[1]).applyMatrix3(vt),nt=-.5*dt.x+.5,rt=-.5*dt.y+.5,dt.copy(A.vertexNormalsModel[2]).applyMatrix3(vt),it=-.5*dt.x+.5,st=-.5*dt.y+.5,s(U,z,W,X,V,$,et,tt,nt,rt,it,st,k.envMap)):(J.copy(k.color),k.vertexColors===THREE.FaceColors&&J.multiply(A.color),!0===k.wireframe?t(J,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):n(J)):(k instanceof THREE.MeshDepthMaterial?J.r=J.g=J.b=1-v(L.positionScreen.z*L.positionScreen.w,F.near,F.far):k instanceof THREE.MeshNormalMaterial?(dt.copy(A.normalModel).applyMatrix3(vt),J.setRGB(dt.x,dt.y,dt.z).multiplyScalar(.5).addScalar(.5)):J.setRGB(1,1,1),!0===k.wireframe?t(J,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):n(J))}}ut.union(at)}}}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n		uniform bool useRefract;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n	vec3 reflectVec;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n		if ( useRefract ) {\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		} else { \n			reflectVec = reflect( cameraToVertex, worldNormal );\n		}\n	#else\n		reflectVec = vReflect;\n	#endif\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#endif\n	#ifdef GAMMA_INPUT\n		cubeColor.xyz *= cubeColor.xyz;\n	#endif\n	if ( combine == 1 ) {\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n	} else if ( combine == 2 ) {\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n	} else {\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n	}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n	varying vec3 vReflect;\n	uniform float refractionRatio;\n	uniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#endif\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n	#endif\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n	if ( useRefract ) {\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n	} else {\n		vReflect = reflect( cameraToVertex, worldNormal );\n	}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	#ifdef GAMMA_INPUT\n		texelColor.xyz *= texelColor.xyz;\n	#endif\n	gl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\n	varying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\n	vUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize(  q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n	#ifdef DOUBLE_SIDED\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n		#ifdef WRAP_AROUND\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n		#endif\n	#endif\n	#ifdef WRAP_AROUND\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n		#ifdef DOUBLE_SIDED\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n		#endif\n	#endif\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n	#ifdef DOUBLE_SIDED\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n	#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n		#ifdef DOUBLE_SIDED\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n			#ifdef WRAP_AROUND\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n			#endif\n		#endif\n		#ifdef WRAP_AROUND\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n			#ifdef DOUBLE_SIDED\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n			#endif\n		#endif\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n		#ifdef DOUBLE_SIDED\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n		#endif\n	}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n			lVector = normalize( lVector );\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n			#ifdef DOUBLE_SIDED\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n				#ifdef WRAP_AROUND\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n				#endif\n			#endif\n			#ifdef WRAP_AROUND\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n				#ifdef DOUBLE_SIDED\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n				#endif\n			#endif\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n			#ifdef DOUBLE_SIDED\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n			#endif\n		}\n	}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n		float dotProduct = dot( transformedNormal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n		#ifdef DOUBLE_SIDED\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n		#endif\n	}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	varying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	vWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	varying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\n	vec3 pointDiffuse  = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float dotProduct = dot( normal, lVector );\n		#ifdef WRAP_AROUND\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n		#else\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n		#endif\n		pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n	}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	vec3 spotDiffuse  = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n			float dotProduct = dot( normal, lVector );\n			#ifdef WRAP_AROUND\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n			#else\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n			#endif\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n		}\n	}\n#endif\n#if MAX_DIR_LIGHTS > 0\n	vec3 dirDiffuse  = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n		float dotProduct = dot( normal, dirVector );\n		#ifdef WRAP_AROUND\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n		#else\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n		#endif\n		dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n	}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	vec3 hemiDiffuse  = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n		hemiDiffuse += diffuse * hemiColor;\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n		vec3 lVectorGround = -lVector;\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n		float dotProductGround = dot( normal, lVectorGround );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n	}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n#endif\n#ifdef METAL\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n	#ifdef GAMMA_INPUT\n		vColor = color * color;\n	#else\n		vColor = color;\n	#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	#ifdef USE_MORPHTARGETS\n	vec4 skinVertex = vec4( morphed, 1.0 );\n	#else\n	vec4 skinVertex = vec4( position, 1.0 );\n	#endif\n	vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n	skinned      += boneMatY * skinVertex * skinWeight.y;\n	skinned      += boneMatZ * skinVertex * skinWeight.z;\n	skinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n	morphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\n	mvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	vec3 morphedNormal = vec3( 0.0 );\n	morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n	morphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = skinWeight.x * boneMatX;\n	skinMatrix 	+= skinWeight.y * boneMatY;\n	skinMatrix 	+= skinWeight.z * boneMatZ;\n	skinMatrix 	+= skinWeight.w * boneMatW;\n	#ifdef USE_MORPHNORMALS\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n	#else\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n	#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\n	objectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n	objectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n	objectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	float unpackDepth( const in vec4 rgba_depth ) {\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n	}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n	#ifdef SHADOWMAP_DEBUG\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n	#endif\n	#ifdef SHADOWMAP_CASCADE\n		int inFrustumCount = 0;\n	#endif\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		#ifdef SHADOWMAP_CASCADE\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n		#else\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		#endif\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n			shadowCoord.z += shadowBias[ i ];\n			#if defined( SHADOWMAP_TYPE_PCF )\n				float shadow = 0.0;\n				const float shadowDelta = 1.0 / 9.0;\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n				float shadow = 0.0;\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n				mat3 shadowKernel;\n				mat3 depthKernel;\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n			#else\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n				if ( fDepth < shadowCoord.z )\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n			#endif\n		}\n		#ifdef SHADOWMAP_DEBUG\n			#ifdef SHADOWMAP_CASCADE\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n			#else\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n			#endif\n		#endif\n	}\n	#ifdef GAMMA_OUTPUT\n		shadowColor *= shadowColor;\n	#endif\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n	}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n	#endif\n#endif",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif"};THREE.UniformsUtils={merge:function(e){var t,n,r,i={};for(t=0;t<e.length;t++)for(n in r=this.clone(e[t]),r)i[n]=r[n];return i},clone:function(e){var t,n,r,i={};for(t in e)for(n in i[t]={},e[t])r=e[t][n],i[t][n]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return i}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED\n		if ( gl_FrontFacing )\n			gl_FragColor.xyz *= vLightFront;\n		else\n			gl_FragColor.xyz *= vLightBack;\n	#else\n		gl_FragColor.xyz *= vLightFront;\n	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n	#else\n		gl_PointSize = size;\n	#endif\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	float color = 1.0 - smoothstep( mNear, mFar, depth );\n	gl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	gl_FragColor = vec4( vec3( 1.0 ), opacity );\n	vec3 specularTex = vec3( 1.0 );\n	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n	normalTex.xy *= uNormalScale;\n	normalTex = normalize( normalTex );\n	if( enableDiffuse ) {\n		#ifdef GAMMA_INPUT\n			vec4 texelColor = texture2D( tDiffuse, vUv );\n			texelColor.xyz *= texelColor.xyz;\n			gl_FragColor = gl_FragColor * texelColor;\n		#else\n			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n		#endif\n	}\n	if( enableAO ) {\n		#ifdef GAMMA_INPUT\n			vec4 aoColor = texture2D( tAO, vUv );\n			aoColor.xyz *= aoColor.xyz;\n			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n		#else\n			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n		#endif\n	}\n	if( enableSpecular )\n		specularTex = texture2D( tSpecular, vUv ).xyz;\n	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n	vec3 finalNormal = tsb * normalTex;\n	#ifdef FLIP_SIDED\n		finalNormal = -finalNormal;\n	#endif\n	vec3 normal = normalize( finalNormal );\n	vec3 viewPosition = normalize( vViewPosition );\n	#if MAX_POINT_LIGHTS > 0\n		vec3 pointDiffuse = vec3( 0.0 );\n		vec3 pointSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n			float pointDistance = 1.0;\n			if ( pointLightDistance[ i ] > 0.0 )\n				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n			pointVector = normalize( pointVector );\n			#ifdef WRAP_AROUND\n				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n			#else\n				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n			#endif\n			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n			vec3 pointHalfVector = normalize( pointVector + viewPosition );\n			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\n			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n		}\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		vec3 spotDiffuse = vec3( 0.0 );\n		vec3 spotSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n			float spotDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n			spotVector = normalize( spotVector );\n			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n			if ( spotEffect > spotLightAngleCos[ i ] ) {\n				spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n				#ifdef WRAP_AROUND\n					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n				#else\n					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n				#endif\n				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n				vec3 spotHalfVector = normalize( spotVector + viewPosition );\n				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n				float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\n				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n			}\n		}\n	#endif\n	#if MAX_DIR_LIGHTS > 0\n		vec3 dirDiffuse = vec3( 0.0 );\n		vec3 dirSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n			vec3 dirVector = normalize( lDirection.xyz );\n			#ifdef WRAP_AROUND\n				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n			#else\n				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n			#endif\n			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n			vec3 dirHalfVector = normalize( dirVector + viewPosition );\n			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\n			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n		}\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		vec3 hemiDiffuse  = vec3( 0.0 );\n		vec3 hemiSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n			vec3 lVector = normalize( lDirection.xyz );\n			float dotProduct = dot( normal, lVector );\n			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n			hemiDiffuse += diffuse * hemiColor;\n			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n			float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n			vec3 lVectorGround = -lVector;\n			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n			float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n			float dotProductGround = dot( normal, lVectorGround );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\n			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\n			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n		}\n	#endif\n	vec3 totalDiffuse = vec3( 0.0 );\n	vec3 totalSpecular = vec3( 0.0 );\n	#if MAX_DIR_LIGHTS > 0\n		totalDiffuse += dirDiffuse;\n		totalSpecular += dirSpecular;\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		totalDiffuse += hemiDiffuse;\n		totalSpecular += hemiSpecular;\n	#endif\n	#if MAX_POINT_LIGHTS > 0\n		totalDiffuse += pointDiffuse;\n		totalSpecular += pointSpecular;\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		totalDiffuse += spotDiffuse;\n		totalSpecular += spotSpecular;\n	#endif\n	#ifdef METAL\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n	#else\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n	#endif\n	if ( enableReflection ) {\n		vec3 vReflect;\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		if ( useRefract ) {\n			vReflect = refract( cameraToVertex, normal, refractionRatio );\n		} else {\n			vReflect = reflect( cameraToVertex, normal );\n		}\n		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n		#ifdef GAMMA_INPUT\n			cubeColor.xyz *= cubeColor.xyz;\n		#endif\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n	}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n	uniform sampler2D tDisplacement;\n	uniform float uDisplacementScale;\n	uniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"	#ifdef USE_SKINNING\n		vNormal = normalize( normalMatrix * skinnedNormal.xyz );\n		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n		vTangent = normalize( normalMatrix * skinnedTangent.xyz );\n	#else\n		vNormal = normalize( normalMatrix * normal );\n		vTangent = normalize( normalMatrix * tangent.xyz );\n	#endif\n	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n	vUv = uv * uRepeat + uOffset;\n	vec3 displacedPosition;\n	#ifdef VERTEX_TEXTURES\n		if ( enableDisplacement ) {\n			vec3 dv = texture2D( tDisplacement, uv ).xyz;\n			float df = uDisplacementScale * dv.x + uDisplacementBias;\n			displacedPosition = position + normalize( normal ) * df;\n		} else {\n			#ifdef USE_SKINNING\n				vec4 skinVertex = vec4( position, 1.0 );\n				vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n				skinned 	  += boneMatY * skinVertex * skinWeight.y;\n				skinned 	  += boneMatZ * skinVertex * skinWeight.z;\n				skinned 	  += boneMatW * skinVertex * skinWeight.w;\n				displacedPosition  = skinned.xyz;\n			#else\n				displacedPosition = position;\n			#endif\n		}\n	#else\n		#ifdef USE_SKINNING\n			vec4 skinVertex = vec4( position, 1.0 );\n			vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n			skinned 	  += boneMatY * skinVertex * skinWeight.y;\n			skinned 	  += boneMatZ * skinVertex * skinWeight.z;\n			skinned 	  += boneMatW * skinVertex * skinWeight.w;\n			displacedPosition  = skinned.xyz;\n		#else\n			displacedPosition = position;\n		#endif\n	#endif\n	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"	vWorldPosition = worldPosition.xyz;\n	vViewPosition = -mvPosition.xyz;\n	#ifdef USE_SHADOWMAP\n		for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n		}\n	#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	vWorldPosition = worldPosition.xyz;\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bit_mask;\n	return res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n	#else\n		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n	#endif\n}"].join("\n")}};THREE.WebGLRenderer=function(e){function t(e,t){var n=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var i in r.attributes){var s=r.attributes[i];if(!s.__webglInitialized||s.createUniqueBuffers){s.__webglInitialized=!0;var o=1;"v2"===s.type?o=2:"v3"===s.type?o=3:"v4"===s.type?o=4:"c"===s.type&&(o=3);s.size=o;s.array=new Float32Array(n*o);s.buffer=Nt.createBuffer();s.buffer.belongsToAttribute=i;s.needsUpdate=!0}e.__webglCustomAttributesList.push(s)}}}function n(e,t){var n=t.geometry,o=e.faces3,u=3*o.length,a=1*o.length,f=3*o.length,o=r(t,e),l=s(o),c=i(o),h=o.vertexColors?o.vertexColors:!1;e.__vertexArray=new Float32Array(3*u);c&&(e.__normalArray=new Float32Array(3*u));n.hasTangents&&(e.__tangentArray=new Float32Array(4*u));h&&(e.__colorArray=new Float32Array(3*u));l&&(0<n.faceVertexUvs.length&&(e.__uvArray=new Float32Array(2*u)),1<n.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*u)));t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*u),e.__skinWeightArray=new Float32Array(4*u));n=null!==Ot&&21845<a?Uint32Array:Uint16Array;e.__typeArray=n;e.__faceArray=new n(3*a);e.__lineArray=new n(2*f);if(e.numMorphTargets)for(e.__morphTargetsArrays=[],n=0,l=e.numMorphTargets;n<l;n++)e.__morphTargetsArrays.push(new Float32Array(3*u));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],n=0,l=e.numMorphNormals;n<l;n++)e.__morphNormalsArrays.push(new Float32Array(3*u));e.__webglFaceCount=3*a;e.__webglLineCount=2*f;if(o.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var p in o.attributes){var a=o.attributes[p],f={},d;for(d in a)f[d]=a[d];if(!f.__webglInitialized||f.createUniqueBuffers)f.__webglInitialized=!0,n=1,"v2"===f.type?n=2:"v3"===f.type?n=3:"v4"===f.type?n=4:"c"===f.type&&(n=3),f.size=n,f.array=new Float32Array(u*n),f.buffer=Nt.createBuffer(),f.buffer.belongsToAttribute=p,a.needsUpdate=!0,f.__original=a;e.__webglCustomAttributesList.push(f)}}e.__inittedArrays=!0}function r(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function i(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function s(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function o(e,t,n,r){for(var i in t){var s=t[i],o=n[i];if(0<=s)if(o){var u=o.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,o.buffer);a(s);Nt.vertexAttribPointer(s,u,Nt.FLOAT,!1,0,r*u*4)}else e.defaultAttributeValues&&(2===e.defaultAttributeValues[i].length?Nt.vertexAttrib2fv(s,e.defaultAttributeValues[i]):3===e.defaultAttributeValues[i].length&&Nt.vertexAttrib3fv(s,e.defaultAttributeValues[i]))}f()}function u(){for(var e=0,t=mt.length;e<t;e++)mt[e]=0}function a(e){mt[e]=1;0===gt[e]&&(Nt.enableVertexAttribArray(e),gt[e]=1)}function f(){for(var e=0,t=gt.length;e<t;e++)gt[e]!==mt[e]&&(Nt.disableVertexAttribArray(e),gt[e]=0)}function l(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function c(e,t){return t[0]-e[0]}function h(e,t,n){if(e.length)for(var r=0,i=e.length;r<i;r++)Q=V=null,J=K=Z=Y=st=it=et=-1,xt=!0,e[r].render(t,n,dt,vt),Q=V=null,J=K=Z=Y=st=it=et=-1,xt=!0}function p(e,t,n,r,i,s,o,u){var a,f,l,c;t?(f=e.length-1,c=t=-1):(f=0,t=e.length,c=1);for(var h=f;h!==t;h+=c)if(a=e[h],a.render){f=a.object;l=a.buffer;if(u)a=u;else{a=a[n];if(!a)continue;o&&W.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst);W.setDepthTest(a.depthTest);W.setDepthWrite(a.depthWrite);k(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}W.setMaterialFaces(a);l instanceof THREE.BufferGeometry?W.renderBufferDirect(r,i,s,a,l,f):W.renderBuffer(r,i,s,a,l,f)}}function d(e,t,n,r,i,s,o){for(var u,a,f=0,l=e.length;f<l;f++)if(u=e[f],a=u.object,a.visible){if(o)u=o;else{u=u[t];if(!u)continue;s&&W.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst);W.setDepthTest(u.depthTest);W.setDepthWrite(u.depthWrite);k(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}W.renderImmediateObject(n,r,i,u,a)}}function v(e,r){var i,s,o;if(void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,s=e.geometry,void 0!==s&&void 0===s.__webglInit))if(s.__webglInit=!0,s.addEventListener("dispose",zt),s instanceof THREE.BufferGeometry)for(o in s.attributes){var u="index"===o?Nt.ELEMENT_ARRAY_BUFFER:Nt.ARRAY_BUFFER,a=s.attributes[o];a.buffer=Nt.createBuffer();Nt.bindBuffer(u,a.buffer);Nt.bufferData(u,a.array,Nt.STATIC_DRAW)}else if(e instanceof THREE.Mesh)for(i in o=e.material,void 0===s.geometryGroups&&s.makeGroups(o instanceof THREE.MeshFaceMaterial,Ot?4294967296:65535),s.geometryGroups){if(o=s.geometryGroups[i],!o.__webglVertexBuffer){u=o;u.__webglVertexBuffer=Nt.createBuffer();u.__webglNormalBuffer=Nt.createBuffer();u.__webglTangentBuffer=Nt.createBuffer();u.__webglColorBuffer=Nt.createBuffer();u.__webglUVBuffer=Nt.createBuffer();u.__webglUV2Buffer=Nt.createBuffer();u.__webglSkinIndicesBuffer=Nt.createBuffer();u.__webglSkinWeightsBuffer=Nt.createBuffer();u.__webglFaceBuffer=Nt.createBuffer();u.__webglLineBuffer=Nt.createBuffer();var f=a=void 0;if(u.numMorphTargets)for(u.__webglMorphTargetsBuffers=[],a=0,f=u.numMorphTargets;a<f;a++)u.__webglMorphTargetsBuffers.push(Nt.createBuffer());if(u.numMorphNormals)for(u.__webglMorphNormalsBuffers=[],a=0,f=u.numMorphNormals;a<f;a++)u.__webglMorphNormalsBuffers.push(Nt.createBuffer());W.info.memory.geometries++;n(o,e);s.verticesNeedUpdate=!0;s.morphTargetsNeedUpdate=!0;s.elementsNeedUpdate=!0;s.uvsNeedUpdate=!0;s.normalsNeedUpdate=!0;s.tangentsNeedUpdate=!0;s.colorsNeedUpdate=!0}}else e instanceof THREE.Line?s.__webglVertexBuffer||(o=s,o.__webglVertexBuffer=Nt.createBuffer(),o.__webglColorBuffer=Nt.createBuffer(),o.__webglLineDistanceBuffer=Nt.createBuffer(),W.info.memory.geometries++,o=s,u=o.vertices.length,o.__vertexArray=new Float32Array(3*u),o.__colorArray=new Float32Array(3*u),o.__lineDistanceArray=new Float32Array(1*u),o.__webglLineCount=u,t(o,e),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0,s.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&!s.__webglVertexBuffer&&(o=s,o.__webglVertexBuffer=Nt.createBuffer(),o.__webglColorBuffer=Nt.createBuffer(),W.info.memory.geometries++,o=s,u=o.vertices.length,o.__vertexArray=new Float32Array(3*u),o.__colorArray=new Float32Array(3*u),o.__sortArray=[],o.__webglParticleCount=u,t(o,e),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0);if(void 0===e.__webglActive){if(e instanceof THREE.Mesh)if(s=e.geometry,s instanceof THREE.BufferGeometry)m(r.__webglObjects,s,e);else{if(s instanceof THREE.Geometry)for(i in s.geometryGroups)o=s.geometryGroups[i],m(r.__webglObjects,o,e)}else e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(s=e.geometry,m(r.__webglObjects,s,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?r.__webglObjectsImmediate.push({id:null,object:e,opaque:null,transparent:null,z:0}):e instanceof THREE.Sprite?r.__webglSprites.push(e):e instanceof THREE.LensFlare&&r.__webglFlares.push(e);e.__webglActive=!0}}function m(e,t,n){e.push({id:null,buffer:t,object:n,opaque:null,transparent:null,z:0})}function g(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function y(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function b(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Line?w(t.__webglObjects,e):e instanceof THREE.Sprite?E(t.__webglSprites,e):e instanceof THREE.LensFlare?E(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&w(t.__webglObjectsImmediate,e);delete e.__webglActive}function w(e,t){for(var n=e.length-1;0<=n;n--)e[n].object===t&&e.splice(n,1)}function E(e,t){for(var n=e.length-1;0<=n;n--)e[n]===t&&e.splice(n,1)}function S(e,t,n,r,i){G=0;r.needsUpdate&&(r.program&&Jt(r),W.initMaterial(r,t,n,i),r.needsUpdate=!1);r.morphTargets&&!i.__webglMorphTargetInfluences&&(i.__webglMorphTargetInfluences=new Float32Array(W.maxMorphTargets));var s=!1,o=r.program,u=o.uniforms,a=r.uniforms;o.id!==V&&(Nt.useProgram(o.program),V=o.id,s=!0);r.id!==J&&(J=r.id,s=!0);if(s||e!==Q)Nt.uniformMatrix4fv(u.projectionMatrix,!1,e.projectionMatrix.elements),R&&Nt.uniform1f(u.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==Q&&(Q=e);if(r.skinning)if(Bt&&i.skeleton.useVertexTexture){if(null!==u.boneTexture){var f=x();Nt.uniform1i(u.boneTexture,f);W.setTexture(i.skeleton.boneTexture,f)}null!==u.boneTextureWidth&&Nt.uniform1i(u.boneTextureWidth,i.skeleton.boneTextureWidth);null!==u.boneTextureHeight&&Nt.uniform1i(u.boneTextureHeight,i.skeleton.boneTextureHeight)}else null!==u.boneGlobalMatrices&&Nt.uniformMatrix4fv(u.boneGlobalMatrices,!1,i.skeleton.boneMatrices);if(s){n&&r.fog&&(a.fogColor.value=n.color,n instanceof THREE.Fog?(a.fogNear.value=n.near,a.fogFar.value=n.far):n instanceof THREE.FogExp2&&(a.fogDensity.value=n.density));if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(xt){var l,c=f=0,h=0,p,d,v,m=Tt,g=m.directional.colors,y=m.directional.positions,b=m.point.colors,w=m.point.positions,E=m.point.distances,S=m.spot.colors,C=m.spot.positions,k=m.spot.distances,A=m.spot.directions,O=m.spot.anglesCos,D=m.spot.exponents,P=m.hemi.skyColors,H=m.hemi.groundColors,B=m.hemi.positions,j=0,F=0,I=0,q=0,U=0,z=0,X=0,$=0,K=l=0;n=v=K=0;for(s=t.length;n<s;n++)if(l=t[n],!l.onlyShadow)if(p=l.color,d=l.intensity,v=l.distance,l instanceof THREE.AmbientLight)l.visible&&(W.gammaInput?(f+=p.r*p.r,c+=p.g*p.g,h+=p.b*p.b):(f+=p.r,c+=p.g,h+=p.b));else if(l instanceof THREE.DirectionalLight){if(U+=1,l.visible&&(St.setFromMatrixPosition(l.matrixWorld),Et.setFromMatrixPosition(l.target.matrixWorld),St.sub(Et),St.normalize(),0!==St.x||0!==St.y||0!==St.z))l=3*j,y[l]=St.x,y[l+1]=St.y,y[l+2]=St.z,W.gammaInput?T(g,l,p,d*d):N(g,l,p,d),j+=1}else l instanceof THREE.PointLight?(z+=1,l.visible&&(K=3*F,W.gammaInput?T(b,K,p,d*d):N(b,K,p,d),Et.setFromMatrixPosition(l.matrixWorld),w[K]=Et.x,w[K+1]=Et.y,w[K+2]=Et.z,E[F]=v,F+=1)):l instanceof THREE.SpotLight?(X+=1,l.visible&&(K=3*I,W.gammaInput?T(S,K,p,d*d):N(S,K,p,d),Et.setFromMatrixPosition(l.matrixWorld),C[K]=Et.x,C[K+1]=Et.y,C[K+2]=Et.z,k[I]=v,St.copy(Et),Et.setFromMatrixPosition(l.target.matrixWorld),St.sub(Et),St.normalize(),A[K]=St.x,A[K+1]=St.y,A[K+2]=St.z,O[I]=Math.cos(l.angle),D[I]=l.exponent,I+=1)):l instanceof THREE.HemisphereLight&&($+=1,l.visible&&(St.setFromMatrixPosition(l.matrixWorld),St.normalize(),0!==St.x||0!==St.y||0!==St.z))&&(v=3*q,B[v]=St.x,B[v+1]=St.y,B[v+2]=St.z,p=l.color,l=l.groundColor,W.gammaInput?(d*=d,T(P,v,p,d),T(H,v,l,d)):(N(P,v,p,d),N(H,v,l,d)),q+=1);n=3*j;for(s=Math.max(g.length,3*U);n<s;n++)g[n]=0;n=3*F;for(s=Math.max(b.length,3*z);n<s;n++)b[n]=0;n=3*I;for(s=Math.max(S.length,3*X);n<s;n++)S[n]=0;n=3*q;for(s=Math.max(P.length,3*$);n<s;n++)P[n]=0;n=3*q;for(s=Math.max(H.length,3*$);n<s;n++)H[n]=0;m.directional.length=j;m.point.length=F;m.spot.length=I;m.hemi.length=q;m.ambient[0]=f;m.ambient[1]=c;m.ambient[2]=h;xt=!1}n=Tt;a.ambientLightColor.value=n.ambient;a.directionalLightColor.value=n.directional.colors;a.directionalLightDirection.value=n.directional.positions;a.pointLightColor.value=n.point.colors;a.pointLightPosition.value=n.point.positions;a.pointLightDistance.value=n.point.distances;a.spotLightColor.value=n.spot.colors;a.spotLightPosition.value=n.spot.positions;a.spotLightDistance.value=n.spot.distances;a.spotLightDirection.value=n.spot.directions;a.spotLightAngleCos.value=n.spot.anglesCos;a.spotLightExponent.value=n.spot.exponents;a.hemisphereLightSkyColor.value=n.hemi.skyColors;a.hemisphereLightGroundColor.value=n.hemi.groundColors;a.hemisphereLightDirection.value=n.hemi.positions}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){a.opacity.value=r.opacity;W.gammaInput?a.diffuse.value.copyGammaToLinear(r.color):a.diffuse.value=r.color;a.map.value=r.map;a.lightMap.value=r.lightMap;a.specularMap.value=r.specularMap;r.bumpMap&&(a.bumpMap.value=r.bumpMap,a.bumpScale.value=r.bumpScale);r.normalMap&&(a.normalMap.value=r.normalMap,a.normalScale.value.copy(r.normalScale));var Y;r.map?Y=r.map:r.specularMap?Y=r.specularMap:r.normalMap?Y=r.normalMap:r.bumpMap&&(Y=r.bumpMap);void 0!==Y&&(n=Y.offset,Y=Y.repeat,a.offsetRepeat.value.set(n.x,n.y,Y.x,Y.y));a.envMap.value=r.envMap;a.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;a.reflectivity.value=r.reflectivity;a.refractionRatio.value=r.refractionRatio;a.combine.value=r.combine;a.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping}r instanceof THREE.LineBasicMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity,a.dashSize.value=r.dashSize,a.totalSize.value=r.dashSize+r.gapSize,a.scale.value=r.scale):r instanceof THREE.ParticleSystemMaterial?(a.psColor.value=r.color,a.opacity.value=r.opacity,a.size.value=r.size,a.scale.value=_.height/2,a.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(a.shininess.value=r.shininess,W.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive),a.specular.value.copyGammaToLinear(r.specular)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive,a.specular.value=r.specular),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(W.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(a.mNear.value=e.near,a.mFar.value=e.far,a.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(a.opacity.value=r.opacity);if(i.receiveShadow&&!r._shadowPass&&a.shadowMatrix)for(n=Y=0,s=t.length;n<s;n++)f=t[n],f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade)&&(a.shadowMap.value[Y]=f.shadowMap,a.shadowMapSize.value[Y]=f.shadowMapSize,a.shadowMatrix.value[Y]=f.shadowMatrix,a.shadowDarkness.value[Y]=f.shadowDarkness,a.shadowBias.value[Y]=f.shadowBias,Y++);t=r.uniformsList;a=0;for(Y=t.length;a<Y;a++)if(s=o.uniforms[t[a][1]])if(n=t[a][0],c=n.type,f=n.value,"i"===c)Nt.uniform1i(s,f);else if("f"===c)Nt.uniform1f(s,f);else if("v2"===c)Nt.uniform2f(s,f.x,f.y);else if("v3"===c)Nt.uniform3f(s,f.x,f.y,f.z);else if("v4"===c)Nt.uniform4f(s,f.x,f.y,f.z,f.w);else if("c"===c)Nt.uniform3f(s,f.r,f.g,f.b);else if("iv1"===c)Nt.uniform1iv(s,f);else if("iv"===c)Nt.uniform3iv(s,f);else if("fv1"===c)Nt.uniform1fv(s,f);else if("fv"===c)Nt.uniform3fv(s,f);else if("v2v"===c){void 0===n._array&&(n._array=new Float32Array(2*f.length));c=0;for(h=f.length;c<h;c++)m=2*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y;Nt.uniform2fv(s,n._array)}else if("v3v"===c){void 0===n._array&&(n._array=new Float32Array(3*f.length));c=0;for(h=f.length;c<h;c++)m=3*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y,n._array[m+2]=f[c].z;Nt.uniform3fv(s,n._array)}else if("v4v"===c){void 0===n._array&&(n._array=new Float32Array(4*f.length));c=0;for(h=f.length;c<h;c++)m=4*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y,n._array[m+2]=f[c].z,n._array[m+3]=f[c].w;Nt.uniform4fv(s,n._array)}else if("m3"===c)Nt.uniformMatrix3fv(s,!1,f.elements);else if("m3v"===c){void 0===n._array&&(n._array=new Float32Array(9*f.length));c=0;for(h=f.length;c<h;c++)f[c].flattenToArrayOffset(n._array,9*c);Nt.uniformMatrix3fv(s,!1,n._array)}else if("m4"===c)Nt.uniformMatrix4fv(s,!1,f.elements);else if("m4v"===c){void 0===n._array&&(n._array=new Float32Array(16*f.length));c=0;for(h=f.length;c<h;c++)f[c].flattenToArrayOffset(n._array,16*c);Nt.uniformMatrix4fv(s,!1,n._array)}else if("t"===c){if(m=f,f=x(),Nt.uniform1i(s,f),m)if(m.image instanceof Array&&6===m.image.length){if(n=m,s=f,6===n.image.length)if(n.needsUpdate){n.image.__webglTextureCube||(n.addEventListener("dispose",Wt),n.image.__webglTextureCube=Nt.createTexture(),W.info.memory.textures++);Nt.activeTexture(Nt.TEXTURE0+s);Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,n.image.__webglTextureCube);Nt.pixelStorei(Nt.UNPACK_FLIP_Y_WEBGL,n.flipY);s=n instanceof THREE.CompressedTexture;f=[];for(c=0;6>c;c++)W.autoScaleCubemaps&&!s?(h=f,m=c,g=n.image[c],b=Dt,g.width<=b&&g.height<=b||(w=Math.max(g.width,g.height),y=Math.floor(g.width*b/w),b=Math.floor(g.height*b/w),w=document.createElement("canvas"),w.width=y,w.height=b,w.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,y,b),g=w),h[m]=g):f[c]=n.image[c];c=f[0];h=THREE.Math.isPowerOfTwo(c.width)&&THREE.Math.isPowerOfTwo(c.height);m=M(n.format);g=M(n.type);L(Nt.TEXTURE_CUBE_MAP,n,h);for(c=0;6>c;c++)if(s)for(b=f[c].mipmaps,w=0,E=b.length;w<E;w++)y=b[w],n.format!==THREE.RGBAFormat?Nt.compressedTexImage2D(Nt.TEXTURE_CUBE_MAP_POSITIVE_X+c,w,m,y.width,y.height,0,y.data):Nt.texImage2D(Nt.TEXTURE_CUBE_MAP_POSITIVE_X+c,w,m,y.width,y.height,0,m,g,y.data);else Nt.texImage2D(Nt.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,m,m,g,f[c]);n.generateMipmaps&&h&&Nt.generateMipmap(Nt.TEXTURE_CUBE_MAP);n.needsUpdate=!1;if(n.onUpdate)n.onUpdate()}else Nt.activeTexture(Nt.TEXTURE0+s),Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,n.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(n=m,Nt.activeTexture(Nt.TEXTURE0+f),Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,n.__webglTexture)):W.setTexture(m,f)}else if("tv"===c){void 0===n._array&&(n._array=[]);c=0;for(h=n.value.length;c<h;c++)n._array[c]=x();Nt.uniform1iv(s,n._array);c=0;for(h=n.value.length;c<h;c++)m=n.value[c],f=n._array[c],m&&W.setTexture(m,f)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+c);(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==u.cameraPosition&&(Et.setFromMatrixPosition(e.matrixWorld),Nt.uniform3f(u.cameraPosition,Et.x,Et.y,Et.z));(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==u.viewMatrix&&Nt.uniformMatrix4fv(u.viewMatrix,!1,e.matrixWorldInverse.elements)}Nt.uniformMatrix4fv(u.modelViewMatrix,!1,i._modelViewMatrix.elements);u.normalMatrix&&Nt.uniformMatrix3fv(u.normalMatrix,!1,i._normalMatrix.elements);null!==u.modelMatrix&&Nt.uniformMatrix4fv(u.modelMatrix,!1,i.matrixWorld.elements);return o}function x(){var e=G;e>=Mt&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Mt);G+=1;return e}function T(e,t,n,r){e[t]=n.r*n.r*r;e[t+1]=n.g*n.g*r;e[t+2]=n.b*n.b*r}function N(e,t,n,r){e[t]=n.r*r;e[t+1]=n.g*r;e[t+2]=n.b*r}function C(e){e!==ft&&(Nt.lineWidth(e),ft=e)}function k(e,t,n){ot!==e&&(e?Nt.enable(Nt.POLYGON_OFFSET_FILL):Nt.disable(Nt.POLYGON_OFFSET_FILL),ot=e);!e||ut===t&&at===n||(Nt.polygonOffset(t,n),ut=t,at=n)}function L(e,t,n){n?(Nt.texParameteri(e,Nt.TEXTURE_WRAP_S,M(t.wrapS)),Nt.texParameteri(e,Nt.TEXTURE_WRAP_T,M(t.wrapT)),Nt.texParameteri(e,Nt.TEXTURE_MAG_FILTER,M(t.magFilter)),Nt.texParameteri(e,Nt.TEXTURE_MIN_FILTER,M(t.minFilter))):(Nt.texParameteri(e,Nt.TEXTURE_WRAP_S,Nt.CLAMP_TO_EDGE),Nt.texParameteri(e,Nt.TEXTURE_WRAP_T,Nt.CLAMP_TO_EDGE),Nt.texParameteri(e,Nt.TEXTURE_MAG_FILTER,O(t.magFilter)),Nt.texParameteri(e,Nt.TEXTURE_MIN_FILTER,O(t.minFilter)));Lt&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(Nt.texParameterf(e,Lt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Pt)),t.__oldAnisotropy=t.anisotropy)}function A(e,t){Nt.bindRenderbuffer(Nt.RENDERBUFFER,e);t.depthBuffer&&!t.stencilBuffer?(Nt.renderbufferStorage(Nt.RENDERBUFFER,Nt.DEPTH_COMPONENT16,t.width,t.height),Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_ATTACHMENT,Nt.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Nt.renderbufferStorage(Nt.RENDERBUFFER,Nt.DEPTH_STENCIL,t.width,t.height),Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_STENCIL_ATTACHMENT,Nt.RENDERBUFFER,e)):Nt.renderbufferStorage(Nt.RENDERBUFFER,Nt.RGBA4,t.width,t.height)}function O(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Nt.NEAREST:Nt.LINEAR}function M(e){if(e===THREE.RepeatWrapping)return Nt.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Nt.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Nt.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Nt.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Nt.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Nt.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Nt.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Nt.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Nt.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Nt.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Nt.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Nt.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Nt.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Nt.BYTE;if(e===THREE.ShortType)return Nt.SHORT;if(e===THREE.UnsignedShortType)return Nt.UNSIGNED_SHORT;if(e===THREE.IntType)return Nt.INT;if(e===THREE.UnsignedIntType)return Nt.UNSIGNED_INT;if(e===THREE.FloatType)return Nt.FLOAT;if(e===THREE.AlphaFormat)return Nt.ALPHA;if(e===THREE.RGBFormat)return Nt.RGB;if(e===THREE.RGBAFormat)return Nt.RGBA;if(e===THREE.LuminanceFormat)return Nt.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Nt.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Nt.FUNC_ADD;if(e===THREE.SubtractEquation)return Nt.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Nt.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Nt.ZERO;if(e===THREE.OneFactor)return Nt.ONE;if(e===THREE.SrcColorFactor)return Nt.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Nt.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Nt.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Nt.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Nt.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Nt.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Nt.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Nt.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Nt.SRC_ALPHA_SATURATE;if(void 0!==At){if(e===THREE.RGB_S3TC_DXT1_Format)return At.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return At.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return At.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return At.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);e=e||{};var _=void 0!==e.canvas?e.canvas:document.createElement("canvas"),D=void 0!==e.context?e.context:null,P=void 0!==e.precision?e.precision:"highp",H=void 0!==e.alpha?e.alpha:!1,B=void 0!==e.depth?e.depth:!0,j=void 0!==e.stencil?e.stencil:!0,F=void 0!==e.antialias?e.antialias:!1,I=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,q=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,R=void 0!==e.logarithmicDepthBuffer?e.logarithmicDepthBuffer:!1,U=new THREE.Color(0),z=0;this.domElement=_;this.context=null;this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var W=this,X=[],V=null,$=null,J=-1,K=null,Q=null,G=0,Y=-1,Z=-1,et=-1,tt=-1,nt=-1,rt=-1,it=-1,st=-1,ot=null,ut=null,at=null,ft=null,lt=0,ct=0,ht=_.width,pt=_.height,dt=0,vt=0,mt=new Uint8Array(16),gt=new Uint8Array(16),yt=new THREE.Frustum,bt=new THREE.Matrix4,wt=new THREE.Matrix4,Et=new THREE.Vector3,St=new THREE.Vector3,xt=!0,Tt={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},Nt,Ct,kt,Lt,At,Ot;(function(){try{var e={alpha:H,depth:B,stencil:j,antialias:F,premultipliedAlpha:I,preserveDrawingBuffer:q};Nt=D||_.getContext("webgl",e)||_.getContext("experimental-webgl",e);if(null===Nt)throw"Error creating WebGL context."}catch(t){console.error(t)}Ct=Nt.getExtension("OES_texture_float");Nt.getExtension("OES_texture_float_linear");kt=Nt.getExtension("OES_standard_derivatives");Lt=Nt.getExtension("EXT_texture_filter_anisotropic")||Nt.getExtension("MOZ_EXT_texture_filter_anisotropic")||Nt.getExtension("WEBKIT_EXT_texture_filter_anisotropic");At=Nt.getExtension("WEBGL_compressed_texture_s3tc")||Nt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Nt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");Ot=Nt.getExtension("OES_element_index_uint");null===Ct&&console.log("THREE.WebGLRenderer: Float textures not supported.");null===kt&&console.log("THREE.WebGLRenderer: Standard derivatives not supported.");null===Lt&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");null===At&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");null===Ot&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.");void 0===Nt.getShaderPrecisionFormat&&(Nt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});R&&Nt.getExtension("EXT_frag_depth")})();Nt.clearColor(0,0,0,1);Nt.clearDepth(1);Nt.clearStencil(0);Nt.enable(Nt.DEPTH_TEST);Nt.depthFunc(Nt.LEQUAL);Nt.frontFace(Nt.CCW);Nt.cullFace(Nt.BACK);Nt.enable(Nt.CULL_FACE);Nt.enable(Nt.BLEND);Nt.blendEquation(Nt.FUNC_ADD);Nt.blendFunc(Nt.SRC_ALPHA,Nt.ONE_MINUS_SRC_ALPHA);Nt.viewport(lt,ct,ht,pt);Nt.clearColor(U.r,U.g,U.b,z);this.context=Nt;var Mt=Nt.getParameter(Nt.MAX_TEXTURE_IMAGE_UNITS),_t=Nt.getParameter(Nt.MAX_VERTEX_TEXTURE_IMAGE_UNITS);Nt.getParameter(Nt.MAX_TEXTURE_SIZE);var Dt=Nt.getParameter(Nt.MAX_CUBE_MAP_TEXTURE_SIZE),Pt=Lt?Nt.getParameter(Lt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Ht=0<_t,Bt=Ht&&Ct;At&&Nt.getParameter(Nt.COMPRESSED_TEXTURE_FORMATS);var jt=Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.HIGH_FLOAT),Ft=Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.MEDIUM_FLOAT);Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.LOW_FLOAT);var It=Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.HIGH_FLOAT),qt=Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.MEDIUM_FLOAT);Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.LOW_FLOAT);var Rt=0<jt.precision&&0<It.precision,Ut=0<Ft.precision&&0<qt.precision;"highp"!==P||Rt||(Ut?(P="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(P="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"!==P||Ut||(P="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return Nt};this.supportsVertexTextures=function(){return Ht};this.supportsFloatTextures=function(){return Ct};this.supportsStandardDerivatives=function(){return kt};this.supportsCompressedTextureS3TC=function(){return At};this.getMaxAnisotropy=function(){return Pt};this.getPrecision=function(){return P};this.setSize=function(e,t,n){_.width=e*this.devicePixelRatio;_.height=t*this.devicePixelRatio;!1!==n&&(_.style.width=e+"px",_.style.height=t+"px");this.setViewport(0,0,e,t)};this.setViewport=function(e,t,n,r){lt=e*this.devicePixelRatio;ct=t*this.devicePixelRatio;ht=n*this.devicePixelRatio;pt=r*this.devicePixelRatio;Nt.viewport(lt,ct,ht,pt)};this.setScissor=function(e,t,n,r){Nt.scissor(e*this.devicePixelRatio,t*this.devicePixelRatio,n*this.devicePixelRatio,r*this.devicePixelRatio)};this.enableScissorTest=function(e){e?Nt.enable(Nt.SCISSOR_TEST):Nt.disable(Nt.SCISSOR_TEST)};this.setClearColor=function(e,t){U.set(e);z=void 0!==t?t:1;Nt.clearColor(U.r,U.g,U.b,z)};this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getClearColor=function(){return U};this.getClearAlpha=function(){return z};this.clear=function(e,t,n){var r=0;if(void 0===e||e)r|=Nt.COLOR_BUFFER_BIT;if(void 0===t||t)r|=Nt.DEPTH_BUFFER_BIT;if(void 0===n||n)r|=Nt.STENCIL_BUFFER_BIT;Nt.clear(r)};this.clearColor=function(){Nt.clear(Nt.COLOR_BUFFER_BIT)};this.clearDepth=function(){Nt.clear(Nt.DEPTH_BUFFER_BIT)};this.clearStencil=function(){Nt.clear(Nt.STENCIL_BUFFER_BIT)};this.clearTarget=function(e,t,n,r){this.setRenderTarget(e);this.clear(t,n,r)};this.addPostPlugin=function(e){e.init(this);this.renderPluginsPost.push(e)};this.addPrePlugin=function(e){e.init(this);this.renderPluginsPre.push(e)};this.updateShadowMap=function(e,t){V=null;J=K=st=it=et=-1;xt=!0;Z=Y=-1;this.shadowMapPlugin.update(e,t)};var zt=function(e){e=e.target;e.removeEventListener("dispose",zt);e.__webglInit=void 0;if(e instanceof THREE.BufferGeometry){var t=e.attributes,n;for(n in t)void 0!==t[n].buffer&&Nt.deleteBuffer(t[n].buffer);W.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(t in e.geometryGroups){n=e.geometryGroups[t];if(void 0!==n.numMorphTargets)for(var r=0,i=n.numMorphTargets;r<i;r++)Nt.deleteBuffer(n.__webglMorphTargetsBuffers[r]);if(void 0!==n.numMorphNormals)for(r=0,i=n.numMorphNormals;r<i;r++)Nt.deleteBuffer(n.__webglMorphNormalsBuffers[r]);$t(n)}else $t(e)},Wt=function(e){e=e.target;e.removeEventListener("dispose",Wt);e.image&&e.image.__webglTextureCube?Nt.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,Nt.deleteTexture(e.__webglTexture));W.info.memory.textures--},Xt=function(e){e=e.target;e.removeEventListener("dispose",Xt);if(e&&e.__webglTexture)if(Nt.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Nt.deleteFramebuffer(e.__webglFramebuffer[t]),Nt.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Nt.deleteFramebuffer(e.__webglFramebuffer),Nt.deleteRenderbuffer(e.__webglRenderbuffer);W.info.memory.textures--},Vt=function(e){e=e.target;e.removeEventListener("dispose",Vt);Jt(e)},$t=function(e){void 0!==e.__webglVertexBuffer&&Nt.deleteBuffer(e.__webglVertexBuffer);void 0!==e.__webglNormalBuffer&&Nt.deleteBuffer(e.__webglNormalBuffer);void 0!==e.__webglTangentBuffer&&Nt.deleteBuffer(e.__webglTangentBuffer);void 0!==e.__webglColorBuffer&&Nt.deleteBuffer(e.__webglColorBuffer);void 0!==e.__webglUVBuffer&&Nt.deleteBuffer(e.__webglUVBuffer);void 0!==e.__webglUV2Buffer&&Nt.deleteBuffer(e.__webglUV2Buffer);void 0!==e.__webglSkinIndicesBuffer&&Nt.deleteBuffer(e.__webglSkinIndicesBuffer);void 0!==e.__webglSkinWeightsBuffer&&Nt.deleteBuffer(e.__webglSkinWeightsBuffer);void 0!==e.__webglFaceBuffer&&Nt.deleteBuffer(e.__webglFaceBuffer);void 0!==e.__webglLineBuffer&&Nt.deleteBuffer(e.__webglLineBuffer);void 0!==e.__webglLineDistanceBuffer&&Nt.deleteBuffer(e.__webglLineDistanceBuffer);if(void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)Nt.deleteBuffer(e.__webglCustomAttributesList[t].buffer);W.info.memory.geometries--},Jt=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var n,r,i=!1;e=0;for(n=X.length;e<n;e++)if(r=X[e],r.program===t){r.usedTimes--;0===r.usedTimes&&(i=!0);break}if(!0===i){i=[];e=0;for(n=X.length;e<n;e++)r=X[e],r.program!==t&&i.push(r);X=i;Nt.deleteProgram(t);W.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,n){u();e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Nt.createBuffer());e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Nt.createBuffer());e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Nt.createBuffer());e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Nt.createBuffer());e.hasPositions&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglVertexBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,e.positionArray,Nt.DYNAMIC_DRAW),a(t.attributes.position),Nt.vertexAttribPointer(t.attributes.position,3,Nt.FLOAT,!1,0,0));if(e.hasNormals){Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglNormalBuffer);if(n.shading===THREE.FlatShading){var r,i,s,o,l,c,h,p,d,v,m,g=3*e.count;for(m=0;m<g;m+=9)v=e.normalArray,r=v[m],i=v[m+1],s=v[m+2],o=v[m+3],c=v[m+4],p=v[m+5],l=v[m+6],h=v[m+7],d=v[m+8],r=(r+o+l)/3,i=(i+c+h)/3,s=(s+p+d)/3,v[m]=r,v[m+1]=i,v[m+2]=s,v[m+3]=r,v[m+4]=i,v[m+5]=s,v[m+6]=r,v[m+7]=i,v[m+8]=s}Nt.bufferData(Nt.ARRAY_BUFFER,e.normalArray,Nt.DYNAMIC_DRAW);a(t.attributes.normal);Nt.vertexAttribPointer(t.attributes.normal,3,Nt.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglUvBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,e.uvArray,Nt.DYNAMIC_DRAW),a(t.attributes.uv),Nt.vertexAttribPointer(t.attributes.uv,2,Nt.FLOAT,!1,0,0));e.hasColors&&n.vertexColors!==THREE.NoColors&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,e.colorArray,Nt.DYNAMIC_DRAW),a(t.attributes.color),Nt.vertexAttribPointer(t.attributes.color,3,Nt.FLOAT,!1,0,0));f();Nt.drawArrays(Nt.TRIANGLES,0,e.count);e.count=0};this.renderBufferDirect=function(e,t,n,r,i,s){if(!1!==r.visible){var a=S(e,t,n,r,s);e=a.attributes;t=i.attributes;n=!1;a=16777215*i.id+2*a.id+(r.wireframe?1:0);a!==K&&(K=a,n=!0);n&&u();if(s instanceof THREE.Mesh)if(s=t.index){var f;s.array instanceof Uint32Array?(a=Nt.UNSIGNED_INT,f=4):(a=Nt.UNSIGNED_SHORT,f=2);i=i.offsets;if(0===i.length)n&&(o(r,e,t,0),Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,s.buffer)),Nt.drawElements(Nt.TRIANGLES,s.array.length,a,0),W.info.render.calls++,W.info.render.vertices+=s.array.length,W.info.render.faces+=s.array.length/3;else{n=!0;for(var l=0,c=i.length;l<c;l++){var h=i[l].index;n&&(o(r,e,t,h),Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,s.buffer));Nt.drawElements(Nt.TRIANGLES,i[l].count,a,i[l].start*f);W.info.render.calls++;W.info.render.vertices+=i[l].count;W.info.render.faces+=i[l].count/3}}}else n&&o(r,e,t,0),r=i.attributes.position,Nt.drawArrays(Nt.TRIANGLES,0,r.array.length/3),W.info.render.calls++,W.info.render.vertices+=r.array.length/3,W.info.render.faces+=r.array.length/9;else if(s instanceof THREE.ParticleSystem)n&&o(r,e,t,0),r=t.position,Nt.drawArrays(Nt.POINTS,0,r.array.length/3),W.info.render.calls++,W.info.render.points+=r.array.length/3;else if(s instanceof THREE.Line)if(a=s.type===THREE.LineStrip?Nt.LINE_STRIP:Nt.LINES,C(r.linewidth),s=t.index)if(s.array instanceof Uint32Array?(a=Nt.UNSIGNED_INT,f=4):(a=Nt.UNSIGNED_SHORT,f=2),i=i.offsets,0===i.length)n&&(o(r,e,t,0),Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,s.buffer)),Nt.drawElements(Nt.LINES,s.array.length,a,0),W.info.render.calls++,W.info.render.vertices+=s.array.length;else for(1<i.length&&(n=!0),l=0,c=i.length;l<c;l++)h=i[l].index,n&&(o(r,e,t,h),Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,s.buffer)),Nt.drawElements(Nt.LINES,i[l].count,a,i[l].start*f),W.info.render.calls++,W.info.render.vertices+=i[l].count;else n&&o(r,e,t,0),r=t.position,Nt.drawArrays(a,0,r.array.length/3),W.info.render.calls++,W.info.render.points+=r.array.length/3}};this.renderBuffer=function(e,t,n,r,i,s){if(!1!==r.visible){var o,l;n=S(e,t,n,r,s);t=n.attributes;e=!1;n=16777215*i.id+2*n.id+(r.wireframe?1:0);n!==K&&(K=n,e=!0);e&&u();if(!r.morphTargets&&0<=t.position)e&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglVertexBuffer),a(t.position),Nt.vertexAttribPointer(t.position,3,Nt.FLOAT,!1,0,0));else if(s.morphTargetBase){n=r.program.attributes;-1!==s.morphTargetBase&&0<=n.position?(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[s.morphTargetBase]),a(n.position),Nt.vertexAttribPointer(n.position,3,Nt.FLOAT,!1,0,0)):0<=n.position&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglVertexBuffer),a(n.position),Nt.vertexAttribPointer(n.position,3,Nt.FLOAT,!1,0,0));if(s.morphTargetForcedOrder.length){var h=0;l=s.morphTargetForcedOrder;for(o=s.morphTargetInfluences;h<r.numSupportedMorphTargets&&h<l.length;)0<=n["morphTarget"+h]&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[l[h]]),a(n["morphTarget"+h]),Nt.vertexAttribPointer(n["morphTarget"+h],3,Nt.FLOAT,!1,0,0)),0<=n["morphNormal"+h]&&r.morphNormals&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[l[h]]),a(n["morphNormal"+h]),Nt.vertexAttribPointer(n["morphNormal"+h],3,Nt.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[h]=o[l[h]],h++}else{l=[];o=s.morphTargetInfluences;var p,d=o.length;for(p=0;p<d;p++)h=o[p],0<h&&l.push([h,p]);l.length>r.numSupportedMorphTargets?(l.sort(c),l.length=r.numSupportedMorphTargets):l.length>r.numSupportedMorphNormals?l.sort(c):0===l.length&&l.push([0,0]);for(h=0;h<r.numSupportedMorphTargets;)l[h]?(p=l[h][1],0<=n["morphTarget"+h]&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[p]),a(n["morphTarget"+h]),Nt.vertexAttribPointer(n["morphTarget"+h],3,Nt.FLOAT,!1,0,0)),0<=n["morphNormal"+h]&&r.morphNormals&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[p]),a(n["morphNormal"+h]),Nt.vertexAttribPointer(n["morphNormal"+h],3,Nt.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[h]=o[p]):s.__webglMorphTargetInfluences[h]=0,h++}null!==r.program.uniforms.morphTargetInfluences&&Nt.uniform1fv(r.program.uniforms.morphTargetInfluences,s.__webglMorphTargetInfluences)}if(e){if(i.__webglCustomAttributesList)for(o=0,l=i.__webglCustomAttributesList.length;o<l;o++)n=i.__webglCustomAttributesList[o],0<=t[n.buffer.belongsToAttribute]&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.buffer),a(t[n.buffer.belongsToAttribute]),Nt.vertexAttribPointer(t[n.buffer.belongsToAttribute],n.size,Nt.FLOAT,!1,0,0));0<=t.color&&(0<s.geometry.colors.length||0<s.geometry.faces.length?(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglColorBuffer),a(t.color),Nt.vertexAttribPointer(t.color,3,Nt.FLOAT,!1,0,0)):r.defaultAttributeValues&&Nt.vertexAttrib3fv(t.color,r.defaultAttributeValues.color));0<=t.normal&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglNormalBuffer),a(t.normal),Nt.vertexAttribPointer(t.normal,3,Nt.FLOAT,!1,0,0));0<=t.tangent&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglTangentBuffer),a(t.tangent),Nt.vertexAttribPointer(t.tangent,4,Nt.FLOAT,!1,0,0));0<=t.uv&&(s.geometry.faceVertexUvs[0]?(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglUVBuffer),a(t.uv),Nt.vertexAttribPointer(t.uv,2,Nt.FLOAT,!1,0,0)):r.defaultAttributeValues&&Nt.vertexAttrib2fv(t.uv,r.defaultAttributeValues.uv));0<=t.uv2&&(s.geometry.faceVertexUvs[1]?(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglUV2Buffer),a(t.uv2),Nt.vertexAttribPointer(t.uv2,2,Nt.FLOAT,!1,0,0)):r.defaultAttributeValues&&Nt.vertexAttrib2fv(t.uv2,r.defaultAttributeValues.uv2));r.skinning&&0<=t.skinIndex&&0<=t.skinWeight&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglSkinIndicesBuffer),a(t.skinIndex),Nt.vertexAttribPointer(t.skinIndex,4,Nt.FLOAT,!1,0,0),Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglSkinWeightsBuffer),a(t.skinWeight),Nt.vertexAttribPointer(t.skinWeight,4,Nt.FLOAT,!1,0,0));0<=t.lineDistance&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,i.__webglLineDistanceBuffer),a(t.lineDistance),Nt.vertexAttribPointer(t.lineDistance,1,Nt.FLOAT,!1,0,0))}f();s instanceof THREE.Mesh?(s=i.__typeArray===Uint32Array?Nt.UNSIGNED_INT:Nt.UNSIGNED_SHORT,r.wireframe?(C(r.wireframeLinewidth),e&&Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,i.__webglLineBuffer),Nt.drawElements(Nt.LINES,i.__webglLineCount,s,0)):(e&&Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,i.__webglFaceBuffer),Nt.drawElements(Nt.TRIANGLES,i.__webglFaceCount,s,0)),W.info.render.calls++,W.info.render.vertices+=i.__webglFaceCount,W.info.render.faces+=i.__webglFaceCount/3):s instanceof THREE.Line?(s=s.type===THREE.LineStrip?Nt.LINE_STRIP:Nt.LINES,C(r.linewidth),Nt.drawArrays(s,0,i.__webglLineCount),W.info.render.calls++):s instanceof THREE.ParticleSystem&&(Nt.drawArrays(Nt.POINTS,0,i.__webglParticleCount),W.info.render.calls++,W.info.render.points+=i.__webglParticleCount)}};this.render=function(e,t,n,r){if(!1===t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var i,s,o,u,a=e.__lights,f=e.fog;J=-1;xt=!0;!0===e.autoUpdate&&e.updateMatrixWorld();void 0===t.parent&&t.updateMatrixWorld();t.matrixWorldInverse.getInverse(t.matrixWorld);bt.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);yt.setFromMatrix(bt);this.autoUpdateObjects&&this.initWebGLObjects(e);h(this.renderPluginsPre,e,t);W.info.render.calls=0;W.info.render.vertices=0;W.info.render.faces=0;W.info.render.points=0;this.setRenderTarget(n);(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);u=e.__webglObjects;r=0;for(i=u.length;r<i;r++)if(s=u[r],o=s.object,s.id=r,s.render=!1,o.visible&&(!(o instanceof THREE.Mesh||o instanceof THREE.ParticleSystem)||!o.frustumCulled||yt.intersectsObject(o))){var c=o;c._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,c.matrixWorld);c._normalMatrix.getNormalMatrix(c._modelViewMatrix);var c=s,v=c.object,m=c.buffer,g=v.geometry,v=v.material;v instanceof THREE.MeshFaceMaterial?(v=v.materials[g instanceof THREE.BufferGeometry?0:m.materialIndex],v.transparent?(c.transparent=v,c.opaque=null):(c.opaque=v,c.transparent=null)):v&&(v.transparent?(c.transparent=v,c.opaque=null):(c.opaque=v,c.transparent=null));s.render=!0;!0===this.sortObjects&&(null!==o.renderDepth?s.z=o.renderDepth:(Et.setFromMatrixPosition(o.matrixWorld),Et.applyProjection(bt),s.z=Et.z))}this.sortObjects&&u.sort(l);u=e.__webglObjectsImmediate;r=0;for(i=u.length;r<i;r++)s=u[r],o=s.object,o.visible&&(o._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,o.matrixWorld),o._normalMatrix.getNormalMatrix(o._modelViewMatrix),o=s.object.material,o.transparent?(s.transparent=o,s.opaque=null):(s.opaque=o,s.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),k(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),p(e.__webglObjects,!1,"",t,a,f,!0,r),d(e.__webglObjectsImmediate,"",t,a,f,!1,r)):(r=null,this.setBlending(THREE.NoBlending),p(e.__webglObjects,!0,"opaque",t,a,f,!1,r),d(e.__webglObjectsImmediate,"opaque",t,a,f,!1,r),p(e.__webglObjects,!1,"transparent",t,a,f,!0,r),d(e.__webglObjectsImmediate,"transparent",t,a,f,!0,r));h(this.renderPluginsPost,e,t);n&&n.generateMipmaps&&n.minFilter!==THREE.NearestFilter&&n.minFilter!==THREE.LinearFilter&&(n instanceof THREE.WebGLRenderTargetCube?(Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,n.__webglTexture),Nt.generateMipmap(Nt.TEXTURE_CUBE_MAP),Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,null)):(Nt.bindTexture(Nt.TEXTURE_2D,n.__webglTexture),Nt.generateMipmap(Nt.TEXTURE_2D),Nt.bindTexture(Nt.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(e,t,n,r,i){var s=S(e,t,n,r,i);K=-1;W.setMaterialFaces(r);i.immediateRenderCallback?i.immediateRenderCallback(s,Nt,yt):i.render(function(e){W.renderBufferImmediate(e,s,r)})};this.initWebGLObjects=function(e){e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);for(;e.__objectsAdded.length;)v(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)b(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,o=e.__webglObjects.length;t<o;t++){var u=e.__webglObjects[t].object;void 0===u.__webglInit&&(void 0!==u.__webglActive&&b(u,e),v(u,e));var a=u,f=a.geometry,l=void 0,h=void 0,p=void 0;if(f instanceof THREE.BufferGeometry){var d=Nt.DYNAMIC_DRAW,m=f.attributes,w=void 0,E=void 0;for(w in m)E=m[w],E.needsUpdate&&("index"===w?(Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,E.buffer),Nt.bufferData(Nt.ELEMENT_ARRAY_BUFFER,E.array,d)):(Nt.bindBuffer(Nt.ARRAY_BUFFER,E.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,E.array,d)),E.needsUpdate=!1)}else if(a instanceof THREE.Mesh){for(var S=0,x=f.geometryGroupsList.length;S<x;S++)if(l=f.geometryGroupsList[S],p=r(a,l),f.buffersNeedUpdate&&n(l,a),h=p.attributes&&g(p),f.verticesNeedUpdate||f.morphTargetsNeedUpdate||f.elementsNeedUpdate||f.uvsNeedUpdate||f.normalsNeedUpdate||f.colorsNeedUpdate||f.tangentsNeedUpdate||h){var T=l,N=a,C=Nt.DYNAMIC_DRAW,k=!f.dynamic,L=p;if(T.__inittedArrays){var A=i(L),O=L.vertexColors?L.vertexColors:!1,M=s(L),_=A===THREE.SmoothShading,D=void 0,P=void 0,H=void 0,B=void 0,j=void 0,F=void 0,I=void 0,q=void 0,R=void 0,U=void 0,z=void 0,W=void 0,X=void 0,V=void 0,$=void 0,J=void 0,K=void 0,Q=void 0,G=void 0,Y=void 0,Z=void 0,et=void 0,tt=void 0,nt=void 0,rt=void 0,it=void 0,st=void 0,ot=void 0,ut=void 0,at=void 0,ft=void 0,lt=void 0,ct=void 0,ht=void 0,pt=void 0,dt=void 0,vt=void 0,mt=void 0,gt=void 0,yt=void 0,St=0,xt=0,Tt=0,Ct=0,kt=0,Lt=0,At=0,Ot=0,Mt=0,_t=0,Dt=0,Pt=0,Ht=void 0,Bt=T.__vertexArray,jt=T.__uvArray,Ft=T.__uv2Array,It=T.__normalArray,qt=T.__tangentArray,Rt=T.__colorArray,Ut=T.__skinIndexArray,zt=T.__skinWeightArray,Wt=T.__morphTargetsArrays,Xt=T.__morphNormalsArrays,Vt=T.__webglCustomAttributesList,$t=void 0,Jt=T.__faceArray,Kt=T.__lineArray,Qt=N.geometry,Gt=Qt.elementsNeedUpdate,Yt=Qt.uvsNeedUpdate,Zt=Qt.normalsNeedUpdate,en=Qt.tangentsNeedUpdate,tn=Qt.colorsNeedUpdate,nn=Qt.morphTargetsNeedUpdate,rn=Qt.vertices,sn=T.faces3,on=Qt.faces,un=Qt.faceVertexUvs[0],an=Qt.faceVertexUvs[1],fn=Qt.skinIndices,ln=Qt.skinWeights,cn=Qt.morphTargets,hn=Qt.morphNormals;if(Qt.verticesNeedUpdate){D=0;for(P=sn.length;D<P;D++)B=on[sn[D]],W=rn[B.a],X=rn[B.b],V=rn[B.c],Bt[xt]=W.x,Bt[xt+1]=W.y,Bt[xt+2]=W.z,Bt[xt+3]=X.x,Bt[xt+4]=X.y,Bt[xt+5]=X.z,Bt[xt+6]=V.x,Bt[xt+7]=V.y,Bt[xt+8]=V.z,xt+=9;Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglVertexBuffer);Nt.bufferData(Nt.ARRAY_BUFFER,Bt,C)}if(nn)for(pt=0,dt=cn.length;pt<dt;pt++){D=Dt=0;for(P=sn.length;D<P;D++)gt=sn[D],B=on[gt],W=cn[pt].vertices[B.a],X=cn[pt].vertices[B.b],V=cn[pt].vertices[B.c],vt=Wt[pt],vt[Dt]=W.x,vt[Dt+1]=W.y,vt[Dt+2]=W.z,vt[Dt+3]=X.x,vt[Dt+4]=X.y,vt[Dt+5]=X.z,vt[Dt+6]=V.x,vt[Dt+7]=V.y,vt[Dt+8]=V.z,L.morphNormals&&(_?(yt=hn[pt].vertexNormals[gt],Q=yt.a,G=yt.b,Y=yt.c):Y=G=Q=hn[pt].faceNormals[gt],mt=Xt[pt],mt[Dt]=Q.x,mt[Dt+1]=Q.y,mt[Dt+2]=Q.z,mt[Dt+3]=G.x,mt[Dt+4]=G.y,mt[Dt+5]=G.z,mt[Dt+6]=Y.x,mt[Dt+7]=Y.y,mt[Dt+8]=Y.z),Dt+=9;Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglMorphTargetsBuffers[pt]);Nt.bufferData(Nt.ARRAY_BUFFER,Wt[pt],C);L.morphNormals&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglMorphNormalsBuffers[pt]),Nt.bufferData(Nt.ARRAY_BUFFER,Xt[pt],C))}if(ln.length){D=0;for(P=sn.length;D<P;D++)B=on[sn[D]],nt=ln[B.a],rt=ln[B.b],it=ln[B.c],zt[_t]=nt.x,zt[_t+1]=nt.y,zt[_t+2]=nt.z,zt[_t+3]=nt.w,zt[_t+4]=rt.x,zt[_t+5]=rt.y,zt[_t+6]=rt.z,zt[_t+7]=rt.w,zt[_t+8]=it.x,zt[_t+9]=it.y,zt[_t+10]=it.z,zt[_t+11]=it.w,st=fn[B.a],ot=fn[B.b],ut=fn[B.c],Ut[_t]=st.x,Ut[_t+1]=st.y,Ut[_t+2]=st.z,Ut[_t+3]=st.w,Ut[_t+4]=ot.x,Ut[_t+5]=ot.y,Ut[_t+6]=ot.z,Ut[_t+7]=ot.w,Ut[_t+8]=ut.x,Ut[_t+9]=ut.y,Ut[_t+10]=ut.z,Ut[_t+11]=ut.w,_t+=12;0<_t&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglSkinIndicesBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,Ut,C),Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglSkinWeightsBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,zt,C))}if(tn&&O){D=0;for(P=sn.length;D<P;D++)B=on[sn[D]],I=B.vertexColors,q=B.color,3===I.length&&O===THREE.VertexColors?(Z=I[0],et=I[1],tt=I[2]):tt=et=Z=q,Rt[Mt]=Z.r,Rt[Mt+1]=Z.g,Rt[Mt+2]=Z.b,Rt[Mt+3]=et.r,Rt[Mt+4]=et.g,Rt[Mt+5]=et.b,Rt[Mt+6]=tt.r,Rt[Mt+7]=tt.g,Rt[Mt+8]=tt.b,Mt+=9;0<Mt&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,Rt,C))}if(en&&Qt.hasTangents){D=0;for(P=sn.length;D<P;D++)B=on[sn[D]],R=B.vertexTangents,$=R[0],J=R[1],K=R[2],qt[At]=$.x,qt[At+1]=$.y,qt[At+2]=$.z,qt[At+3]=$.w,qt[At+4]=J.x,qt[At+5]=J.y,qt[At+6]=J.z,qt[At+7]=J.w,qt[At+8]=K.x,qt[At+9]=K.y,qt[At+10]=K.z,qt[At+11]=K.w,At+=12;Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglTangentBuffer);Nt.bufferData(Nt.ARRAY_BUFFER,qt,C)}if(Zt&&A){D=0;for(P=sn.length;D<P;D++)if(B=on[sn[D]],j=B.vertexNormals,F=B.normal,3===j.length&&_)for(at=0;3>at;at++)lt=j[at],It[Lt]=lt.x,It[Lt+1]=lt.y,It[Lt+2]=lt.z,Lt+=3;else for(at=0;3>at;at++)It[Lt]=F.x,It[Lt+1]=F.y,It[Lt+2]=F.z,Lt+=3;Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglNormalBuffer);Nt.bufferData(Nt.ARRAY_BUFFER,It,C)}if(Yt&&un&&M){D=0;for(P=sn.length;D<P;D++)if(H=sn[D],U=un[H],void 0!==U)for(at=0;3>at;at++)ct=U[at],jt[Tt]=ct.x,jt[Tt+1]=ct.y,Tt+=2;0<Tt&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglUVBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,jt,C))}if(Yt&&an&&M){D=0;for(P=sn.length;D<P;D++)if(H=sn[D],z=an[H],void 0!==z)for(at=0;3>at;at++)ht=z[at],Ft[Ct]=ht.x,Ft[Ct+1]=ht.y,Ct+=2;0<Ct&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,T.__webglUV2Buffer),Nt.bufferData(Nt.ARRAY_BUFFER,Ft,C))}if(Gt){D=0;for(P=sn.length;D<P;D++)Jt[kt]=St,Jt[kt+1]=St+1,Jt[kt+2]=St+2,kt+=3,Kt[Ot]=St,Kt[Ot+1]=St+1,Kt[Ot+2]=St,Kt[Ot+3]=St+2,Kt[Ot+4]=St+1,Kt[Ot+5]=St+2,Ot+=6,St+=3;Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,T.__webglFaceBuffer);Nt.bufferData(Nt.ELEMENT_ARRAY_BUFFER,Jt,C);Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,T.__webglLineBuffer);Nt.bufferData(Nt.ELEMENT_ARRAY_BUFFER,Kt,C)}if(Vt)for(at=0,ft=Vt.length;at<ft;at++)if($t=Vt[at],$t.__original.needsUpdate){Pt=0;if(1===$t.size)if(void 0===$t.boundTo||"vertices"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)B=on[sn[D]],$t.array[Pt]=$t.value[B.a],$t.array[Pt+1]=$t.value[B.b],$t.array[Pt+2]=$t.value[B.c],Pt+=3;else{if("faces"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)Ht=$t.value[sn[D]],$t.array[Pt]=Ht,$t.array[Pt+1]=Ht,$t.array[Pt+2]=Ht,Pt+=3}else if(2===$t.size)if(void 0===$t.boundTo||"vertices"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)B=on[sn[D]],W=$t.value[B.a],X=$t.value[B.b],V=$t.value[B.c],$t.array[Pt]=W.x,$t.array[Pt+1]=W.y,$t.array[Pt+2]=X.x,$t.array[Pt+3]=X.y,$t.array[Pt+4]=V.x,$t.array[Pt+5]=V.y,Pt+=6;else{if("faces"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)V=X=W=Ht=$t.value[sn[D]],$t.array[Pt]=W.x,$t.array[Pt+1]=W.y,$t.array[Pt+2]=X.x,$t.array[Pt+3]=X.y,$t.array[Pt+4]=V.x,$t.array[Pt+5]=V.y,Pt+=6}else if(3===$t.size){var pn;pn="c"===$t.type?["r","g","b"]:["x","y","z"];if(void 0===$t.boundTo||"vertices"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)B=on[sn[D]],W=$t.value[B.a],X=$t.value[B.b],V=$t.value[B.c],$t.array[Pt]=W[pn[0]],$t.array[Pt+1]=W[pn[1]],$t.array[Pt+2]=W[pn[2]],$t.array[Pt+3]=X[pn[0]],$t.array[Pt+4]=X[pn[1]],$t.array[Pt+5]=X[pn[2]],$t.array[Pt+6]=V[pn[0]],$t.array[Pt+7]=V[pn[1]],$t.array[Pt+8]=V[pn[2]],Pt+=9;else if("faces"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)V=X=W=Ht=$t.value[sn[D]],$t.array[Pt]=W[pn[0]],$t.array[Pt+1]=W[pn[1]],$t.array[Pt+2]=W[pn[2]],$t.array[Pt+3]=X[pn[0]],$t.array[Pt+4]=X[pn[1]],$t.array[Pt+5]=X[pn[2]],$t.array[Pt+6]=V[pn[0]],$t.array[Pt+7]=V[pn[1]],$t.array[Pt+8]=V[pn[2]],Pt+=9;else if("faceVertices"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)Ht=$t.value[sn[D]],W=Ht[0],X=Ht[1],V=Ht[2],$t.array[Pt]=W[pn[0]],$t.array[Pt+1]=W[pn[1]],$t.array[Pt+2]=W[pn[2]],$t.array[Pt+3]=X[pn[0]],$t.array[Pt+4]=X[pn[1]],$t.array[Pt+5]=X[pn[2]],$t.array[Pt+6]=V[pn[0]],$t.array[Pt+7]=V[pn[1]],$t.array[Pt+8]=V[pn[2]],Pt+=9}else if(4===$t.size)if(void 0===$t.boundTo||"vertices"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)B=on[sn[D]],W=$t.value[B.a],X=$t.value[B.b],V=$t.value[B.c],$t.array[Pt]=W.x,$t.array[Pt+1]=W.y,$t.array[Pt+2]=W.z,$t.array[Pt+3]=W.w,$t.array[Pt+4]=X.x,$t.array[Pt+5]=X.y,$t.array[Pt+6]=X.z,$t.array[Pt+7]=X.w,$t.array[Pt+8]=V.x,$t.array[Pt+9]=V.y,$t.array[Pt+10]=V.z,$t.array[Pt+11]=V.w,Pt+=12;else if("faces"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)V=X=W=Ht=$t.value[sn[D]],$t.array[Pt]=W.x,$t.array[Pt+1]=W.y,$t.array[Pt+2]=W.z,$t.array[Pt+3]=W.w,$t.array[Pt+4]=X.x,$t.array[Pt+5]=X.y,$t.array[Pt+6]=X.z,$t.array[Pt+7]=X.w,$t.array[Pt+8]=V.x,$t.array[Pt+9]=V.y,$t.array[Pt+10]=V.z,$t.array[Pt+11]=V.w,Pt+=12;else if("faceVertices"===$t.boundTo)for(D=0,P=sn.length;D<P;D++)Ht=$t.value[sn[D]],W=Ht[0],X=Ht[1],V=Ht[2],$t.array[Pt]=W.x,$t.array[Pt+1]=W.y,$t.array[Pt+2]=W.z,$t.array[Pt+3]=W.w,$t.array[Pt+4]=X.x,$t.array[Pt+5]=X.y,$t.array[Pt+6]=X.z,$t.array[Pt+7]=X.w,$t.array[Pt+8]=V.x,$t.array[Pt+9]=V.y,$t.array[Pt+10]=V.z,$t.array[Pt+11]=V.w,Pt+=12;Nt.bindBuffer(Nt.ARRAY_BUFFER,$t.buffer);Nt.bufferData(Nt.ARRAY_BUFFER,$t.array,C)}k&&(delete T.__inittedArrays,delete T.__colorArray,delete T.__normalArray,delete T.__tangentArray,delete T.__uvArray,delete T.__uv2Array,delete T.__faceArray,delete T.__vertexArray,delete T.__lineArray,delete T.__skinIndexArray,delete T.__skinWeightArray)}}f.verticesNeedUpdate=!1;f.morphTargetsNeedUpdate=!1;f.elementsNeedUpdate=!1;f.uvsNeedUpdate=!1;f.normalsNeedUpdate=!1;f.colorsNeedUpdate=!1;f.tangentsNeedUpdate=!1;f.buffersNeedUpdate=!1;p.attributes&&y(p)}else if(a instanceof THREE.Line){p=r(a,f);h=p.attributes&&g(p);if(f.verticesNeedUpdate||f.colorsNeedUpdate||f.lineDistancesNeedUpdate||h){var dn=f,vn=Nt.DYNAMIC_DRAW,mn=void 0,gn=void 0,yn=void 0,bn=void 0,wn=void 0,En=void 0,Sn=dn.vertices,xn=dn.colors,Tn=dn.lineDistances,Nn=Sn.length,Cn=xn.length,kn=Tn.length,Ln=dn.__vertexArray,An=dn.__colorArray,On=dn.__lineDistanceArray,Mn=dn.colorsNeedUpdate,_n=dn.lineDistancesNeedUpdate,Dn=dn.__webglCustomAttributesList,Pn=void 0,Hn=void 0,Bn=void 0,jn=void 0,Fn=void 0,In=void 0;if(dn.verticesNeedUpdate){for(mn=0;mn<Nn;mn++)bn=Sn[mn],wn=3*mn,Ln[wn]=bn.x,Ln[wn+1]=bn.y,Ln[wn+2]=bn.z;Nt.bindBuffer(Nt.ARRAY_BUFFER,dn.__webglVertexBuffer);Nt.bufferData(Nt.ARRAY_BUFFER,Ln,vn)}if(Mn){for(gn=0;gn<Cn;gn++)En=xn[gn],wn=3*gn,An[wn]=En.r,An[wn+1]=En.g,An[wn+2]=En.b;Nt.bindBuffer(Nt.ARRAY_BUFFER,dn.__webglColorBuffer);Nt.bufferData(Nt.ARRAY_BUFFER,An,vn)}if(_n){for(yn=0;yn<kn;yn++)On[yn]=Tn[yn];Nt.bindBuffer(Nt.ARRAY_BUFFER,dn.__webglLineDistanceBuffer);Nt.bufferData(Nt.ARRAY_BUFFER,On,vn)}if(Dn)for(Pn=0,Hn=Dn.length;Pn<Hn;Pn++)if(In=Dn[Pn],In.needsUpdate&&(void 0===In.boundTo||"vertices"===In.boundTo)){wn=0;jn=In.value.length;if(1===In.size)for(Bn=0;Bn<jn;Bn++)In.array[Bn]=In.value[Bn];else if(2===In.size)for(Bn=0;Bn<jn;Bn++)Fn=In.value[Bn],In.array[wn]=Fn.x,In.array[wn+1]=Fn.y,wn+=2;else if(3===In.size)if("c"===In.type)for(Bn=0;Bn<jn;Bn++)Fn=In.value[Bn],In.array[wn]=Fn.r,In.array[wn+1]=Fn.g,In.array[wn+2]=Fn.b,wn+=3;else for(Bn=0;Bn<jn;Bn++)Fn=In.value[Bn],In.array[wn]=Fn.x,In.array[wn+1]=Fn.y,In.array[wn+2]=Fn.z,wn+=3;else if(4===In.size)for(Bn=0;Bn<jn;Bn++)Fn=In.value[Bn],In.array[wn]=Fn.x,In.array[wn+1]=Fn.y,In.array[wn+2]=Fn.z,In.array[wn+3]=Fn.w,wn+=4;Nt.bindBuffer(Nt.ARRAY_BUFFER,In.buffer);Nt.bufferData(Nt.ARRAY_BUFFER,In.array,vn)}}f.verticesNeedUpdate=!1;f.colorsNeedUpdate=!1;f.lineDistancesNeedUpdate=!1;p.attributes&&y(p)}else if(a instanceof THREE.ParticleSystem){p=r(a,f);h=p.attributes&&g(p);if(f.verticesNeedUpdate||f.colorsNeedUpdate||a.sortParticles||h){var qn=f,Rn=Nt.DYNAMIC_DRAW,Un=a,zn=void 0,Wn=void 0,Xn=void 0,Vn=void 0,$n=void 0,Jn=void 0,Kn=qn.vertices,Qn=Kn.length,Gn=qn.colors,Yn=Gn.length,Zn=qn.__vertexArray,er=qn.__colorArray,tr=qn.__sortArray,nr=qn.verticesNeedUpdate,rr=qn.colorsNeedUpdate,ir=qn.__webglCustomAttributesList,sr=void 0,or=void 0,ur=void 0,ar=void 0,fr=void 0,lr=void 0;if(Un.sortParticles){wt.copy(bt);wt.multiply(Un.matrixWorld);for(zn=0;zn<Qn;zn++)Xn=Kn[zn],Et.copy(Xn),Et.applyProjection(wt),tr[zn]=[Et.z,zn];tr.sort(c);for(zn=0;zn<Qn;zn++)Xn=Kn[tr[zn][1]],Vn=3*zn,Zn[Vn]=Xn.x,Zn[Vn+1]=Xn.y,Zn[Vn+2]=Xn.z;for(Wn=0;Wn<Yn;Wn++)Vn=3*Wn,Jn=Gn[tr[Wn][1]],er[Vn]=Jn.r,er[Vn+1]=Jn.g,er[Vn+2]=Jn.b;if(ir)for(sr=0,or=ir.length;sr<or;sr++)if(lr=ir[sr],void 0===lr.boundTo||"vertices"===lr.boundTo)if(Vn=0,ar=lr.value.length,1===lr.size)for(ur=0;ur<ar;ur++)$n=tr[ur][1],lr.array[ur]=lr.value[$n];else if(2===lr.size)for(ur=0;ur<ar;ur++)$n=tr[ur][1],fr=lr.value[$n],lr.array[Vn]=fr.x,lr.array[Vn+1]=fr.y,Vn+=2;else if(3===lr.size)if("c"===lr.type)for(ur=0;ur<ar;ur++)$n=tr[ur][1],fr=lr.value[$n],lr.array[Vn]=fr.r,lr.array[Vn+1]=fr.g,lr.array[Vn+2]=fr.b,Vn+=3;else for(ur=0;ur<ar;ur++)$n=tr[ur][1],fr=lr.value[$n],lr.array[Vn]=fr.x,lr.array[Vn+1]=fr.y,lr.array[Vn+2]=fr.z,Vn+=3;else if(4===lr.size)for(ur=0;ur<ar;ur++)$n=tr[ur][1],fr=lr.value[$n],lr.array[Vn]=fr.x,lr.array[Vn+1]=fr.y,lr.array[Vn+2]=fr.z,lr.array[Vn+3]=fr.w,Vn+=4}else{if(nr)for(zn=0;zn<Qn;zn++)Xn=Kn[zn],Vn=3*zn,Zn[Vn]=Xn.x,Zn[Vn+1]=Xn.y,Zn[Vn+2]=Xn.z;if(rr)for(Wn=0;Wn<Yn;Wn++)Jn=Gn[Wn],Vn=3*Wn,er[Vn]=Jn.r,er[Vn+1]=Jn.g,er[Vn+2]=Jn.b;if(ir)for(sr=0,or=ir.length;sr<or;sr++)if(lr=ir[sr],lr.needsUpdate&&(void 0===lr.boundTo||"vertices"===lr.boundTo))if(ar=lr.value.length,Vn=0,1===lr.size)for(ur=0;ur<ar;ur++)lr.array[ur]=lr.value[ur];else if(2===lr.size)for(ur=0;ur<ar;ur++)fr=lr.value[ur],lr.array[Vn]=fr.x,lr.array[Vn+1]=fr.y,Vn+=2;else if(3===lr.size)if("c"===lr.type)for(ur=0;ur<ar;ur++)fr=lr.value[ur],lr.array[Vn]=fr.r,lr.array[Vn+1]=fr.g,lr.array[Vn+2]=fr.b,Vn+=3;else for(ur=0;ur<ar;ur++)fr=lr.value[ur],lr.array[Vn]=fr.x,lr.array[Vn+1]=fr.y,lr.array[Vn+2]=fr.z,Vn+=3;else if(4===lr.size)for(ur=0;ur<ar;ur++)fr=lr.value[ur],lr.array[Vn]=fr.x,lr.array[Vn+1]=fr.y,lr.array[Vn+2]=fr.z,lr.array[Vn+3]=fr.w,Vn+=4}if(nr||Un.sortParticles)Nt.bindBuffer(Nt.ARRAY_BUFFER,qn.__webglVertexBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,Zn,Rn);if(rr||Un.sortParticles)Nt.bindBuffer(Nt.ARRAY_BUFFER,qn.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,er,Rn);if(ir)for(sr=0,or=ir.length;sr<or;sr++)if(lr=ir[sr],lr.needsUpdate||Un.sortParticles)Nt.bindBuffer(Nt.ARRAY_BUFFER,lr.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,lr.array,Rn)}f.verticesNeedUpdate=!1;f.colorsNeedUpdate=!1;p.attributes&&y(p)}}};this.initMaterial=function(e,t,n,r){var i,s,o,u;e.addEventListener("dispose",Vt);var a,f,l,c;e instanceof THREE.MeshDepthMaterial?c="depth":e instanceof THREE.MeshNormalMaterial?c="normal":e instanceof THREE.MeshBasicMaterial?c="basic":e instanceof THREE.MeshLambertMaterial?c="lambert":e instanceof THREE.MeshPhongMaterial?c="phong":e instanceof THREE.LineBasicMaterial?c="basic":e instanceof THREE.LineDashedMaterial?c="dashed":e instanceof THREE.ParticleSystemMaterial&&(c="particle_basic");c&&(i=THREE.ShaderLib[c],e.uniforms=THREE.UniformsUtils.clone(i.uniforms),e.vertexShader=i.vertexShader,e.fragmentShader=i.fragmentShader);l=u=o=s=i=0;for(var h=t.length;l<h;l++){var p=t[l];p.onlyShadow||!1===p.visible||(p instanceof THREE.DirectionalLight&&i++,p instanceof THREE.PointLight&&s++,p instanceof THREE.SpotLight&&o++,p instanceof THREE.HemisphereLight&&u++)}h=l=0;for(p=t.length;h<p;h++){var d=t[h];d.castShadow&&(d instanceof THREE.SpotLight&&l++,d instanceof THREE.DirectionalLight&&!d.shadowCascade&&l++)}t=l;Bt&&r&&r.skeleton&&r.skeleton.useVertexTexture?l=1024:(l=Nt.getParameter(Nt.MAX_VERTEX_UNIFORM_VECTORS),l=Math.floor((l-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&(l=Math.min(r.skeleton.bones.length,l),l<r.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.skeleton.bones.length+", this GPU supports just "+l+" (try OpenGL instead of ANGLE)")));n={precision:P,supportsVertexTextures:Ht,map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:n,useFog:e.fog,fogExp:n instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:R,skinning:e.skinning,maxBones:l,useVertexTexture:Bt&&r&&r.skeleton&&r.skeleton.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:i,maxPointLights:s,maxSpotLights:o,maxHemiLights:u,maxShadows:t,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow&&0<t,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide};r=[];c?r.push(c):(r.push(e.fragmentShader),r.push(e.vertexShader));for(var v in e.defines)r.push(v),r.push(e.defines[v]);for(f in n)r.push(f),r.push(n[f]);c=r.join();var m;f=0;for(v=X.length;f<v;f++)if(r=X[f],r.code===c){m=r;m.usedTimes++;break}void 0===m&&(m=new THREE.WebGLProgram(this,c,e,n),X.push(m),W.info.memory.programs=X.length);e.program=m;m=e.program.attributes;if(e.morphTargets)for(e.numSupportedMorphTargets=0,v="morphTarget",f=0;f<this.maxMorphTargets;f++)c=v+f,0<=m[c]&&e.numSupportedMorphTargets++;if(e.morphNormals)for(e.numSupportedMorphNormals=0,v="morphNormal",f=0;f<this.maxMorphNormals;f++)c=v+f,0<=m[c]&&e.numSupportedMorphNormals++;e.uniformsList=[];for(a in e.uniforms)e.uniformsList.push([e.uniforms[a],a])};this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Nt.disable(Nt.CULL_FACE):(t===THREE.FrontFaceDirectionCW?Nt.frontFace(Nt.CW):Nt.frontFace(Nt.CCW),e===THREE.CullFaceBack?Nt.cullFace(Nt.BACK):e===THREE.CullFaceFront?Nt.cullFace(Nt.FRONT):Nt.cullFace(Nt.FRONT_AND_BACK),Nt.enable(Nt.CULL_FACE))};this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide;e=e.side===THREE.BackSide;Y!==t&&(t?Nt.disable(Nt.CULL_FACE):Nt.enable(Nt.CULL_FACE),Y=t);Z!==e&&(e?Nt.frontFace(Nt.CW):Nt.frontFace(Nt.CCW),Z=e)};this.setDepthTest=function(e){it!==e&&(e?Nt.enable(Nt.DEPTH_TEST):Nt.disable(Nt.DEPTH_TEST),it=e)};this.setDepthWrite=function(e){st!==e&&(Nt.depthMask(e),st=e)};this.setBlending=function(e,t,n,r){e!==et&&(e===THREE.NoBlending?Nt.disable(Nt.BLEND):e===THREE.AdditiveBlending?(Nt.enable(Nt.BLEND),Nt.blendEquation(Nt.FUNC_ADD),Nt.blendFunc(Nt.SRC_ALPHA,Nt.ONE)):e===THREE.SubtractiveBlending?(Nt.enable(Nt.BLEND),Nt.blendEquation(Nt.FUNC_ADD),Nt.blendFunc(Nt.ZERO,Nt.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Nt.enable(Nt.BLEND),Nt.blendEquation(Nt.FUNC_ADD),Nt.blendFunc(Nt.ZERO,Nt.SRC_COLOR)):e===THREE.CustomBlending?Nt.enable(Nt.BLEND):(Nt.enable(Nt.BLEND),Nt.blendEquationSeparate(Nt.FUNC_ADD,Nt.FUNC_ADD),Nt.blendFuncSeparate(Nt.SRC_ALPHA,Nt.ONE_MINUS_SRC_ALPHA,Nt.ONE,Nt.ONE_MINUS_SRC_ALPHA)),et=e);if(e===THREE.CustomBlending){if(t!==tt&&(Nt.blendEquation(M(t)),tt=t),n!==nt||r!==rt)Nt.blendFunc(M(n),M(r)),nt=n,rt=r}else rt=nt=tt=null};this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Wt),e.__webglTexture=Nt.createTexture(),W.info.memory.textures++);Nt.activeTexture(Nt.TEXTURE0+t);Nt.bindTexture(Nt.TEXTURE_2D,e.__webglTexture);Nt.pixelStorei(Nt.UNPACK_FLIP_Y_WEBGL,e.flipY);Nt.pixelStorei(Nt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha);Nt.pixelStorei(Nt.UNPACK_ALIGNMENT,e.unpackAlignment);var n=e.image,r=THREE.Math.isPowerOfTwo(n.width)&&THREE.Math.isPowerOfTwo(n.height),i=M(e.format),s=M(e.type);L(Nt.TEXTURE_2D,e,r);var o=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<o.length&&r){for(var u=0,a=o.length;u<a;u++)n=o[u],Nt.texImage2D(Nt.TEXTURE_2D,u,i,n.width,n.height,0,i,s,n.data);e.generateMipmaps=!1}else Nt.texImage2D(Nt.TEXTURE_2D,0,i,n.width,n.height,0,i,s,n.data);else if(e instanceof THREE.CompressedTexture)for(u=0,a=o.length;u<a;u++)n=o[u],e.format!==THREE.RGBAFormat?Nt.compressedTexImage2D(Nt.TEXTURE_2D,u,i,n.width,n.height,0,n.data):Nt.texImage2D(Nt.TEXTURE_2D,u,i,n.width,n.height,0,i,s,n.data);else if(0<o.length&&r){u=0;for(a=o.length;u<a;u++)n=o[u],Nt.texImage2D(Nt.TEXTURE_2D,u,i,i,s,n);e.generateMipmaps=!1}else Nt.texImage2D(Nt.TEXTURE_2D,0,i,i,s,e.image);e.generateMipmaps&&r&&Nt.generateMipmap(Nt.TEXTURE_2D);e.needsUpdate=!1;if(e.onUpdate)e.onUpdate()}else Nt.activeTexture(Nt.TEXTURE0+t),Nt.bindTexture(Nt.TEXTURE_2D,e.__webglTexture)};this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0);void 0===e.stencilBuffer&&(e.stencilBuffer=!0);e.addEventListener("dispose",Xt);e.__webglTexture=Nt.createTexture();W.info.memory.textures++;var n=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),r=M(e.format),i=M(e.type);if(t){e.__webglFramebuffer=[];e.__webglRenderbuffer=[];Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,e.__webglTexture);L(Nt.TEXTURE_CUBE_MAP,e,n);for(var s=0;6>s;s++){e.__webglFramebuffer[s]=Nt.createFramebuffer();e.__webglRenderbuffer[s]=Nt.createRenderbuffer();Nt.texImage2D(Nt.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,r,e.width,e.height,0,r,i,null);var o=e,u=Nt.TEXTURE_CUBE_MAP_POSITIVE_X+s;Nt.bindFramebuffer(Nt.FRAMEBUFFER,e.__webglFramebuffer[s]);Nt.framebufferTexture2D(Nt.FRAMEBUFFER,Nt.COLOR_ATTACHMENT0,u,o.__webglTexture,0);A(e.__webglRenderbuffer[s],e)}n&&Nt.generateMipmap(Nt.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Nt.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Nt.createRenderbuffer(),Nt.bindTexture(Nt.TEXTURE_2D,e.__webglTexture),L(Nt.TEXTURE_2D,e,n),Nt.texImage2D(Nt.TEXTURE_2D,0,r,e.width,e.height,0,r,i,null),r=Nt.TEXTURE_2D,Nt.bindFramebuffer(Nt.FRAMEBUFFER,e.__webglFramebuffer),Nt.framebufferTexture2D(Nt.FRAMEBUFFER,Nt.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_ATTACHMENT,Nt.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_STENCIL_ATTACHMENT,Nt.RENDERBUFFER,e.__webglRenderbuffer):A(e.__webglRenderbuffer,e),n&&Nt.generateMipmap(Nt.TEXTURE_2D);t?Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,null):Nt.bindTexture(Nt.TEXTURE_2D,null);Nt.bindRenderbuffer(Nt.RENDERBUFFER,null);Nt.bindFramebuffer(Nt.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,n=e.width,e=e.height,i=r=0):(t=null,n=ht,e=pt,r=lt,i=ct);t!==$&&(Nt.bindFramebuffer(Nt.FRAMEBUFFER,t),Nt.viewport(r,i,n,e),$=t);dt=n;vt=e};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,t,n){this.width=e;this.height=t;n=n||{};this.wrapS=void 0!==n.wrapS?n.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==n.wrapT?n.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n.magFilter?n.magFilter:THREE.LinearFilter;this.minFilter=void 0!==n.minFilter?n.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==n.anisotropy?n.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==n.format?n.format:THREE.RGBAFormat;this.type=void 0!==n.type?n.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==n.depthBuffer?n.depthBuffer:!0;this.stencilBuffer=void 0!==n.stencilBuffer?n.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e;this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.format=this.format;e.type=this.type;e.depthBuffer=this.depthBuffer;e.stencilBuffer=this.stencilBuffer;e.generateMipmaps=this.generateMipmaps;e.shareDepthFrom=this.shareDepthFrom;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(e,t,n){THREE.WebGLRenderTarget.call(this,e,t,n);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLProgram=function(){var e=0;return function(t,n,r,i){var s=t.context,o=r.fragmentShader,u=r.vertexShader,f=r.uniforms,l=r.attributes,c=r.defines,h=r.index0AttributeName;void 0===h&&!0===i.morphTargets&&(h="position");var p="SHADOWMAP_TYPE_BASIC";i.shadowMapType===THREE.PCFShadowMap?p="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(p="SHADOWMAP_TYPE_PCF_SOFT");var d,v;d=[];for(var m in c)v=c[m],!1!==v&&(v="#define "+m+" "+v,d.push(v));d=d.join("\n");c=s.createProgram();r instanceof THREE.RawShaderMaterial?t=r="":(r=["precision "+i.precision+" float;","precision "+i.precision+" int;",d,i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+p:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n	attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n	attribute vec3 morphTarget0;\n	attribute vec3 morphTarget1;\n	attribute vec3 morphTarget2;\n	attribute vec3 morphTarget3;\n	#ifdef USE_MORPHNORMALS\n		attribute vec3 morphNormal0;\n		attribute vec3 morphNormal1;\n		attribute vec3 morphNormal2;\n		attribute vec3 morphNormal3;\n	#else\n		attribute vec3 morphTarget4;\n		attribute vec3 morphTarget5;\n		attribute vec3 morphTarget6;\n		attribute vec3 morphTarget7;\n	#endif\n#endif\n#ifdef USE_SKINNING\n	attribute vec4 skinIndex;\n	attribute vec4 skinWeight;\n#endif\n"].join("\n"),t=["precision "+i.precision+" float;","precision "+i.precision+" int;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",d,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+p:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));u=new THREE.WebGLShader(s,s.VERTEX_SHADER,r+u);o=new THREE.WebGLShader(s,s.FRAGMENT_SHADER,t+o);s.attachShader(c,u);s.attachShader(c,o);void 0!==h&&s.bindAttribLocation(c,0,h);s.linkProgram(c);!1===s.getProgramParameter(c,s.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",s.getProgramParameter(c,s.VALIDATE_STATUS)),console.error("gl.getError()",s.getError()));""!==s.getProgramInfoLog(c)&&console.error("gl.getProgramInfoLog()",s.getProgramInfoLog(c));s.deleteShader(u);s.deleteShader(o);h="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");i.useVertexTexture?(h.push("boneTexture"),h.push("boneTextureWidth"),h.push("boneTextureHeight")):h.push("boneGlobalMatrices");i.logarithmicDepthBuffer&&h.push("logDepthBufFC");for(var g in f)h.push(g);f=h;g={};h=0;for(t=f.length;h<t;h++)p=f[h],g[p]=s.getUniformLocation(c,p);this.uniforms=g;h="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(f=0;f<i.maxMorphTargets;f++)h.push("morphTarget"+f);for(f=0;f<i.maxMorphNormals;f++)h.push("morphNormal"+f);for(var y in l)h.push(y);i=h;l={};y=0;for(f=i.length;y<f;y++)g=i[y],l[g]=s.getAttribLocation(c,g);this.attributes=l;this.id=e++;this.code=n;this.usedTimes=1;this.program=c;this.vertexShader=u;this.fragmentShader=o;return this}}();THREE.WebGLShader=function(){var e=function(e){e=e.split("\n");for(var t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")};return function(t,n,r){n=t.createShader(n);t.shaderSource(n,r);t.compileShader(n);!1===t.getShaderParameter(n,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==t.getShaderInfoLog(n)&&(console.error("THREE.WebGLShader:","gl.getShaderInfoLog()",t.getShaderInfoLog(n)),console.error(e(r)));return n}}();THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld);this.positionScreen.copy(e.positionScreen)};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(e,t,n){console.warn("DEPRECATED: GeometryUtils's .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry);e.merge(t,r,n)},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,n,r){var i=new THREE.Vector3,s=THREE.Math.random16(),o=THREE.Math.random16();1<s+o&&(s=1-s,o=1-o);var u=1-s-o;i.copy(t);i.multiplyScalar(s);e.copy(n);e.multiplyScalar(o);i.add(e);e.copy(r);e.multiplyScalar(u);i.add(e);return i}}(),randomPointInFace:function(e,t,n){return THREE.GeometryUtils.randomPointInTriangle(t.vertices[e.a],t.vertices[e.b],t.vertices[e.c])},randomPointsInGeometry:function(e,t){function n(e){function t(n,r){if(r<n)return n;var i=n+Math.floor((r-n)/2);return f[i]>e?t(n,i-1):f[i]<e?t(i+1,r):i}return t(0,f.length-1)}var r,i,s=e.faces,o=e.vertices,u=s.length,a=0,f=[],l,c,h;for(i=0;i<u;i++)r=s[i],l=o[r.a],c=o[r.b],h=o[r.c],r._area=THREE.GeometryUtils.triangleArea(l,c,h),a+=r._area,f[i]=a;r=[];for(i=0;i<t;i++)o=THREE.Math.random16()*a,o=n(o),r[i]=THREE.GeometryUtils.randomPointInFace(s[o],e,!0);return r},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n,r,i){e.subVectors(r,n);t.subVectors(i,n);e.cross(t);return.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,n=new THREE.Vector3;n.addVectors(t.min,t.max);n.multiplyScalar(-.5);e.applyMatrix((new THREE.Matrix4).makeTranslation(n.x,n.y,n.z));e.computeBoundingBox();return n}};THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,n,r){var i=new THREE.ImageLoader;i.crossOrigin=this.crossOrigin;var s=new THREE.Texture(void 0,t);t=i.load(e,function(){s.needsUpdate=!0;n&&n(s)},void 0,function(e){r&&r(e)});s.image=t;s.sourceFile=e;return s},loadCompressedTexture:function(e,t,n,r){var i=new THREE.CompressedTexture;i.mapping=t;var s=new XMLHttpRequest;s.onload=function(){var e=THREE.ImageUtils.parseDDS(s.response,!0);i.format=e.format;i.mipmaps=e.mipmaps;i.image.width=e.width;i.image.height=e.height;i.generateMipmaps=!1;i.needsUpdate=!0;n&&n(i)};s.onerror=r;s.open("GET",e,!0);s.responseType="arraybuffer";s.send(null);return i},loadTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;r=new THREE.ImageLoader;r.crossOrigin=this.crossOrigin;var s=new THREE.Texture;s.image=i;void 0!==t&&(s.mapping=t);s.flipY=!1;t=0;for(var o=e.length;t<o;++t){var u=r.load(e[t],function(){i.loadCount+=1;6===i.loadCount&&(s.needsUpdate=!0,n&&n(s))});i[t]=u}return s},loadCompressedTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.CompressedTexture;s.image=i;void 0!==t&&(s.mapping=t);s.flipY=!1;s.generateMipmaps=!1;t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format;t.mipmaps=r.mipmaps;t.width=r.width;t.height=r.height;i.loadCount+=1;6===i.loadCount&&(s.format=r.format,s.needsUpdate=!0,n&&n(s))}};if(e instanceof Array)for(var o=0,u=e.length;o<u;++o){var a={};i[o]=a;var f=new XMLHttpRequest;f.onload=t(f,a);f.onerror=r;a=e[o];f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null)}else f=new XMLHttpRequest,f.onload=function(){var e=THREE.ImageUtils.parseDDS(f.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,r=0;r<t;r++){i[r]={mipmaps:[]};for(var o=0;o<e.mipmapCount;o++)i[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+o]),i[r].format=e.format,i[r].width=e.width,i[r].height=e.height}s.format=e.format;s.needsUpdate=!0;n&&n(s)}},f.onerror=r,f.open("GET",e,!0),f.responseType="arraybuffer",f.send(null);return s},loadDDSTexture:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.CompressedTexture;s.image=i;void 0!==t&&(s.mapping=t);s.flipY=!1;s.generateMipmaps=!1;var o=new XMLHttpRequest;o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);if(e.isCubemap)for(var t=e.mipmaps.length/e.mipmapCount,r=0;r<t;r++){i[r]={mipmaps:[]};for(var u=0;u<e.mipmapCount;u++)i[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+u]),i[r].format=e.format,i[r].width=e.width,i[r].height=e.height}else s.image.width=e.width,s.image.height=e.height,s.mipmaps=e.mipmaps;s.format=e.format;s.needsUpdate=!0;n&&n(s)};o.onerror=r;o.open("GET",e,!0);o.responseType="arraybuffer";o.send(null);return s},parseDDS:function(e,t){function n(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function r(e,t,n,r){var i=n*r*4;e=new Uint8Array(e,t,i);for(var i=new Uint8Array(i),s=t=0,o=0;o<r;o++)for(var u=0;u<n;u++){var a=e[s];s++;var f=e[s];s++;var l=e[s];s++;var c=e[s];s++;i[t]=l;t++;i[t]=f;t++;i[t]=a;t++;i[t]=c;t++}return i}var i={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},s=n("DXT1"),o=n("DXT3"),u=n("DXT5"),a=new Int32Array(e,0,31);if(542327876!==a[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),i;if(!a[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),i;var f=a[21],l=!1;switch(f){case s:s=8;i.format=THREE.RGB_S3TC_DXT1_Format;break;case o:s=16;i.format=THREE.RGBA_S3TC_DXT3_Format;break;case u:s=16;i.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(32==a[22]&&a[23]&16711680&&a[24]&65280&&a[25]&255&&a[26]&4278190080)l=!0,s=64,i.format=THREE.RGBAFormat;else return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(f&255,f>>8&255,f>>16&255,f>>24&255)),i}i.mipmapCount=1;a[2]&131072&&!1!==t&&(i.mipmapCount=Math.max(1,a[7]));i.isCubemap=a[28]&512?!0:!1;i.width=a[4];i.height=a[3];for(var a=a[1]+4,o=i.width,u=i.height,f=i.isCubemap?6:1,c=0;c<f;c++){for(var h=0;h<i.mipmapCount;h++){if(l)var p=r(e,a,o,u),d=p.length;else d=Math.max(4,o)/4*Math.max(4,u)/4*s,p=new Uint8Array(e,a,d);i.mipmaps.push({data:p,width:o,height:u});a+=d;o=Math.max(.5*o,1);u=Math.max(.5*u,1)}o=i.width;u=i.height}return i},getNormalMap:function(e,t){var n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var r=e.width,i=e.height,s=document.createElement("canvas");s.width=r;s.height=i;var o=s.getContext("2d");o.drawImage(e,0,0);for(var u=o.getImageData(0,0,r,i).data,a=o.createImageData(r,i),f=a.data,l=0;l<r;l++)for(var c=0;c<i;c++){var h=0>c-1?0:c-1,p=c+1>i-1?i-1:c+1,d=0>l-1?0:l-1,v=l+1>r-1?r-1:l+1,m=[],g=[0,0,u[4*(c*r+l)]/255*t];m.push([-1,0,u[4*(c*r+d)]/255*t]);m.push([-1,-1,u[4*(h*r+d)]/255*t]);m.push([0,-1,u[4*(h*r+l)]/255*t]);m.push([1,-1,u[4*(h*r+v)]/255*t]);m.push([1,0,u[4*(c*r+v)]/255*t]);m.push([1,1,u[4*(p*r+v)]/255*t]);m.push([0,1,u[4*(p*r+l)]/255*t]);m.push([-1,1,u[4*(p*r+d)]/255*t]);h=[];d=m.length;for(p=0;p<d;p++){var v=m[p],y=m[(p+1)%d],v=[v[0]-g[0],v[1]-g[1],v[2]-g[2]],y=[y[0]-g[0],y[1]-g[1],y[2]-g[2]];h.push(n([v[1]*y[2]-v[2]*y[1],v[2]*y[0]-v[0]*y[2],v[0]*y[1]-v[1]*y[0]]))}m=[0,0,0];for(p=0;p<h.length;p++)m[0]+=h[p][0],m[1]+=h[p][1],m[2]+=h[p][2];m[0]/=h.length;m[1]/=h.length;m[2]/=h.length;g=4*(c*r+l);f[g]=(m[0]+1)/2*255|0;f[g+1]=(m[1]+1)/2*255|0;f[g+2]=255*m[2]|0;f[g+3]=255}o.putImageData(a,0,0);return s},generateDataTexture:function(e,t,n){var r=e*t,i=new Uint8Array(3*r),s=Math.floor(255*n.r),o=Math.floor(255*n.g);n=Math.floor(255*n.b);for(var u=0;u<r;u++)i[3*u]=s,i[3*u+1]=o,i[3*u+2]=n;e=new THREE.DataTexture(i,e,t,THREE.RGBFormat);e.needsUpdate=!0;return e}};THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var n=new THREE.Object3D,r=0,i=t.length;r<i;r++)n.add(new THREE.Mesh(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld);t.remove(e);n.add(e)},attach:function(e,t,n){var r=new THREE.Matrix4;r.getInverse(n.matrixWorld);e.applyMatrix(r);t.remove(e);n.add(e)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();this.faces[t]=this.faces[t]||{};this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{};this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){var t=this.getFace(),n=this.size/t.resolution,r=0,i=String(e).split(""),s=i.length,o=[];for(e=0;e<s;e++){var u=new THREE.Path,u=this.extractGlyphPoints(i[e],t,n,r,u),r=r+u.offset;o.push(u.path)}return{paths:o,offset:r/2}},extractGlyphPoints:function(e,t,n,r,i){var s=[],o,u,a,f,l,c,h,p,d,v,m,g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),f=t.length,e=0;e<f;)switch(a=t[e++],a){case"m":a=t[e++]*n+r;l=t[e++]*n;i.moveTo(a,l);break;case"l":a=t[e++]*n+r;l=t[e++]*n;i.lineTo(a,l);break;case"q":a=t[e++]*n+r;l=t[e++]*n;p=t[e++]*n+r;d=t[e++]*n;i.quadraticCurveTo(p,d,a,l);if(o=s[s.length-1])for(c=o.x,h=o.y,o=1,u=this.divisions;o<=u;o++){var y=o/u;THREE.Shape.Utils.b2(y,c,p,a);THREE.Shape.Utils.b2(y,h,d,l)}break;case"b":if(a=t[e++]*n+r,l=t[e++]*n,p=t[e++]*n+r,d=t[e++]*-n,v=t[e++]*n+r,m=t[e++]*-n,i.bezierCurveTo(a,l,p,d,v,m),o=s[s.length-1])for(c=o.x,h=o.y,o=1,u=this.divisions;o<=u;o++)y=o/u,THREE.Shape.Utils.b3(y,c,p,v,a),THREE.Shape.Utils.b3(y,h,d,m,l)}return{offset:g.ha*n,path:i}}}};THREE.FontUtils.generateShapes=function(e,t){t=t||{};var n=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",i=void 0!==t.weight?t.weight:"normal",s=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=void 0!==t.size?t.size:100;THREE.FontUtils.divisions=n;THREE.FontUtils.face=r;THREE.FontUtils.weight=i;THREE.FontUtils.style=s;n=THREE.FontUtils.drawText(e).paths;r=[];i=0;for(s=n.length;i<s;i++)Array.prototype.push.apply(r,n[i].toShapes());return r};(function(e){var t=function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n};e.Triangulate=function(e,n){var r=e.length;if(3>r)return null;var i=[],s=[],o=[],u,a,f;if(0<t(e))for(a=0;a<r;a++)s[a]=a;else for(a=0;a<r;a++)s[a]=r-1-a;var l=2*r;for(a=r-1;2<r;){if(0>=l--){console.log("Warning, unable to triangulate polygon!");break}u=a;r<=u&&(u=0);a=u+1;r<=a&&(a=0);f=a+1;r<=f&&(f=0);var c;e:{var h=c=void 0,p=void 0,d=void 0,v=void 0,m=void 0,g=void 0,y=void 0,w=void 0,h=e[s[u]].x,p=e[s[u]].y,d=e[s[a]].x,v=e[s[a]].y,m=e[s[f]].x,g=e[s[f]].y;if(1e-10>(d-h)*(g-p)-(v-p)*(m-h))c=!1;else{var E=void 0,S=void 0,x=void 0,T=void 0,N=void 0,C=void 0,k=void 0,L=void 0,A=void 0,O=void 0,A=L=k=w=y=void 0,E=m-d,S=g-v,x=h-m,T=p-g,N=d-h,C=v-p;for(c=0;c<r;c++)if(y=e[s[c]].x,w=e[s[c]].y,!(y===h&&w===p||y===d&&w===v||y===m&&w===g)&&(k=y-h,L=w-p,A=y-d,O=w-v,y-=m,w-=g,A=E*O-S*A,k=N*L-C*k,L=x*w-T*y,-1e-10<=A&&-1e-10<=L&&-1e-10<=k)){c=!1;break e}c=!0}}if(c){i.push([e[s[u]],e[s[a]],e[s[f]]]);o.push([s[u],s[a],s[f]]);u=a;for(f=a+1;f<r;u++,f++)s[u]=s[f];r--;l=2*r}}return n?o:i};e.Triangulate.area=t;return e})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(e){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(e){e=this.getUtoTmapping(e);return this.getPoint(e)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPoint(t/e));return n};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n};THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]};THREE.Curve.prototype.getLengths=function(e){e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,r=this.getPoint(0),i,s=0;t.push(0);for(i=1;i<=e;i++)n=this.getPoint(i/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(e,t){var n=this.getLengths(),r=0,i=n.length,s;s=t?t:e*n[i-1];for(var o=0,u=i-1,a;o<=u;)if(r=Math.floor(o+(u-o)/2),a=n[r]-s,0>a)o=r+1;else if(0<a)u=r-1;else{u=r;break}r=u;if(n[r]==s)return r/(i-1);o=n[r];return n=(r+(s-o)/(n[r+1]-o))/(i-1)};THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4;e+=1e-4;0>t&&(t=0);1<e&&(e=1);t=this.getPoint(t);return this.getPoint(e).clone().sub(t).normalize()};THREE.Curve.prototype.getTangentAt=function(e){e=this.getUtoTmapping(e);return this.getTangent(e)};THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,i){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*i},tangentSpline:function(e,t,n,r,i){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,n,r,i){e=.5*(n-e);r=.5*(r-t);var s=i*i;return(2*t-2*n+e+r)*i*s+(-3*t+3*n-2*e-r)*s+e*i+t}};THREE.Curve.create=function(e,t){e.prototype=Object.create(THREE.Curve.prototype);e.prototype.getPoint=t;return e};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(e){this.curves.push(e)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))};THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength(),n=this.getCurveLengths();for(e=0;e<n.length;){if(n[e]>=t)return t=n[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null};THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,n,r=this.curves.length;for(n=0;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e};THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,n,r,i,s,o;t=n=Number.NEGATIVE_INFINITY;i=s=Number.POSITIVE_INFINITY;var u,a,f,l,c=e[0]instanceof THREE.Vector3;l=c?new THREE.Vector3:new THREE.Vector2;a=0;for(f=e.length;a<f;a++)u=e[a],u.x>t?t=u.x:u.x<i&&(i=u.x),u.y>n?n=u.y:u.y<s&&(s=u.y),c&&(u.z>r?r=u.z:u.z<o&&(o=u.z)),l.add(u);e={minX:i,minY:s,maxX:t,maxY:n};c&&(e.maxZ=r,e.minZ=o);return e};THREE.CurvePath.prototype.createPointsGeometry=function(e){e=this.getPoints(e,!0);return this.createGeometry(e)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){e=this.getSpacedPoints(e,!0);return this.createGeometry(e)};THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,n=0;n<e.length;n++)t.vertices.push(new THREE.Vector3(e[n].x,e[n].y,e[n].z||0));return t};THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)};THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var n=this.getPoints(e),r,i;t||(t=this.bends);r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var n=this.getSpacedPoints(e),r,i;t||(t=this.bends);r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n};THREE.CurvePath.prototype.getWrapPoints=function(e,t){var n=this.getBoundingBox(),r,i,s,o,u,a;r=0;for(i=e.length;r<i;r++)s=e[r],o=s.x,u=s.y,a=o/n.maxX,a=t.getUtoTmapping(a,o),o=t.getPoint(a),a=t.getTangent(a),a.set(-a.y,a.x).multiplyScalar(u),s.x=o.x+a.x,s.y=o.y+a.y;return e};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(e){THREE.CurvePath.call(this);this.actions=[];e&&this.fromPoints(e)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)};THREE.Path.prototype.moveTo=function(e,t){var n=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:n})};THREE.Path.prototype.lineTo=function(e,t){var n=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r);this.actions.push({action:THREE.PathActions.LINE_TO,args:n})};THREE.Path.prototype.quadraticCurveTo=function(e,t,n,r){var i=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.QuadraticBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r));this.curves.push(s);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:i})};THREE.Path.prototype.bezierCurveTo=function(e,t,n,r,i,s){var o=Array.prototype.slice.call(arguments),u=this.actions[this.actions.length-1].args,u=new THREE.CubicBezierCurve(new THREE.Vector2(u[u.length-2],u[u.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r),new THREE.Vector2(i,s));this.curves.push(u);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})};THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),n=this.actions[this.actions.length-1].args,n=[new THREE.Vector2(n[n.length-2],n[n.length-1])];Array.prototype.push.apply(n,e);n=new THREE.SplineCurve(n);this.curves.push(n);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})};THREE.Path.prototype.arc=function(e,t,n,r,i,s){var o=this.actions[this.actions.length-1].args;this.absarc(e+o[o.length-2],t+o[o.length-1],n,r,i,s)};THREE.Path.prototype.absarc=function(e,t,n,r,i,s){this.absellipse(e,t,n,n,r,i,s)};THREE.Path.prototype.ellipse=function(e,t,n,r,i,s,o){var u=this.actions[this.actions.length-1].args;this.absellipse(e+u[u.length-2],t+u[u.length-1],n,r,i,s,o)};THREE.Path.prototype.absellipse=function(e,t,n,r,i,s,o){var u=Array.prototype.slice.call(arguments),a=new THREE.EllipseCurve(e,t,n,r,i,s,o);this.curves.push(a);a=a.getPoint(1);u.push(a.x);u.push(a.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:u})};THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var n=[],r=0;r<e;r++)n.push(this.getPoint(r/e));return n};THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var n=[],r,i,s,o,u,a,f,l,c,h,p,d,v;r=0;for(i=this.actions.length;r<i;r++)switch(s=this.actions[r],o=s.action,s=s.args,o){case THREE.PathActions.MOVE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.LINE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:u=s[2];a=s[3];c=s[0];h=s[1];0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b2(v,p,c,u),v=THREE.Shape.Utils.b2(v,d,h,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.BEZIER_CURVE_TO:u=s[4];a=s[5];c=s[0];h=s[1];f=s[2];l=s[3];0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b3(v,p,c,f,u),v=THREE.Shape.Utils.b3(v,d,h,l,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.CSPLINE_THRU:o=this.actions[r-1].args;v=[new THREE.Vector2(o[o.length-2],o[o.length-1])];o=e*s[0].length;v=v.concat(s[0]);v=new THREE.SplineCurve(v);for(s=1;s<=o;s++)n.push(v.getPointAt(s/o));break;case THREE.PathActions.ARC:u=s[0];a=s[1];h=s[2];f=s[3];o=s[4];c=!!s[5];p=o-f;d=2*e;for(s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+h*Math.sin(v),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.ELLIPSE:for(u=s[0],a=s[1],h=s[2],l=s[3],f=s[4],o=s[5],c=!!s[6],p=o-f,d=2*e,s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+l*Math.sin(v),n.push(new THREE.Vector2(o,v))}r=n[n.length-1];1e-10>Math.abs(r.x-n[0].x)&&1e-10>Math.abs(r.y-n[0].y)&&n.splice(n.length-1,1);t&&n.push(n[0]);return n};THREE.Path.prototype.toShapes=function(e,t){function n(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n],s=new THREE.Shape;s.actions=i.actions;s.curves=i.curves;t.push(s)}return t}function r(e,t){for(var n=t.length,r=!1,i=n-1,s=0;s<n;i=s++){var o=t[i],u=t[s],a=u.x-o.x,f=u.y-o.y;if(1e-10<Math.abs(f)){if(0>f&&(o=t[s],a=-a,u=t[i],f=-f),!(e.y<o.y||e.y>u.y))if(e.y==o.y){if(e.x==o.x)return!0}else{i=f*(e.x-o.x)-a*(e.y-o.y);if(0==i)return!0;0>i||(r=!r)}}else if(e.y==o.y&&(u.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=u.x))return!0}return r}var i=function(e){var t,n,r,i,s=[],o=new THREE.Path;t=0;for(n=e.length;t<n;t++)r=e[t],i=r.args,r=r.action,r==THREE.PathActions.MOVE_TO&&0!=o.actions.length&&(s.push(o),o=new THREE.Path),o[r].apply(o,i);0!=o.actions.length&&s.push(o);return s}(this.actions);if(0==i.length)return[];if(!0===t)return n(i);var s,o,u,a=[];if(1==i.length)return o=i[0],u=new THREE.Shape,u.actions=o.actions,u.curves=o.curves,a.push(u),a;var f=!THREE.Shape.Utils.isClockWise(i[0].getPoints()),f=e?!f:f;u=[];var l=[],c=[],h=0,p;l[h]=void 0;c[h]=[];var d,v;d=0;for(v=i.length;d<v;d++)o=i[d],p=o.getPoints(),s=THREE.Shape.Utils.isClockWise(p),(s=e?!s:s)?(!f&&l[h]&&h++,l[h]={s:new THREE.Shape,p:p},l[h].s.actions=o.actions,l[h].s.curves=o.curves,f&&h++,c[h]=[]):c[h].push({h:o,p:p[0]});if(!l[0])return n(i);if(1<l.length){d=!1;v=[];o=0;for(i=l.length;o<i;o++)u[o]=[];o=0;for(i=l.length;o<i;o++)for(s=c[o],f=0;f<s.length;f++){h=s[f];p=!0;for(var m=0;m<l.length;m++)r(h.p,l[m].p)&&(o!=m&&v.push({froms:o,tos:m,hole:f}),p?(p=!1,u[m].push(h)):d=!0);p&&u[o].push(h)}0<v.length&&(d||(c=u))}d=0;for(v=l.length;d<v;d++)for(u=l[d].s,a.push(u),o=c[d],i=0,s=o.length;i<s;i++)u.holes.push(o[i].h);return a};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)};THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)};THREE.Shape.prototype.getPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r};THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r};THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}};THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)};THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}};THREE.Shape.Utils={triangulateShape:function(e,t){function n(e,t,n){return e.x!=t.x?e.x<t.x?e.x<=n.x&&n.x<=t.x:t.x<=n.x&&n.x<=e.x:e.y<t.y?e.y<=n.y&&n.y<=t.y:t.y<=n.y&&n.y<=e.y}function r(e,t,r,i,s){var o=t.x-e.x,u=t.y-e.y,a=i.x-r.x,f=i.y-r.y,l=e.x-r.x,c=e.y-r.y,h=u*a-o*f,p=u*l-o*c;if(1e-10<Math.abs(h)){if(0<h){if(0>p||p>h)return[];a=f*l-a*c;if(0>a||a>h)return[]}else{if(0<p||p<h)return[];a=f*l-a*c;if(0<a||a<h)return[]}if(0==a)return!s||0!=p&&p!=h?[e]:[];if(a==h)return!s||0!=p&&p!=h?[t]:[];if(0==p)return[r];if(p==h)return[i];s=a/h;return[{x:e.x+s*o,y:e.y+s*u}]}if(0!=p||f*l!=a*c)return[];u=0==o&&0==u;a=0==a&&0==f;if(u&&a)return e.x!=r.x||e.y!=r.y?[]:[e];if(u)return n(r,i,e)?[e]:[];if(a)return n(e,t,r)?[r]:[];0!=o?(e.x<t.x?(o=e,a=e.x,u=t,e=t.x):(o=t,a=t.x,u=e,e=e.x),r.x<i.x?(t=r,h=r.x,f=i,r=i.x):(t=i,h=i.x,f=r,r=r.x)):(e.y<t.y?(o=e,a=e.y,u=t,e=t.y):(o=t,a=t.y,u=e,e=e.y),r.y<i.y?(t=r,h=r.y,f=i,r=i.y):(t=i,h=i.y,f=r,r=r.y));return a<=h?e<h?[]:e==h?s?[]:[t]:e<=r?[t,u]:[t,f]:a>r?[]:a==r?s?[]:[o]:e<=r?[o,u]:[o,f]}function i(e,t,n,r){var i=t.x-e.x,s=t.y-e.y;t=n.x-e.x;n=n.y-e.y;var o=r.x-e.x;r=r.y-e.y;e=i*n-s*t;i=i*r-s*o;return 1e-10<Math.abs(e)?(t=o*n-r*t,0<e?0<=i&&0<=t:0<=i||0<=t):0<i}var s,o,u,a,f,l={};u=e.concat();s=0;for(o=t.length;s<o;s++)Array.prototype.push.apply(u,t[s]);s=0;for(o=u.length;s<o;s++)f=u[s].x+":"+u[s].y,void 0!==l[f]&&console.log("Duplicate point",f),l[f]=s;s=function(e,t){function n(e,t){var n=u.length-1,r=e-1;0>r&&(r=n);var s=e+1;s>n&&(s=0);n=i(u[e],u[r],u[s],a[t]);if(!n)return!1;n=a.length-1;r=t-1;0>r&&(r=n);s=t+1;s>n&&(s=0);return(n=i(a[t],a[r],a[s],u[e]))?!0:!1}function s(e,t){var n,i;for(n=0;n<u.length;n++)if(i=n+1,i%=u.length,i=r(e,t,u[n],u[i],!0),0<i.length)return!0;return!1}function o(e,n){var i,s,o,u;for(i=0;i<f.length;i++)for(s=t[f[i]],o=0;o<s.length;o++)if(u=o+1,u%=s.length,u=r(e,n,s[o],s[u],!0),0<u.length)return!0;return!1}var u=e.concat(),a,f=[],l,c,h,p,v,m=[],g,y,b,w=0;for(l=t.length;w<l;w++)f.push(w);g=0;for(var E=2*f.length;0<f.length;){E--;if(0>E){console.log("Infinite Loop! Holes left:"+f.length+", Probably Hole outside Shape!");break}for(c=g;c<u.length;c++){h=u[c];l=-1;for(w=0;w<f.length;w++)if(p=f[w],v=h.x+":"+h.y+":"+p,void 0===m[v]){a=t[p];for(y=0;y<a.length;y++)if(p=a[y],n(c,y)&&!s(h,p)&&!o(h,p)){l=y;f.splice(w,1);g=u.slice(0,c+1);p=u.slice(c);y=a.slice(l);b=a.slice(0,l+1);u=g.concat(y).concat(b).concat(p);g=c;break}if(0<=l)break;m[v]=!0}if(0<=l)break}}return u}(e,t);var c=THREE.FontUtils.Triangulate(s,!1);s=0;for(o=c.length;s<o;s++)for(a=c[s],u=0;3>u;u++)f=a[u].x+":"+a[u].y,f=l[f],void 0!==f&&(a[u]=f);return c.concat()},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var n=1-e;return n*n*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,n,r){return this.b2p0(e,t)+this.b2p1(e,n)+this.b2p2(e,r)},b3p0:function(e,t){var n=1-e;return n*n*n*t},b3p1:function(e,t){var n=1-e;return 3*n*n*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,n,r,i){return this.b3p0(e,t)+this.b3p1(e,n)+this.b3p2(e,r)+this.b3p3(e,i)}};THREE.LineCurve=function(e,t){this.v1=e;this.v2=t};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);t.multiplyScalar(e).add(this.v1);return t};THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)};THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,t,n){this.v0=e;this.v1=t;this.v2=n};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(t,e)};THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x);e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);t=new THREE.Vector2(t,e);t.normalize();return t};THREE.CubicBezierCurve=function(e,t,n,r){this.v0=e;this.v1=t;this.v2=n;this.v3=r};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(t,e)};THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);t=new THREE.Vector2(t,e);t.normalize();return t};THREE.SplineCurve=function(e){this.points=void 0==e?[]:e};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,n=[],r=this.points,i;i=(r.length-1)*e;e=Math.floor(i);i-=e;n[0]=0==e?e:e-1;n[1]=e;n[2]=e>r.length-2?r.length-1:e+1;n[3]=e>r.length-3?r.length-1:e+2;t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i);t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i);return t};THREE.EllipseCurve=function(e,t,n,r,i,s,o){this.aX=e;this.aY=t;this.xRadius=n;this.yRadius=r;this.aStartAngle=i;this.aEndAngle=s;this.aClockwise=o};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(e){var t;t=this.aEndAngle-this.aStartAngle;0>t&&(t+=2*Math.PI);t>2*Math.PI&&(t-=2*Math.PI);t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t;e=this.aX+this.xRadius*Math.cos(t);t=this.aY+this.yRadius*Math.sin(t);return new THREE.Vector2(e,t)};THREE.ArcCurve=function(e,t,n,r,i,s){THREE.EllipseCurve.call(this,e,t,n,n,r,i,s)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e;this.v2=t},function(e){var t=new THREE.Vector3;t.subVectors(this.v2,this.v1);t.multiplyScalar(e);t.add(this.v1);return t});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,n){this.v0=e;this.v1=t;this.v2=n},function(e){var t,n;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);n=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(t,n,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,n,r){this.v0=e;this.v1=t;this.v2=n;this.v3=r},function(e){var t,n;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);n=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(t,n,e)});THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i;e*=r.length-1;i=Math.floor(e);e-=i;n[0]=0==i?i:i-1;n[1]=i;n[2]=i>r.length-2?r.length-1:i+1;n[3]=i>r.length-3?r.length-1:i+2;i=r[n[0]];var s=r[n[1]],o=r[n[2]],n=r[n[3]];t.x=THREE.Curve.Utils.interpolate(i.x,s.x,o.x,n.x,e);t.y=THREE.Curve.Utils.interpolate(i.y,s.y,o.y,n.y,e);t.z=THREE.Curve.Utils.interpolate(i.z,s.z,o.z,n.z,e);return t});THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i;i=(r.length-0)*e;e=Math.floor(i);i-=e;e+=0<e?0:(Math.floor(Math.abs(e)/r.length)+1)*r.length;n[0]=(e-1)%r.length;n[1]=e%r.length;n[2]=(e+1)%r.length;n[3]=(e+2)%r.length;t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i);t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i);t.z=THREE.Curve.Utils.interpolate(r[n[0]].z,r[n[1]].z,r[n[2]].z,r[n[3]].z,i);return t});THREE.AnimationHandler=function(){var e=[],t={},n={update:function(t){for(var n=0;n<e.length;n++)e[n].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t);-1!==t&&e.splice(t,1)},add:function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting.");t[e.name]=e;if(!0!==e.initialized){for(var n=0;n<e.hierarchy.length;n++){for(var r=0;r<e.hierarchy[n].keys.length;r++)if(0>e.hierarchy[n].keys[r].time&&(e.hierarchy[n].keys[r].time=0),void 0!==e.hierarchy[n].keys[r].rot&&!(e.hierarchy[n].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[n].keys[r].rot;e.hierarchy[n].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(e.hierarchy[n].keys.length&&void 0!==e.hierarchy[n].keys[0].morphTargets){i={};for(r=0;r<e.hierarchy[n].keys.length;r++)for(var s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++){var o=e.hierarchy[n].keys[r].morphTargets[s];i[o]=-1}e.hierarchy[n].usedMorphTargets=i;for(r=0;r<e.hierarchy[n].keys.length;r++){var u={};for(o in i){for(s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++)if(e.hierarchy[n].keys[r].morphTargets[s]===o){u[o]=e.hierarchy[n].keys[r].morphTargetsInfluences[s];break}s===e.hierarchy[n].keys[r].morphTargets.length&&(u[o]=0)}e.hierarchy[n].keys[r].morphTargetsInfluences=u}}for(r=1;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].time===e.hierarchy[n].keys[r-1].time&&(e.hierarchy[n].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].index=r}e.initialized=!0}},remove:function(e){void 0===t[e]&&console.log("THREE.AnimationHandler.add: Warning! "+e+" doesn't exists in library. Doing nothing.");t[e]=void 0},get:function(e){if("string"===typeof e)return t[e]?t[e]:null},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var n=0;n<e.skeleton.bones.length;n++)t.push(e.skeleton.bones[n]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var n=0;n<e.children.length;n++)r(e.children[n],t)};n.LINEAR=0;n.CATMULLROM=1;n.CATMULLROM_FORWARD=2;return n}();THREE.Animation=function(e,t){this.root=e;this.data=THREE.AnimationHandler.get(t);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];THREE.Animation.prototype.play=function(e,t){this.currentTime=void 0!==e?e:0;this.weight=void 0!==t?t:1;this.isPlaying=!0;this.isPaused=!1;this.reset();THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.reset=function(){for(var e=0,t=this.hierarchy.length;e<t;e++){var n=this.hierarchy[e];n.matrixAutoUpdate=!0;void 0===n.animationCache&&(n.animationCache={});void 0===n.animationCache[this.data.name]&&(n.animationCache[this.data.name]={},n.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},n.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},n.animationCache[this.data.name].originalMatrix=n instanceof THREE.Bone?n.skinMatrix:n.matrix);for(var n=n.animationCache[this.data.name],r=0;3>r;r++){for(var i=this.keyTypes[r],s=this.data.hierarchy[e].keys[0],o=this.getNextKeyWith(i,e,1);o.time<this.currentTime&&o.index>s.index;)s=o,o=this.getNextKeyWith(i,e,o.index+1);n.prevKey[i]=s;n.nextKey[i]=o}}};THREE.Animation.prototype.update=function(){var e=[],t=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Quaternion,i=function(e,t){var n=[],r=[],i,o,u,a,l,c;i=(e.length-1)*t;o=Math.floor(i);i-=o;n[0]=0===o?o:o-1;n[1]=o;n[2]=o>e.length-2?o:o+1;n[3]=o>e.length-3?o:o+2;o=e[n[0]];a=e[n[1]];l=e[n[2]];c=e[n[3]];n=i*i;u=i*n;r[0]=s(o[0],a[0],l[0],c[0],i,n,u);r[1]=s(o[1],a[1],l[1],c[1],i,n,u);r[2]=s(o[2],a[2],l[2],c[2],i,n,u);return r},s=function(e,t,n,r,i,s,o){e=.5*(n-e);r=.5*(r-t);return(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t};return function(s){if(!1!==this.isPlaying&&(this.currentTime+=s*this.timeScale,0!==this.weight)){var o;s=this.data.length;if(!0===this.loop&&this.currentTime>s)this.currentTime%=s,this.reset();else if(!1===this.loop&&this.currentTime>s){this.stop();return}s=0;for(var u=this.hierarchy.length;s<u;s++)for(var f=this.hierarchy[s],l=f.animationCache[this.data.name],h=0;3>h;h++){o=this.keyTypes[h];var p=l.prevKey[o],v=l.nextKey[o];if(v.time<=this.currentTime){p=this.data.hierarchy[s].keys[0];for(v=this.getNextKeyWith(o,s,1);v.time<this.currentTime&&v.index>p.index;)p=v,v=this.getNextKeyWith(o,s,v.index+1);l.prevKey[o]=p;l.nextKey[o]=v}f.matrixAutoUpdate=!0;f.matrixWorldNeedsUpdate=!0;var m=(this.currentTime-p.time)/(v.time-p.time),g=p[o],y=v[o];0>m&&(m=0);1<m&&(m=1);if("pos"===o)if(o=f.position,this.interpolationType===THREE.AnimationHandler.LINEAR)n.x=g[0]+(y[0]-g[0])*m,n.y=g[1]+(y[1]-g[1])*m,n.z=g[2]+(y[2]-g[2])*m,f instanceof THREE.Bone&&(p=this.weight/(this.weight+f.accumulatedPosWeight),o.lerp(n,p),f.accumulatedPosWeight+=this.weight);else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)e[0]=this.getPrevKeyWith("pos",s,p.index-1).pos,e[1]=g,e[2]=y,e[3]=this.getNextKeyWith("pos",s,v.index+1).pos,m=.33*m+.33,v=i(e,m),f instanceof THREE.Bone?(p=this.weight/(this.weight+f.accumulatedPosWeight),f.accumulatedPosWeight+=this.weight):p=1,o.x+=(v[0]-o.x)*p,o.y+=(v[1]-o.y)*p,o.z+=(v[2]-o.z)*p,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(m=i(e,1.01*m),t.set(m[0],m[1],m[2]),t.sub(o),t.y=0,t.normalize(),o=Math.atan2(t.x,t.z),f.rotation.set(0,o,0))}else"rot"===o?(THREE.Quaternion.slerp(g,y,r,m),f instanceof THREE.Bone?0===f.accumulatedRotWeight?(f.quaternion.copy(r),f.accumulatedRotWeight=this.weight):(p=this.weight/(this.weight+f.accumulatedRotWeight),THREE.Quaternion.slerp(f.quaternion,r,f.quaternion,p),f.accumulatedRotWeight+=this.weight):f.quaternion.copy(r)):"scl"===o&&(o=f.scale,n.x=g[0]+(y[0]-g[0])*m,n.y=g[1]+(y[1]-g[1])*m,n.z=g[2]+(y[2]-g[2])*m,f instanceof THREE.Bone&&(p=this.weight/(this.weight+f.accumulatedSclWeight),o.lerp(n,p),f.accumulatedSclWeight+=this.weight))}return!0}}}();THREE.Animation.prototype.getNextKeyWith=function(e,t,n){var r=this.data.hierarchy[t].keys;for(n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?n<r.length-1?n:r.length-1:n%r.length;n<r.length;n++)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(e,t,n){var r=this.data.hierarchy[t].keys;for(n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<n?n:0:0<=n?n:n+r.length;0<=n;n--)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[r.length-1]};THREE.KeyFrameAnimation=function(e,t){this.root=e;this.data=THREE.AnimationHandler.get(t);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;for(var n=0,r=this.hierarchy.length;n<r;n++){var i=this.data.hierarchy[n].sids,s=this.hierarchy[n];if(this.data.hierarchy[n].keys.length&&i){for(var o=0;o<i.length;o++){var u=i[o],a=this.getNextKeyWith(u,n,0);a&&a.apply(u)}s.matrixAutoUpdate=!1;this.data.hierarchy[n].node.updateMatrix();s.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(e){this.currentTime=void 0!==e?e:0;if(!1===this.isPlaying){this.isPlaying=!0;var t=this.hierarchy.length,n,r;for(e=0;e<t;e++)n=this.hierarchy[e],r=this.data.hierarchy[e],void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey=null,r.animationCache.nextKey=null,r.animationCache.originalMatrix=n instanceof THREE.Bone?n.skinMatrix:n.matrix),n=this.data.hierarchy[e].keys,n.length&&(r.animationCache.prevKey=n[0],r.animationCache.nextKey=n[1],this.startTime=Math.min(n[0].time,this.startTime),this.endTime=Math.max(n[n.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],n=this.data.hierarchy[e];if(void 0!==n.animationCache){var r=n.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r);delete n.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(e){if(!1!==this.isPlaying){this.currentTime+=e*this.timeScale;e=this.data.length;!0===this.loop&&this.currentTime>e&&(this.currentTime%=e);this.currentTime=Math.min(this.currentTime,e);e=0;for(var t=this.hierarchy.length;e<t;e++){var n=this.hierarchy[e],r=this.data.hierarchy[e],i=r.keys,r=r.animationCache;if(i.length){var s=r.prevKey,o=r.nextKey;if(o.time<=this.currentTime){for(;o.time<this.currentTime&&o.index>s.index;)s=o,o=i[s.index+1];r.prevKey=s;r.nextKey=o}o.time>=this.currentTime?s.interpolate(o,this.currentTime):s.interpolate(o,o.time);this.data.hierarchy[e].node.updateMatrix();n.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n%=t.length;n<t.length;n++)if(t[n].hasTarget(e))return t[n];return t[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n=0<=n?n:n+t.length;0<=n;n--)if(t[n].hasTarget(e))return t[n];return t[t.length-1]};THREE.MorphAnimation=function(e){this.mesh=e;this.frames=e.morphTargetInfluences.length;this.currentTime=0;this.duration=1e3;this.loop=!0;this.isPlaying=!1};THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var e=0,t=0;return function(n){if(!1!==this.isPlaying){this.currentTime+=n;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);n=this.duration/this.frames;var r=Math.floor(this.currentTime/n);r!=t&&(this.mesh.morphTargetInfluences[e]=0,this.mesh.morphTargetInfluences[t]=1,this.mesh.morphTargetInfluences[r]=0,e=t,t=r);this.mesh.morphTargetInfluences[r]=this.currentTime%n/n;this.mesh.morphTargetInfluences[e]=1-this.mesh.morphTargetInfluences[r]}}}()};THREE.CubeCamera=function(e,t,n){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0);r.lookAt(new THREE.Vector3(1,0,0));this.add(r);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(-1,0,0));this.add(i);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,0,1);s.lookAt(new THREE.Vector3(0,1,0));this.add(s);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,-1);o.lookAt(new THREE.Vector3(0,-1,0));this.add(o);var u=new THREE.PerspectiveCamera(90,1,e,t);u.up.set(0,-1,0);u.lookAt(new THREE.Vector3(0,0,1));this.add(u);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,-1,0);a.lookAt(new THREE.Vector3(0,0,-1));this.add(a);this.renderTarget=new THREE.WebGLRenderTargetCube(n,n,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(e,t){var n=this.renderTarget,l=n.generateMipmaps;n.generateMipmaps=!1;n.activeCubeFace=0;e.render(t,r,n);n.activeCubeFace=1;e.render(t,i,n);n.activeCubeFace=2;e.render(t,s,n);n.activeCubeFace=3;e.render(t,o,n);n.activeCubeFace=4;e.render(t,u,n);n.generateMipmaps=l;n.activeCubeFace=5;e.render(t,a,n)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(e,t,n,r,i,s,o){THREE.Camera.call(this);this.fov=n;this.left=-e/2;this.right=e/2;this.top=t/2;this.bottom=-t/2;this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,s,o);this.cameraP=new THREE.PerspectiveCamera(n,e/t,r,i);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e;this.cameraO.right=e;this.cameraO.top=t;this.cameraO.bottom=-t;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t;this.left=-e/2;this.right=e/2;this.top=t/2;this.bottom=-t/2};THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var n=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));this.setFov(n);return n};THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.BoxGeometry=function(e,t,n,r,i,s){function o(e,t,n,r,i,s,o,a){var f,l=u.widthSegments,c=u.heightSegments,p=i/2,d=s/2,v=u.vertices.length;if("x"===e&&"y"===t||"y"===e&&"x"===t)f="z";else if("x"===e&&"z"===t||"z"===e&&"x"===t)f="y",c=u.depthSegments;else if("z"===e&&"y"===t||"y"===e&&"z"===t)f="x",l=u.depthSegments;var m=l+1,g=c+1,y=i/l,b=s/c,w=new THREE.Vector3;w[f]=0<o?1:-1;for(i=0;i<g;i++)for(s=0;s<m;s++){var E=new THREE.Vector3;E[e]=(s*y-p)*n;E[t]=(i*b-d)*r;E[f]=o;u.vertices.push(E)}for(i=0;i<c;i++)for(s=0;s<l;s++)d=s+m*i,e=s+m*(i+1),t=s+1+m*(i+1),n=s+1+m*i,r=new THREE.Vector2(s/l,1-i/c),o=new THREE.Vector2(s/l,1-(i+1)/c),f=new THREE.Vector2((s+1)/l,1-(i+1)/c),p=new THREE.Vector2((s+1)/l,1-i/c),d=new THREE.Face3(d+v,e+v,n+v),d.normal.copy(w),d.vertexNormals.push(w.clone(),w.clone(),w.clone()),d.materialIndex=a,u.faces.push(d),u.faceVertexUvs[0].push([r,o,p]),d=new THREE.Face3(e+v,t+v,n+v),d.normal.copy(w),d.vertexNormals.push(w.clone(),w.clone(),w.clone()),d.materialIndex=a,u.faces.push(d),u.faceVertexUvs[0].push([o.clone(),f,p.clone()])}THREE.Geometry.call(this);this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};this.widthSegments=r||1;this.heightSegments=i||1;this.depthSegments=s||1;var u=this;r=e/2;i=t/2;s=n/2;o("z","y",-1,-1,n,t,r,0);o("z","y",1,-1,n,t,-r,1);o("x","z",1,1,e,n,i,2);o("x","z",1,-1,e,n,-i,3);o("x","y",1,-1,e,t,s,4);o("x","y",-1,-1,e,t,-s,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(e,t,n,r){THREE.Geometry.call(this);this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r};e=e||50;t=void 0!==t?Math.max(3,t):8;n=void 0!==n?n:0;r=void 0!==r?r:2*Math.PI;var i,s=[];i=new THREE.Vector3;var o=new THREE.Vector2(.5,.5);this.vertices.push(i);s.push(o);for(i=0;i<=t;i++){var u=new THREE.Vector3,a=n+i/t*r;u.x=e*Math.cos(a);u.y=e*Math.sin(a);this.vertices.push(u);s.push(new THREE.Vector2((u.x/e+1)/2,(u.y/e+1)/2))}n=new THREE.Vector3(0,0,1);for(i=1;i<=t;i++)this.faces.push(new THREE.Face3(i,i+1,0,[n.clone(),n.clone(),n.clone()])),this.faceVertexUvs[0].push([s[i].clone(),s[i+1].clone(),o.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(e,t,n,r,i,s){console.warn("DEPRECATED: THREE.CubeGeometry is deprecated. Use THREE.BoxGeometry instead.");return new THREE.BoxGeometry(e,t,n,r,i,s)};THREE.CylinderGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:s};e=void 0!==e?e:20;t=void 0!==t?t:20;n=void 0!==n?n:100;r=r||8;i=i||1;s=void 0!==s?s:!1;var o=n/2,u,a,f=[],l=[];for(a=0;a<=i;a++){var c=[],h=[],p=a/i,d=p*(t-e)+e;for(u=0;u<=r;u++){var v=u/r,m=new THREE.Vector3;m.x=d*Math.sin(v*Math.PI*2);m.y=-p*n+o;m.z=d*Math.cos(v*Math.PI*2);this.vertices.push(m);c.push(this.vertices.length-1);h.push(new THREE.Vector2(v,1-p))}f.push(c);l.push(h)}n=(t-e)/n;for(u=0;u<r;u++)for(0!==e?(c=this.vertices[f[0][u]].clone(),h=this.vertices[f[0][u+1]].clone()):(c=this.vertices[f[1][u]].clone(),h=this.vertices[f[1][u+1]].clone()),c.setY(Math.sqrt(c.x*c.x+c.z*c.z)*n).normalize(),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*n).normalize(),a=0;a<i;a++){var p=f[a][u],d=f[a+1][u],v=f[a+1][u+1],m=f[a][u+1],g=c.clone(),y=c.clone(),b=h.clone(),w=h.clone(),E=l[a][u].clone(),S=l[a+1][u].clone(),x=l[a+1][u+1].clone(),T=l[a][u+1].clone();this.faces.push(new THREE.Face3(p,d,m,[g,y,w]));this.faceVertexUvs[0].push([E,S,T]);this.faces.push(new THREE.Face3(d,v,m,[y.clone(),b,w.clone()]));this.faceVertexUvs[0].push([S.clone(),x,T.clone()])}if(!1===s&&0<e)for(this.vertices.push(new THREE.Vector3(0,o,0)),u=0;u<r;u++)p=f[0][u],d=f[0][u+1],v=this.vertices.length-1,g=new THREE.Vector3(0,1,0),y=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),E=l[0][u].clone(),S=l[0][u+1].clone(),x=new THREE.Vector2(S.x,0),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x]);if(!1===s&&0<t)for(this.vertices.push(new THREE.Vector3(0,-o,0)),u=0;u<r;u++)p=f[a][u+1],d=f[a][u],v=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),y=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),E=l[a][u+1].clone(),S=l[a][u].clone(),x=new THREE.Vector2(S.x,1),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x]);this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(e,t){"undefined"!==typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var n=e.length,r=0;r<n;r++)this.addShape(e[r],t)};THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function n(e,t,n){t||console.log("die");return t.clone().multiplyScalar(n).add(e)}function r(e,t,n){var r=THREE.Math.sign,i=1,i=e.x-t.x,s=e.y-t.y,o=n.x-e.x,u=n.y-e.y,a=i*i+s*s;if(1e-10<Math.abs(i*u-s*o)){var f=Math.sqrt(a),r=Math.sqrt(o*o+u*u),a=t.x-s/f;t=t.y+i/f;o=((n.x-u/r-a)*u-(n.y+o/r-t)*o)/(i*u-s*o);n=a+i*o-e.x;e=t+s*o-e.y;i=n*n+e*e;if(2>=i)return new THREE.Vector2(n,e);i=Math.sqrt(i/2)}else e=!1,1e-10<i?1e-10<o&&(e=!0):-1e-10>i?-1e-10>o&&(e=!0):r(s)==r(u)&&(e=!0),e?(n=-s,e=i,i=Math.sqrt(a)):(n=i,e=s,i=Math.sqrt(a/2));return new THREE.Vector2(n/i,e/i)}function i(n,r){var i,s;for(q=n.length;0<=--q;){i=q;s=q-1;0>s&&(s=n.length-1);for(var o=0,u=p+2*l,o=0;o<u;o++){var a=j*o,f=j*(o+1),c=r+i+a,a=r+s+a,h=r+s+f,f=r+i+f,d=n,v=o,m=u,g=i,w=s,c=c+L,a=a+L,h=h+L,f=f+L;k.faces.push(new THREE.Face3(c,a,f,null,null,y));k.faces.push(new THREE.Face3(a,h,f,null,null,y));c=b.generateSideWallUV(k,e,d,t,c,a,h,f,v,m,g,w);k.faceVertexUvs[0].push([c[0],c[1],c[3]]);k.faceVertexUvs[0].push([c[1],c[2],c[3]])}}}function s(e,t,n){k.vertices.push(new THREE.Vector3(e,t,n))}function o(n,r,i,s){n+=L;r+=L;i+=L;k.faces.push(new THREE.Face3(n,r,i,null,null,g));n=s?b.generateBottomUV(k,e,t,n,r,i):b.generateTopUV(k,e,t,n,r,i);k.faceVertexUvs[0].push(n)}var u=void 0!==t.amount?t.amount:100,a=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:a-2,l=void 0!==t.bevelSegments?t.bevelSegments:3,c=void 0!==t.bevelEnabled?t.bevelEnabled:!0,h=void 0!==t.curveSegments?t.curveSegments:12,p=void 0!==t.steps?t.steps:1,d=t.extrudePath,v,m=!1,g=t.material,y=t.extrudeMaterial,b=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,E,S,x;d&&(v=d.getSpacedPoints(p),m=!0,c=!1,w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(d,p,!1),E=new THREE.Vector3,S=new THREE.Vector3,x=new THREE.Vector3);c||(f=a=l=0);var T,N,C,k=this,L=this.vertices.length,d=e.extractPoints(h),h=d.shape,A=d.holes;if(d=!THREE.Shape.Utils.isClockWise(h)){h=h.reverse();N=0;for(C=A.length;N<C;N++)T=A[N],THREE.Shape.Utils.isClockWise(T)&&(A[N]=T.reverse());d=!1}var O=THREE.Shape.Utils.triangulateShape(h,A),M=h;N=0;for(C=A.length;N<C;N++)T=A[N],h=h.concat(T);var _,D,P,H,B,j=h.length,F,I=O.length,d=[],q=0;P=M.length;_=P-1;for(D=q+1;q<P;q++,_++,D++)_===P&&(_=0),D===P&&(D=0),d[q]=r(M[q],M[_],M[D]);var R=[],U,z=d.concat();N=0;for(C=A.length;N<C;N++){T=A[N];U=[];q=0;P=T.length;_=P-1;for(D=q+1;q<P;q++,_++,D++)_===P&&(_=0),D===P&&(D=0),U[q]=r(T[q],T[_],T[D]);R.push(U);z=z.concat(U)}for(_=0;_<l;_++){P=_/l;H=a*(1-P);D=f*Math.sin(P*Math.PI/2);q=0;for(P=M.length;q<P;q++)B=n(M[q],d[q],D),s(B.x,B.y,-H);N=0;for(C=A.length;N<C;N++)for(T=A[N],U=R[N],q=0,P=T.length;q<P;q++)B=n(T[q],U[q],D),s(B.x,B.y,-H)}D=f;for(q=0;q<j;q++)B=c?n(h[q],z[q],D):h[q],m?(S.copy(w.normals[0]).multiplyScalar(B.x),E.copy(w.binormals[0]).multiplyScalar(B.y),x.copy(v[0]).add(S).add(E),s(x.x,x.y,x.z)):s(B.x,B.y,0);for(P=1;P<=p;P++)for(q=0;q<j;q++)B=c?n(h[q],z[q],D):h[q],m?(S.copy(w.normals[P]).multiplyScalar(B.x),E.copy(w.binormals[P]).multiplyScalar(B.y),x.copy(v[P]).add(S).add(E),s(x.x,x.y,x.z)):s(B.x,B.y,u/p*P);for(_=l-1;0<=_;_--){P=_/l;H=a*(1-P);D=f*Math.sin(P*Math.PI/2);q=0;for(P=M.length;q<P;q++)B=n(M[q],d[q],D),s(B.x,B.y,u+H);N=0;for(C=A.length;N<C;N++)for(T=A[N],U=R[N],q=0,P=T.length;q<P;q++)B=n(T[q],U[q],D),m?s(B.x,B.y+v[p-1].y,v[p-1].x+H):s(B.x,B.y,u+H)}(function(){if(c){var e;e=0*j;for(q=0;q<I;q++)F=O[q],o(F[2]+e,F[1]+e,F[0]+e,!0);e=p+2*l;e*=j;for(q=0;q<I;q++)F=O[q],o(F[0]+e,F[1]+e,F[2]+e,!1)}else{for(q=0;q<I;q++)F=O[q],o(F[2],F[1],F[0],!0);for(q=0;q<I;q++)F=O[q],o(F[0]+j*p,F[1]+j*p,F[2]+j*p,!1)}})();(function(){var e=0;i(M,e);e+=M.length;N=0;for(C=A.length;N<C;N++)T=A[N],i(T,e),e+=T.length})()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r,i,s){t=e.vertices[i].x;i=e.vertices[i].y;n=e.vertices[s].x;s=e.vertices[s].y;return[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,i),new THREE.Vector2(n,s)]},generateBottomUV:function(e,t,n,r,i,s){return this.generateTopUV(e,t,n,r,i,s)},generateSideWallUV:function(e,t,n,r,i,s,o,u,a,f,l,c){t=e.vertices[i].x;n=e.vertices[i].y;i=e.vertices[i].z;r=e.vertices[s].x;a=e.vertices[s].y;s=e.vertices[s].z;f=e.vertices[o].x;l=e.vertices[o].y;o=e.vertices[o].z;c=e.vertices[u].x;var h=e.vertices[u].y;e=e.vertices[u].z;return.01>Math.abs(n-a)?[new THREE.Vector2(t,1-i),new THREE.Vector2(r,1-s),new THREE.Vector2(f,1-o),new THREE.Vector2(c,1-e)]:[new THREE.Vector2(n,1-i),new THREE.Vector2(a,1-s),new THREE.Vector2(l,1-o),new THREE.Vector2(h,1-e)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this);!1===e instanceof Array&&(e=[e]);this.shapebb=e[e.length-1].getBoundingBox();this.addShapeList(e,t);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;n<r;n++)this.addShape(e[n],t);return this};THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var n=t.material,r=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,i,s,o,u=this.vertices.length;i=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var a=i.shape,f=i.holes;if(!THREE.Shape.Utils.isClockWise(a))for(a=a.reverse(),i=0,s=f.length;i<s;i++)o=f[i],THREE.Shape.Utils.isClockWise(o)&&(f[i]=o.reverse());var l=THREE.Shape.Utils.triangulateShape(a,f);i=0;for(s=f.length;i<s;i++)o=f[i],a=a.concat(o);f=a.length;s=l.length;for(i=0;i<f;i++)o=a[i],this.vertices.push(new THREE.Vector3(o.x,o.y,0));for(i=0;i<s;i++)f=l[i],a=f[0]+u,o=f[1]+u,f=f[2]+u,this.faces.push(new THREE.Face3(a,o,f,null,null,n)),this.faceVertexUvs[0].push(r.generateBottomUV(this,e,t,a,o,f))};THREE.LatheGeometry=function(e,t,n,r){THREE.Geometry.call(this);t=t||12;n=n||0;r=r||2*Math.PI;for(var i=1/(e.length-1),s=1/t,o=0,u=t;o<=u;o++)for(var a=n+o*s*r,f=Math.cos(a),l=Math.sin(a),a=0,c=e.length;a<c;a++){var h=e[a],p=new THREE.Vector3;p.x=f*h.x-l*h.y;p.y=l*h.x+f*h.y;p.z=h.z;this.vertices.push(p)}n=e.length;o=0;for(u=t;o<u;o++)for(a=0,c=e.length-1;a<c;a++){t=l=a+n*o;r=l+n;var f=l+1+n,l=l+1,h=o*s,p=a*i,d=h+s,v=p+i;this.faces.push(new THREE.Face3(t,r,l));this.faceVertexUvs[0].push([new THREE.Vector2(h,p),new THREE.Vector2(d,p),new THREE.Vector2(h,v)]);this.faces.push(new THREE.Face3(r,f,l));this.faceVertexUvs[0].push([new THREE.Vector2(d,p),new THREE.Vector2(d,v),new THREE.Vector2(h,v)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(e,t,n,r){THREE.Geometry.call(this);this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i=e/2,s=t/2;n=n||1;r=r||1;var o=n+1,u=r+1,a=e/n,f=t/r,l=new THREE.Vector3(0,0,1);for(e=0;e<u;e++){var c=e*f-s;for(t=0;t<o;t++)this.vertices.push(new THREE.Vector3(t*a-i,-c,0))}for(e=0;e<r;e++)for(t=0;t<n;t++){var h=t+o*e,i=t+o*(e+1),s=t+1+o*(e+1),u=t+1+o*e,a=new THREE.Vector2(t/n,1-e/r),f=new THREE.Vector2(t/n,1-(e+1)/r),c=new THREE.Vector2((t+1)/n,1-(e+1)/r),p=new THREE.Vector2((t+1)/n,1-e/r),h=new THREE.Face3(h,i,u);h.normal.copy(l);h.vertexNormals.push(l.clone(),l.clone(),l.clone());this.faces.push(h);this.faceVertexUvs[0].push([a,f,p]);h=new THREE.Face3(i,s,u);h.normal.copy(l);h.vertexNormals.push(l.clone(),l.clone(),l.clone());this.faces.push(h);this.faceVertexUvs[0].push([f.clone(),c,p.clone()])}};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);e=e||0;t=t||50;i=void 0!==i?i:0;s=void 0!==s?s:2*Math.PI;n=void 0!==n?Math.max(3,n):8;r=void 0!==r?Math.max(3,r):8;var o,u=[],a=e,f=(t-e)/r;for(e=0;e<=r;e++){for(o=0;o<=n;o++){var l=new THREE.Vector3,c=i+o/n*s;l.x=a*Math.cos(c);l.y=a*Math.sin(c);this.vertices.push(l);u.push(new THREE.Vector2((l.x/t+1)/2,(l.y/t+1)/2))}a+=f}t=new THREE.Vector3(0,0,1);for(e=0;e<r;e++)for(i=e*n,o=0;o<=n;o++)c=o+i,s=c+e,f=c+n+e,l=c+n+1+e,this.faces.push(new THREE.Face3(s,f,l,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([u[s].clone(),u[f].clone(),u[l].clone()]),s=c+e,f=c+n+1+e,l=c+1+e,this.faces.push(new THREE.Face3(s,f,l,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([u[s].clone(),u[f].clone(),u[l].clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(e,t,n,r,i,s,o){THREE.Geometry.call(this);this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:o};e=e||50;t=Math.max(3,Math.floor(t)||8);n=Math.max(2,Math.floor(n)||6);r=void 0!==r?r:0;i=void 0!==i?i:2*Math.PI;s=void 0!==s?s:0;o=void 0!==o?o:Math.PI;var u,a,f=[],l=[];for(a=0;a<=n;a++){var c=[],h=[];for(u=0;u<=t;u++){var p=u/t,d=a/n,v=new THREE.Vector3;v.x=-e*Math.cos(r+p*i)*Math.sin(s+d*o);v.y=e*Math.cos(s+d*o);v.z=e*Math.sin(r+p*i)*Math.sin(s+d*o);this.vertices.push(v);c.push(this.vertices.length-1);h.push(new THREE.Vector2(p,1-d))}f.push(c);l.push(h)}for(a=0;a<n;a++)for(u=0;u<t;u++){r=f[a][u+1];i=f[a][u];s=f[a+1][u];o=f[a+1][u+1];var c=this.vertices[r].clone().normalize(),h=this.vertices[i].clone().normalize(),p=this.vertices[s].clone().normalize(),d=this.vertices[o].clone().normalize(),v=l[a][u+1].clone(),m=l[a][u].clone(),g=l[a+1][u].clone(),y=l[a+1][u+1].clone();Math.abs(this.vertices[r].y)===e?(v.x=(v.x+m.x)/2,this.faces.push(new THREE.Face3(r,s,o,[c,p,d])),this.faceVertexUvs[0].push([v,g,y])):Math.abs(this.vertices[s].y)===e?(g.x=(g.x+y.x)/2,this.faces.push(new THREE.Face3(r,i,s,[c,h,p])),this.faceVertexUvs[0].push([v,m,g])):(this.faces.push(new THREE.Face3(r,i,o,[c,h,d])),this.faceVertexUvs[0].push([v,m,y]),this.faces.push(new THREE.Face3(i,s,o,[h.clone(),p,d.clone()])),this.faceVertexUvs[0].push([m.clone(),g,y.clone()]))}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,t){t=t||{};var n=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50;void 0===t.bevelThickness&&(t.bevelThickness=10);void 0===t.bevelSize&&(t.bevelSize=8);void 0===t.bevelEnabled&&(t.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,n,t)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(e,t,n,r,i){THREE.Geometry.call(this);this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i};e=e||100;t=t||40;n=n||8;r=r||6;i=i||2*Math.PI;for(var s=new THREE.Vector3,o=[],u=[],a=0;a<=n;a++)for(var f=0;f<=r;f++){var l=f/r*i,c=a/n*Math.PI*2;s.x=e*Math.cos(l);s.y=e*Math.sin(l);var h=new THREE.Vector3;h.x=(e+t*Math.cos(c))*Math.cos(l);h.y=(e+t*Math.cos(c))*Math.sin(l);h.z=t*Math.sin(c);this.vertices.push(h);o.push(new THREE.Vector2(f/r,a/n));u.push(h.clone().sub(s).normalize())}for(a=1;a<=n;a++)for(f=1;f<=r;f++)e=(r+1)*a+f-1,t=(r+1)*(a-1)+f-1,i=(r+1)*(a-1)+f,s=(r+1)*a+f,l=new THREE.Face3(e,t,s,[u[e].clone(),u[t].clone(),u[s].clone()]),this.faces.push(l),this.faceVertexUvs[0].push([o[e].clone(),o[t].clone(),o[s].clone()]),l=new THREE.Face3(t,i,s,[u[t].clone(),u[i].clone(),u[s].clone()]),this.faces.push(l),this.faceVertexUvs[0].push([o[t].clone(),o[i].clone(),o[s].clone()]);this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(e,t,n,r,i,s,o){function u(e,t,n,r,i){var s=Math.cos(e),o=Math.sin(e);e*=t/n;t=Math.cos(e);s*=r*(2+t)*.5;o=r*(2+t)*o*.5;r=i*r*Math.sin(e)*.5;return new THREE.Vector3(s,o,r)}THREE.Geometry.call(this);this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,p:i,q:s,heightScale:o};e=e||100;t=t||40;n=n||64;r=r||8;i=i||2;s=s||3;o=o||1;for(var a=Array(n),f=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,h=0;h<n;++h){a[h]=Array(r);var p=h/n*2*i*Math.PI,d=u(p,s,i,e,o),p=u(p+.01,s,i,e,o);f.subVectors(p,d);l.addVectors(p,d);c.crossVectors(f,l);l.crossVectors(c,f);c.normalize();l.normalize();for(p=0;p<r;++p){var v=p/r*2*Math.PI,m=-t*Math.cos(v),v=t*Math.sin(v),g=new THREE.Vector3;g.x=d.x+m*l.x+v*c.x;g.y=d.y+m*l.y+v*c.y;g.z=d.z+m*l.z+v*c.z;a[h][p]=this.vertices.push(g)-1}}for(h=0;h<n;++h)for(p=0;p<r;++p)i=(h+1)%n,s=(p+1)%r,e=a[h][p],t=a[i][p],i=a[i][s],s=a[h][s],o=new THREE.Vector2(h/n,p/r),f=new THREE.Vector2((h+1)/n,p/r),l=new THREE.Vector2((h+1)/n,(p+1)/r),c=new THREE.Vector2(h/n,(p+1)/r),this.faces.push(new THREE.Face3(e,t,s)),this.faceVertexUvs[0].push([o,f,c]),this.faces.push(new THREE.Face3(t,i,s)),this.faceVertexUvs[0].push([f.clone(),l,c.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(e,t,n,r,i){THREE.Geometry.call(this);this.parameters={path:e,segments:t,radius:n,radialSegments:r,closed:i};t=t||64;n=n||1;r=r||8;i=i||!1;var s=[],o,u,a=t+1,f,l,c,h,p=new THREE.Vector3,d,v,m;d=new THREE.TubeGeometry.FrenetFrames(e,t,i);v=d.normals;m=d.binormals;this.tangents=d.tangents;this.normals=v;this.binormals=m;for(d=0;d<a;d++)for(s[d]=[],f=d/(a-1),h=e.getPointAt(f),o=v[d],u=m[d],f=0;f<r;f++)l=f/r*2*Math.PI,c=-n*Math.cos(l),l=n*Math.sin(l),p.copy(h),p.x+=c*o.x+l*u.x,p.y+=c*o.y+l*u.y,p.z+=c*o.z+l*u.z,s[d][f]=this.vertices.push(new THREE.Vector3(p.x,p.y,p.z))-1;for(d=0;d<t;d++)for(f=0;f<r;f++)a=i?(d+1)%t:d+1,p=(f+1)%r,e=s[d][f],n=s[a][f],a=s[a][p],p=s[d][p],v=new THREE.Vector2(d/t,f/r),m=new THREE.Vector2((d+1)/t,f/r),o=new THREE.Vector2((d+1)/t,(f+1)/r),u=new THREE.Vector2(d/t,(f+1)/r),this.faces.push(new THREE.Face3(e,n,p)),this.faceVertexUvs[0].push([v,m,u]),this.faces.push(new THREE.Face3(n,a,p)),this.faceVertexUvs[0].push([m.clone(),o,u.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(e,t,n){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var i=[],s=[],o=[],u=new THREE.Vector3,a=new THREE.Matrix4;t+=1;var f,l,c;this.tangents=i;this.normals=s;this.binormals=o;for(f=0;f<t;f++)l=f/(t-1),i[f]=e.getTangentAt(l),i[f].normalize();s[0]=new THREE.Vector3;o[0]=new THREE.Vector3;e=Number.MAX_VALUE;f=Math.abs(i[0].x);l=Math.abs(i[0].y);c=Math.abs(i[0].z);f<=e&&(e=f,r.set(1,0,0));l<=e&&(e=l,r.set(0,1,0));c<=e&&r.set(0,0,1);u.crossVectors(i[0],r).normalize();s[0].crossVectors(i[0],u);o[0].crossVectors(i[0],s[0]);for(f=1;f<t;f++)s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),u.crossVectors(i[f-1],i[f]),1e-4<u.length()&&(u.normalize(),r=Math.acos(THREE.Math.clamp(i[f-1].dot(i[f]),-1,1)),s[f].applyMatrix4(a.makeRotationAxis(u,r))),o[f].crossVectors(i[f],s[f]);if(n)for(r=Math.acos(THREE.Math.clamp(s[0].dot(s[t-1]),-1,1)),r/=t-1,0<i[0].dot(u.crossVectors(s[0],s[t-1]))&&(r=-r),f=1;f<t;f++)s[f].applyMatrix4(a.makeRotationAxis(i[f],r*f)),o[f].crossVectors(i[f],s[f])};THREE.PolyhedronGeometry=function(e,t,n,r){function i(e){var t=e.normalize().clone();t.index=a.vertices.push(t)-1;var n=Math.atan2(e.z,-e.x)/2/Math.PI+.5;e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;t.uv=new THREE.Vector2(n,1-e);return t}function s(e,t,n){var r=new THREE.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()]);a.faces.push(r);m.copy(e).add(t).add(n).divideScalar(3);r=Math.atan2(m.z,-m.x);a.faceVertexUvs[0].push([u(e.uv,e,r),u(t.uv,t,r),u(n.uv,n,r)])}function o(e,t){var n=Math.pow(2,t);Math.pow(4,t);for(var r=i(a.vertices[e.a]),o=i(a.vertices[e.b]),u=i(a.vertices[e.c]),f=[],l=0;l<=n;l++){f[l]=[];for(var c=i(r.clone().lerp(u,l/n)),h=i(o.clone().lerp(u,l/n)),p=n-l,d=0;d<=p;d++)f[l][d]=0==d&&l==n?c:i(c.clone().lerp(h,d/p))}for(l=0;l<n;l++)for(d=0;d<2*(n-l)-1;d++)r=Math.floor(d/2),0==d%2?s(f[l][r+1],f[l+1][r],f[l][r]):s(f[l][r+1],f[l+1][r+1],f[l+1][r])}function u(e,t,n){0>n&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===t.x&&0===t.z&&(e=new THREE.Vector2(n/2/Math.PI+.5,e.y));return e.clone()}THREE.Geometry.call(this);n=n||1;r=r||0;for(var a=this,f=0,l=e.length;f<l;f+=3)i(new THREE.Vector3(e[f],e[f+1],e[f+2]));e=this.vertices;for(var c=[],h=f=0,l=t.length;f<l;f+=3,h++){var p=e[t[f]],d=e[t[f+1]],v=e[t[f+2]];c[h]=new THREE.Face3(p.index,d.index,v.index,[p.clone(),d.clone(),v.clone()])}for(var m=new THREE.Vector3,f=0,l=c.length;f<l;f++)o(c[f],r);f=0;for(l=this.faceVertexUvs[0].length;f<l;f++)t=this.faceVertexUvs[0][f],r=t[0].x,e=t[1].x,c=t[2].x,h=Math.max(r,Math.max(e,c)),p=Math.min(r,Math.min(e,c)),.9<h&&.1>p&&(.2>r&&(t[0].x+=1),.2>e&&(t[1].x+=1),.2>c&&(t[2].x+=1));f=0;for(l=this.vertices.length;f<l;f++)this.vertices[f].multiplyScalar(n);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var n=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(e,t,n){THREE.Geometry.call(this);var r=this.vertices,i=this.faces,s=this.faceVertexUvs[0],o,u,a,f,l=t+1;for(o=0;o<=n;o++)for(f=o/n,u=0;u<=t;u++)a=u/t,a=e(a,f),r.push(a);var c,h,p,d;for(o=0;o<n;o++)for(u=0;u<t;u++)e=o*l+u,r=o*l+u+1,f=(o+1)*l+u+1,a=(o+1)*l+u,c=new THREE.Vector2(u/t,o/n),h=new THREE.Vector2((u+1)/t,o/n),p=new THREE.Vector2((u+1)/t,(o+1)/n),d=new THREE.Vector2(u/t,(o+1)/n),i.push(new THREE.Face3(e,r,a)),s.push([c,h,d]),i.push(new THREE.Face3(r,f,a)),s.push([h.clone(),p,d.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(e){e=e||1;var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e));t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,e,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(e,t,n,r,i,s){THREE.Object3D.call(this);void 0===r&&(r=16776960);void 0===n&&(n=1);void 0===i&&(i=.2*n);void 0===s&&(s=.2*i);this.position=t;t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(0,0,0));t.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:r}));this.line.matrixAutoUpdate=!1;this.add(this.line);t=new THREE.CylinderGeometry(0,.5,1,5,1);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:r}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(e);this.setLength(n,i,s)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3,t;return function(n){.99999<n.y?this.quaternion.set(0,0,0,1):-.99999>n.y?this.quaternion.set(1,0,0,0):(e.set(n.z,0,-n.x).normalize(),t=Math.acos(n.y),this.quaternion.setFromAxisAngle(e,t))}}();THREE.ArrowHelper.prototype.setLength=function(e,t,n){void 0===t&&(t=.2*e);void 0===n&&(n=.2*t);this.line.scale.set(1,e,1);this.line.updateMatrix();this.cone.scale.set(n,t,n);this.cone.position.y=e;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e);this.cone.material.color.set(e)};THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var n=new THREE.Geometry;n.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==e&&this.update(e)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var n=t.boundingBox.min,t=t.boundingBox.max,r=this.vertices;r[0].set(t.x,t.y,t.z);r[1].set(n.x,t.y,t.z);r[2].set(n.x,n.y,t.z);r[3].set(t.x,n.y,t.z);r[4].set(t.x,t.y,n.z);r[5].set(n.x,t.y,n.z);r[6].set(n.x,n.y,n.z);r[7].set(t.x,n.y,n.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.BoundingBoxHelper=function(e,t){var n=void 0!==t?t:8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:n,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(e){function t(e,t,r){n(e,r);n(t,r)}function n(e,t){r.vertices.push(new THREE.Vector3);r.colors.push(new THREE.Color(t));void 0===s[e]&&(s[e]=[]);s[e].push(r.vertices.length-1)}var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),s={};t("n1","n2",16755200);t("n2","n4",16755200);t("n4","n3",16755200);t("n3","n1",16755200);t("f1","f2",16755200);t("f2","f4",16755200);t("f4","f3",16755200);t("f3","f1",16755200);t("n1","f1",16755200);t("n2","f2",16755200);t("n3","f3",16755200);t("n4","f4",16755200);t("p","n1",16711680);t("p","n2",16711680);t("p","n3",16711680);t("p","n4",16711680);t("u1","u2",43775);t("u2","u3",43775);t("u3","u1",43775);t("c","t",16777215);t("p","c",3355443);t("cn1","cn2",3355443);t("cn3","cn4",3355443);t("cf1","cf2",3355443);t("cf3","cf4",3355443);THREE.Line.call(this,r,i,THREE.LinePieces);this.camera=e;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=s;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,n=new THREE.Projector;return function(){function r(r,s,o,u){e.set(s,o,u);n.unprojectVector(e,t);r=i.pointMap[r];if(void 0!==r)for(s=0,o=r.length;s<o;s++)i.geometry.vertices[r[s]].copy(e)}var i=this;t.projectionMatrix.copy(this.camera.projectionMatrix);r("c",0,0,-1);r("t",0,0,1);r("n1",-1,-1,-1);r("n2",1,-1,-1);r("n3",-1,1,-1);r("n4",1,1,-1);r("f1",-1,-1,1);r("f2",1,-1,1);r("f3",-1,1,1);r("f4",1,1,1);r("u1",.7,1.1,-1);r("u2",-.7,1.1,-1);r("u3",0,2,-1);r("cf1",-1,0,1);r("cf2",1,0,1);r("cf3",0,-1,1);r("cf4",0,1,1);r("cn1",-1,0,-1);r("cn2",1,0,-1);r("cn3",0,-1,-1);r("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;t=t||1;var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(n,r);this.add(this.lightPlane);n=new THREE.Geometry;n.vertices.push(new THREE.Vector3,new THREE.Vector3);r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(n,r);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);n.subVectors(t,e);this.lightPlane.lookAt(n);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(n);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(e,t){var n=void 0!==t?t:16777215,r=[0,0],i={},s=function(e,t){return e-t},o=["a","b","c"],u=new THREE.BufferGeometry,a=e.geometry.clone();a.mergeVertices();a.computeFaceNormals();for(var f=a.vertices,a=a.faces,l=0,c=0,h=a.length;c<h;c++)for(var p=a[c],d=0;3>d;d++){r[0]=p[o[d]];r[1]=p[o[(d+1)%3]];r.sort(s);var v=r.toString();void 0===i[v]?(i[v]={vert1:r[0],vert2:r[1],face1:c,face2:void 0},l++):i[v].face2=c}u.addAttribute("position",new THREE.Float32Attribute(2*l,3));r=u.attributes.position.array;s=0;for(v in i)if(o=i[v],void 0===o.face2||.9999>a[o.face1].normal.dot(a[o.face2].normal))l=f[o.vert1],r[s++]=l.x,r[s++]=l.y,r[s++]=l.z,l=f[o.vert2],r[s++]=l.x,r[s++]=l.y,r[s++]=l.z;THREE.Line.call(this,u,new THREE.LineBasicMaterial({color:n}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper=function(e,t,n,r){this.object=e;this.size=void 0!==t?t:1;e=void 0!==n?n:16776960;r=void 0!==r?r:1;t=new THREE.Geometry;n=0;for(var i=this.object.geometry.faces.length;n<i;n++)t.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:e,linewidth:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(){var e=this.geometry.vertices,t=this.object,n=t.geometry.vertices,r=t.geometry.faces,i=t.matrixWorld;t.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(i);for(var s=t=0,o=r.length;t<o;t++,s+=2){var u=r[t];e[s].copy(n[u.a]).add(n[u.b]).add(n[u.c]).divideScalar(3).applyMatrix4(i);e[s+1].copy(u.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[s])}this.geometry.verticesNeedUpdate=!0;return this};THREE.GridHelper=function(e,t){var n=new THREE.Geometry,r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var i=-e;i<=e;i+=t){n.vertices.push(new THREE.Vector3(-e,0,i),new THREE.Vector3(e,0,i),new THREE.Vector3(i,0,-e),new THREE.Vector3(i,0,e));var s=0===i?this.color1:this.color2;n.colors.push(s,s,s,s)}THREE.Line.call(this,n,r,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e);this.color2.set(t);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(e,t,n,r){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];e=new THREE.SphereGeometry(t,4,2);e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(t=0;8>t;t++)e.faces[t].color=this.colors[4>t?0:1];t=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(e,t);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(e,t){this.light=e;this.light.updateMatrixWorld();var n=new THREE.SphereGeometry(t,4,2),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,n,r);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(e){for(var t=e.skeleton,n=new THREE.Geometry,r=0;r<t.bones.length;r++)t.bones[r].parent instanceof THREE.Bone&&(n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3),n.colors.push(new THREE.Color(0,0,1)),n.colors.push(new THREE.Color(0,1,0)));r=new THREE.LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,n,r,THREE.LinePieces);this.skeleton=t;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=0,n=0;n<this.skeleton.bones.length;n++){var r=this.skeleton.bones[n];r.parent instanceof THREE.Bone&&(e.vertices[t].setFromMatrixPosition(r.skinMatrix),e.vertices[t+1].setFromMatrixPosition(r.parent.skinMatrix),t+=2)}e.verticesNeedUpdate=!0;e.computeBoundingSphere()};THREE.SpotLightHelper=function(e){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;e=new THREE.CylinderGeometry(0,1,1,8,1,!0);e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var n=this.light.distance?this.light.distance:1e4,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n);e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(t.sub(e));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(e,t,n,r){this.object=e;this.size=void 0!==t?t:1;t=void 0!==n?n:16711680;r=void 0!==r?r:1;n=new THREE.Geometry;e=e.geometry.faces;for(var i=0,s=e.length;i<s;i++)for(var o=0,u=e[i].vertexNormals.length;o<u;o++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var n=this.geometry.vertices,r=this.object.geometry.vertices,i=this.object.geometry.faces,s=this.object.matrixWorld,o=0,u=0,a=i.length;u<a;u++)for(var f=i[u],l=0,c=f.vertexNormals.length;l<c;l++){var h=f.vertexNormals[l];n[o].copy(r[f[e[l]]]).applyMatrix4(s);t.copy(h).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);t.add(n[o]);o+=1;n[o].copy(t);o+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(e,t,n,r){this.object=e;this.size=void 0!==t?t:1;t=void 0!==n?n:255;r=void 0!==r?r:1;n=new THREE.Geometry;e=e.geometry.faces;for(var i=0,s=e.length;i<s;i++)for(var o=0,u=e[i].vertexTangents.length;o<u;o++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var n=this.geometry.vertices,r=this.object.geometry.vertices,i=this.object.geometry.faces,s=this.object.matrixWorld,o=0,u=0,a=i.length;u<a;u++)for(var f=i[u],l=0,c=f.vertexTangents.length;l<c;l++){var h=f.vertexTangents[l];n[o].copy(r[f[e[l]]]).applyMatrix4(s);t.copy(h).transformDirection(s).multiplyScalar(this.size);t.add(n[o]);o+=1;n[o].copy(t);o+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.WireframeHelper=function(e,t){var n=void 0!==t?t:16777215,r=[0,0],i={},s=function(e,t){return e-t},o=["a","b","c"],u=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var a=e.geometry.vertices,f=e.geometry.faces,l=0,c=new Uint32Array(6*f.length),h=0,p=f.length;h<p;h++)for(var d=f[h],v=0;3>v;v++){r[0]=d[o[v]];r[1]=d[o[(v+1)%3]];r.sort(s);var m=r.toString();void 0===i[m]&&(c[2*l]=r[0],c[2*l+1]=r[1],i[m]=!0,l++)}u.addAttribute("position",new THREE.Float32Attribute(2*l,3));r=u.attributes.position.array;h=0;for(p=l;h<p;h++)for(v=0;2>v;v++)l=a[c[2*h+v]],o=6*h+3*v,r[o+0]=l.x,r[o+1]=l.y,r[o+2]=l.z}else if(e.geometry instanceof THREE.BufferGeometry&&void 0!==e.geometry.attributes.index){for(var a=e.geometry.attributes.position.array,p=e.geometry.attributes.index.array,f=e.geometry.offsets,l=0,c=new Uint32Array(2*p.length),d=0,g=f.length;d<g;++d)for(var v=f[d].start,m=f[d].count,o=f[d].index,h=v,y=v+m;h<y;h+=3)for(v=0;3>v;v++)r[0]=o+p[h+v],r[1]=o+p[h+(v+1)%3],r.sort(s),m=r.toString(),void 0===i[m]&&(c[2*l]=r[0],c[2*l+1]=r[1],i[m]=!0,l++);u.addAttribute("position",new THREE.Float32Attribute(2*l,3));r=u.attributes.position.array;h=0;for(p=l;h<p;h++)for(v=0;2>v;v++)o=6*h+3*v,l=3*c[2*h+v],r[o+0]=a[l],r[o+1]=a[l+1],r[o+2]=a[l+2]}else if(e.geometry instanceof THREE.BufferGeometry)for(a=e.geometry.attributes.position.array,l=a.length/3,c=l/3,u.addAttribute("position",new THREE.Float32Attribute(2*l,3)),r=u.attributes.position.array,h=0,p=c;h<p;h++)for(v=0;3>v;v++)o=18*h+6*v,c=9*h+3*v,r[o+0]=a[c],r[o+1]=a[c+1],r[o+2]=a[c+2],l=9*h+(v+1)%3*3,r[o+3]=a[l],r[o+4]=a[l+1],r[o+5]=a[l+2];THREE.Line.call(this,u,new THREE.LineBasicMaterial({color:n}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(e){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(e,t,n,r,i){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==e&&this.add(e,t,n,r,i)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(e,t,n,r,i,s){void 0===t&&(t=-1);void 0===n&&(n=0);void 0===s&&(s=1);void 0===i&&(i=new THREE.Color(16777215));void 0===r&&(r=THREE.NormalBlending);n=Math.min(n,Math.max(0,n));this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:1,opacity:s,color:i,blending:r})};THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,n,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;e<t;e++)n=this.lensFlares[e],n.x=this.positionScreen.x+r*n.distance,n.y=this.positionScreen.y+i*n.distance,n.wantedRotation=n.x*Math.PI*.25,n.rotation+=.25*(n.wantedRotation-n.rotation)};THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t);this.animationsMap={};this.animationsList=[];var n=this.geometry.morphTargets.length;this.createAnimation("__default",0,n-1,n/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){t={startFrame:t,endFrame:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=t;this.animationsList.push(t)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)(\d+)/,n,r={},i=this.geometry,s=0,o=i.morphTargets.length;s<o;s++){var u=i.morphTargets[s].name.match(t);if(u&&1<u.length){var a=u[1];r[a]||(r[a]={start:Infinity,end:-Infinity});u=r[a];s<u.start&&(u.start=s);s>u.end&&(u.end=s);n||(n=a)}}for(a in r)u=r[a],this.createAnimation(a,u.start,u.end,e);this.firstAnimation=n};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){if(e=this.animationsMap[e])e.direction=1,e.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){if(e=this.animationsMap[e])e.direction=-1,e.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;if(e=this.animationsMap[e])t=e.time;return t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;if(e=this.animationsMap[e])t=e.duration;return t};THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(e){if(e=this.animationsMap[e])e.active=!1};THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(r.active){var i=r.duration/r.length;r.time+=r.direction*e;if(r.mirroredLoop){if(r.time>r.duration||0>r.time)r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)}else r.time%=r.duration,0>r.time&&(r.time+=r.duration);var s=r.startFrame+THREE.Math.clamp(Math.floor(r.time/i),0,r.length-1),o=r.weight;s!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*o,this.morphTargetInfluences[s]=0,r.lastFrame=r.currentFrame,r.currentFrame=s);i=r.time%i/i;r.directionBackwards&&(i=1-i);this.morphTargetInfluences[r.currentFrame]=i*o;this.morphTargetInfluences[r.lastFrame]=(1-i)*o}}};THREE.LensFlarePlugin=function(){function e(e,n){var r=t.createProgram(),i=t.createShader(t.FRAGMENT_SHADER),s=t.createShader(t.VERTEX_SHADER),o="precision "+n+" float;\n";t.shaderSource(i,o+e.fragmentShader);t.shaderSource(s,o+e.vertexShader);t.compileShader(i);t.compileShader(s);t.attachShader(r,i);t.attachShader(r,s);t.linkProgram(r);return r}var t,n,r,i,s,o,u,a,f,l,c,h,p;this.init=function(v){t=v.context;n=v;r=v.getPrecision();i=new Float32Array(16);s=new Uint16Array(6);v=0;i[v++]=-1;i[v++]=-1;i[v++]=0;i[v++]=0;i[v++]=1;i[v++]=-1;i[v++]=1;i[v++]=0;i[v++]=1;i[v++]=1;i[v++]=1;i[v++]=1;i[v++]=-1;i[v++]=1;i[v++]=0;i[v++]=1;v=0;s[v++]=0;s[v++]=1;s[v++]=2;s[v++]=0;s[v++]=2;s[v++]=3;o=t.createBuffer();u=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o);t.bufferData(t.ARRAY_BUFFER,i,t.STATIC_DRAW);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u);t.bufferData(t.ELEMENT_ARRAY_BUFFER,s,t.STATIC_DRAW);a=t.createTexture();f=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST);t.bindTexture(t.TEXTURE_2D,f);t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST);0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(l=!1,c=e(THREE.ShaderFlares.lensFlare,r)):(l=!0,c=e(THREE.ShaderFlares.lensFlareVertexTexture,r));h={};p={};h.vertex=t.getAttribLocation(c,"position");h.uv=t.getAttribLocation(c,"uv");p.renderType=t.getUniformLocation(c,"renderType");p.map=t.getUniformLocation(c,"map");p.occlusionMap=t.getUniformLocation(c,"occlusionMap");p.opacity=t.getUniformLocation(c,"opacity");p.color=t.getUniformLocation(c,"color");p.scale=t.getUniformLocation(c,"scale");p.rotation=t.getUniformLocation(c,"rotation");p.screenPosition=t.getUniformLocation(c,"screenPosition")};this.render=function(e,r,i,s){e=e.__webglFlares;var d=e.length;if(d){var v=new THREE.Vector3,m=s/i,y=.5*i,w=.5*s,E=16/s,S=new THREE.Vector2(E*m,E),x=new THREE.Vector3(1,1,0),T=new THREE.Vector2(1,1),N=p,E=h;t.useProgram(c);t.enableVertexAttribArray(h.vertex);t.enableVertexAttribArray(h.uv);t.uniform1i(N.occlusionMap,0);t.uniform1i(N.map,1);t.bindBuffer(t.ARRAY_BUFFER,o);t.vertexAttribPointer(E.vertex,2,t.FLOAT,!1,16,0);t.vertexAttribPointer(E.uv,2,t.FLOAT,!1,16,8);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u);t.disable(t.CULL_FACE);t.depthMask(!1);var C,L,A,O,M;for(C=0;C<d;C++)if(E=16/s,S.set(E*m,E),O=e[C],v.set(O.matrixWorld.elements[12],O.matrixWorld.elements[13],O.matrixWorld.elements[14]),v.applyMatrix4(r.matrixWorldInverse),v.applyProjection(r.projectionMatrix),x.copy(v),T.x=x.x*y+y,T.y=x.y*w+w,l||0<T.x&&T.x<i&&0<T.y&&T.y<s)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,a),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,T.x-8,T.y-8,16,16,0),t.uniform1i(N.renderType,0),t.uniform2f(N.scale,S.x,S.y),t.uniform3f(N.screenPosition,x.x,x.y,x.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,f),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,T.x-8,T.y-8,16,16,0),t.uniform1i(N.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,a),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),O.positionScreen.copy(x),O.customUpdateCallback?O.customUpdateCallback(O):O.updateLensFlares(),t.uniform1i(N.renderType,2),t.enable(t.BLEND),L=0,A=O.lensFlares.length;L<A;L++)M=O.lensFlares[L],.001<M.opacity&&.001<M.scale&&(x.x=M.x,x.y=M.y,x.z=M.z,E=M.size*M.scale/s,S.x=E*m,S.y=E,t.uniform3f(N.screenPosition,x.x,x.y,x.z),t.uniform2f(N.scale,S.x,S.y),t.uniform1f(N.rotation,M.rotation),t.uniform1f(N.opacity,M.opacity),t.uniform3f(N.color,M.color.r,M.color.g,M.color.b),n.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst),n.setTexture(M.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE);t.enable(t.DEPTH_TEST);t.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4,a=new THREE.Vector3,f=new THREE.Vector3,l=new THREE.Vector3;this.init=function(o){e=o.context;t=o;o=THREE.ShaderLib.depthRGBA;var u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u});r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0});i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0});s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0});n._shadowPass=!0;r._shadowPass=!0;i._shadowPass=!0;s._shadowPass=!0};this.render=function(e,n){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,n)};this.update=function(p,v){var m,y,w,E,S,x,T,N,C,L=[];E=0;e.clearColor(1,1,1,1);e.disable(e.BLEND);e.enable(e.CULL_FACE);e.frontFace(e.CCW);t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK);t.setDepthTest(!0);m=0;for(y=p.__lights.length;m<y;m++)if(w=p.__lights[m],w.castShadow)if(w instanceof THREE.DirectionalLight&&w.shadowCascade)for(S=0;S<w.shadowCascadeCount;S++){var A;if(w.shadowCascadeArray[S])A=w.shadowCascadeArray[S];else{C=w;T=S;A=new THREE.DirectionalLight;A.isVirtual=!0;A.onlyShadow=!0;A.castShadow=!0;A.shadowCameraNear=C.shadowCameraNear;A.shadowCameraFar=C.shadowCameraFar;A.shadowCameraLeft=C.shadowCameraLeft;A.shadowCameraRight=C.shadowCameraRight;A.shadowCameraBottom=C.shadowCameraBottom;A.shadowCameraTop=C.shadowCameraTop;A.shadowCameraVisible=C.shadowCameraVisible;A.shadowDarkness=C.shadowDarkness;A.shadowBias=C.shadowCascadeBias[T];A.shadowMapWidth=C.shadowCascadeWidth[T];A.shadowMapHeight=C.shadowCascadeHeight[T];A.pointsWorld=[];A.pointsFrustum=[];var O=A.pointsWorld;x=A.pointsFrustum;for(N=0;8>N;N++)O[N]=new THREE.Vector3,x[N]=new THREE.Vector3;O=C.shadowCascadeNearZ[T];C=C.shadowCascadeFarZ[T];x[0].set(-1,-1,O);x[1].set(1,-1,O);x[2].set(-1,1,O);x[3].set(1,1,O);x[4].set(-1,-1,C);x[5].set(1,-1,C);x[6].set(-1,1,C);x[7].set(1,1,C);A.originalCamera=v;x=new THREE.Gyroscope;x.position.copy(w.shadowCascadeOffset);x.add(A);x.add(A.target);v.add(x);w.shadowCascadeArray[S]=A;console.log("Created virtualLight",A)}T=w;O=S;C=T.shadowCascadeArray[O];C.position.copy(T.position);C.target.position.copy(T.target.position);C.lookAt(C.target);C.shadowCameraVisible=T.shadowCameraVisible;C.shadowDarkness=T.shadowDarkness;C.shadowBias=T.shadowCascadeBias[O];x=T.shadowCascadeNearZ[O];T=T.shadowCascadeFarZ[O];C=C.pointsFrustum;C[0].z=x;C[1].z=x;C[2].z=x;C[3].z=x;C[4].z=T;C[5].z=T;C[6].z=T;C[7].z=T;L[E]=A;E++}else L[E]=w,E++;m=0;for(y=L.length;m<y;m++){w=L[m];w.shadowMap||(S=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(S=THREE.NearestFilter),w.shadowMap=new THREE.WebGLRenderTarget(w.shadowMapWidth,w.shadowMapHeight,{minFilter:S,magFilter:S,format:THREE.RGBAFormat}),w.shadowMapSize=new THREE.Vector2(w.shadowMapWidth,w.shadowMapHeight),w.shadowMatrix=new THREE.Matrix4);if(!w.shadowCamera){if(w instanceof THREE.SpotLight)w.shadowCamera=new THREE.PerspectiveCamera(w.shadowCameraFov,w.shadowMapWidth/w.shadowMapHeight,w.shadowCameraNear,w.shadowCameraFar);else if(w instanceof THREE.DirectionalLight)w.shadowCamera=new THREE.OrthographicCamera(w.shadowCameraLeft,w.shadowCameraRight,w.shadowCameraTop,w.shadowCameraBottom,w.shadowCameraNear,w.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}p.add(w.shadowCamera);!0===p.autoUpdate&&p.updateMatrixWorld()}w.shadowCameraVisible&&!w.cameraHelper&&(w.cameraHelper=new THREE.CameraHelper(w.shadowCamera),w.shadowCamera.add(w.cameraHelper));if(w.isVirtual&&A.originalCamera==v){S=v;E=w.shadowCamera;x=w.pointsFrustum;C=w.pointsWorld;a.set(Infinity,Infinity,Infinity);f.set(-Infinity,-Infinity,-Infinity);for(T=0;8>T;T++)O=C[T],O.copy(x[T]),THREE.ShadowMapPlugin.__projector.unprojectVector(O,S),O.applyMatrix4(E.matrixWorldInverse),O.x<a.x&&(a.x=O.x),O.x>f.x&&(f.x=O.x),O.y<a.y&&(a.y=O.y),O.y>f.y&&(f.y=O.y),O.z<a.z&&(a.z=O.z),O.z>f.z&&(f.z=O.z);E.left=a.x;E.right=f.x;E.top=f.y;E.bottom=a.y;E.updateProjectionMatrix()}E=w.shadowMap;x=w.shadowMatrix;S=w.shadowCamera;S.position.setFromMatrixPosition(w.matrixWorld);l.setFromMatrixPosition(w.target.matrixWorld);S.lookAt(l);S.updateMatrixWorld();S.matrixWorldInverse.getInverse(S.matrixWorld);w.cameraHelper&&(w.cameraHelper.visible=w.shadowCameraVisible);w.shadowCameraVisible&&w.cameraHelper.update();x.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);x.multiply(S.projectionMatrix);x.multiply(S.matrixWorldInverse);u.multiplyMatrices(S.projectionMatrix,S.matrixWorldInverse);o.setFromMatrix(u);t.setRenderTarget(E);t.clear();C=p.__webglObjects;w=0;for(E=C.length;w<E;w++)T=C[w],x=T.object,T.render=!1,!x.visible||!x.castShadow||(x instanceof THREE.Mesh||x instanceof THREE.ParticleSystem)&&x.frustumCulled&&!o.intersectsObject(x)||(x._modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,x.matrixWorld),T.render=!0);var M;w=0;for(E=C.length;w<E;w++)T=C[w],T.render&&(x=T.object,T=T.buffer,O=x.material instanceof THREE.MeshFaceMaterial?x.material.materials[0]:x.material,N=void 0!==x.geometry.morphTargets&&0<x.geometry.morphTargets.length&&O.morphTargets,M=x instanceof THREE.SkinnedMesh&&O.skinning,N=x.customDepthMaterial?x.customDepthMaterial:M?N?s:i:N?r:n,t.setMaterialFaces(O),T instanceof THREE.BufferGeometry?t.renderBufferDirect(S,p.__lights,null,N,T,x):t.renderBuffer(S,p.__lights,null,N,T,x));C=p.__webglObjectsImmediate;w=0;for(E=C.length;w<E;w++)T=C[w],x=T.object,x.visible&&x.castShadow&&(x._modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,x.matrixWorld),t.renderImmediateObject(S,p.__lights,null,n,x))}m=t.getClearColor();y=t.getClearAlpha();e.clearColor(m.r,m.g,m.b,y);e.enable(e.BLEND);t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function g(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m;var y,b,w,E,S,x,T,N;this.init=function(g){y=g.context;b=g;E=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]);S=new Uint16Array([0,1,2,0,2,3]);x=y.createBuffer();T=y.createBuffer();y.bindBuffer(y.ARRAY_BUFFER,x);y.bufferData(y.ARRAY_BUFFER,E,y.STATIC_DRAW);y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,T);y.bufferData(y.ELEMENT_ARRAY_BUFFER,S,y.STATIC_DRAW);g=y.createProgram();var C=y.createShader(y.VERTEX_SHADER),A=y.createShader(y.FRAGMENT_SHADER);y.shaderSource(C,["precision "+b.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));y.shaderSource(A,["precision "+b.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));y.compileShader(C);y.compileShader(A);y.attachShader(g,C);y.attachShader(g,A);y.linkProgram(g);N=g;v=y.getAttribLocation(N,"position");m=y.getAttribLocation(N,"uv");e=y.getUniformLocation(N,"uvOffset");t=y.getUniformLocation(N,"uvScale");n=y.getUniformLocation(N,"rotation");r=y.getUniformLocation(N,"scale");i=y.getUniformLocation(N,"color");s=y.getUniformLocation(N,"map");o=y.getUniformLocation(N,"opacity");u=y.getUniformLocation(N,"modelViewMatrix");a=y.getUniformLocation(N,"projectionMatrix");f=y.getUniformLocation(N,"fogType");l=y.getUniformLocation(N,"fogDensity");c=y.getUniformLocation(N,"fogNear");h=y.getUniformLocation(N,"fogFar");p=y.getUniformLocation(N,"fogColor");d=y.getUniformLocation(N,"alphaTest");g=document.createElement("canvas");g.width=8;g.height=8;C=g.getContext("2d");C.fillStyle="#ffffff";C.fillRect(0,0,g.width,g.height);w=new THREE.Texture(g);w.needsUpdate=!0};this.render=function(E,S,C,A){C=E.__webglSprites;if(A=C.length){y.useProgram(N);y.enableVertexAttribArray(v);y.enableVertexAttribArray(m);y.disable(y.CULL_FACE);y.enable(y.BLEND);y.bindBuffer(y.ARRAY_BUFFER,x);y.vertexAttribPointer(v,2,y.FLOAT,!1,16,0);y.vertexAttribPointer(m,2,y.FLOAT,!1,16,8);y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,T);y.uniformMatrix4fv(a,!1,S.projectionMatrix.elements);y.activeTexture(y.TEXTURE0);y.uniform1i(s,0);var O=0,M=0,_=E.fog;_?(y.uniform3f(p,_.color.r,_.color.g,_.color.b),_ instanceof THREE.Fog?(y.uniform1f(c,_.near),y.uniform1f(h,_.far),y.uniform1i(f,1),M=O=1):_ instanceof THREE.FogExp2&&(y.uniform1f(l,_.density),y.uniform1i(f,2),M=O=2)):(y.uniform1i(f,0),M=O=0);for(var D,P=[],_=0;_<A;_++)D=C[_],!1!==D.visible&&(D._modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,D.matrixWorld),D.z=-D._modelViewMatrix.elements[14]);C.sort(g);for(_=0;_<A;_++)D=C[_],!1!==D.visible&&(S=D.material,y.uniform1f(d,S.alphaTest),y.uniformMatrix4fv(u,!1,D._modelViewMatrix.elements),P[0]=D.scale.x,P[1]=D.scale.y,D=E.fog&&S.fog?M:0,O!==D&&(y.uniform1i(f,D),O=D),null!==S.map?(y.uniform2f(e,S.map.offset.x,S.map.offset.y),y.uniform2f(t,S.map.repeat.x,S.map.repeat.y)):(y.uniform2f(e,0,0),y.uniform2f(t,1,1)),y.uniform1f(o,S.opacity),y.uniform3f(i,S.color.r,S.color.g,S.color.b),y.uniform1f(n,S.rotation),y.uniform2fv(r,P),b.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),b.setDepthTest(S.depthTest),b.setDepthWrite(S.depthWrite),S.map&&S.map.image&&S.map.image.width?b.setTexture(S.map,0):b.setTexture(w,0),y.drawElements(y.TRIANGLES,6,y.UNSIGNED_SHORT,0));y.enable(y.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4;this.init=function(o){e=o.context;t=o;o=THREE.ShaderLib.depthRGBA;var u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u});r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0});i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0});s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0});n._shadowPass=!0;r._shadowPass=!0;i._shadowPass=!0;s._shadowPass=!0};this.render=function(e,t){this.enabled&&this.update(e,t)};this.update=function(l,p){var v,m,y,w,E,S;e.clearColor(1,1,1,1);e.disable(e.BLEND);t.setDepthTest(!0);!0===l.autoUpdate&&l.updateMatrixWorld();p.matrixWorldInverse.getInverse(p.matrixWorld);u.multiplyMatrices(p.projectionMatrix,p.matrixWorldInverse);o.setFromMatrix(u);t.setRenderTarget(this.renderTarget);t.clear();S=l.__webglObjects;v=0;for(m=S.length;v<m;v++)y=S[v],E=y.object,y.render=!1,!E.visible||(E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)&&E.frustumCulled&&!o.intersectsObject(E)||(E._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,E.matrixWorld),y.render=!0);var x;v=0;for(m=S.length;v<m;v++)y=S[v],y.render&&(E=y.object,y=y.buffer,E instanceof THREE.ParticleSystem&&!E.customDepthMaterial||((x=E.material instanceof THREE.MeshFaceMaterial?E.material.materials[0]:E.material)&&t.setMaterialFaces(E.material),w=void 0!==E.geometry.morphTargets&&0<E.geometry.morphTargets.length&&x.morphTargets,x=E instanceof THREE.SkinnedMesh&&x.skinning,w=E.customDepthMaterial?E.customDepthMaterial:x?w?s:i:w?r:n,y instanceof THREE.BufferGeometry?t.renderBufferDirect(p,l.__lights,null,w,y,E):t.renderBuffer(p,l.__lights,null,w,y,E)));S=l.__webglObjectsImmediate;v=0;for(m=S.length;v<m;v++)y=S[v],E=y.object,E.visible&&(E._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,E.matrixWorld),t.renderImmediateObject(p,l.__lights,null,n,E));v=t.getClearColor();m=t.getClearAlpha();e.clearColor(v.r,v.g,v.b,m);e.enable(e.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.CSS3DObject=function(e){THREE.Object3D.call(this);this.element=e;this.element.style.position="absolute";this.addEventListener("removed",function(e){if(this.element.parentNode!==null){this.element.parentNode.removeChild(this.element)}})};THREE.CSS3DObject.prototype=Object.create(THREE.Object3D.prototype);THREE.CSS3DSprite=function(e){THREE.CSS3DObject.call(this,e)};THREE.CSS3DSprite.prototype=Object.create(THREE.CSS3DObject.prototype);THREE.CSS3DRenderer=function(){var e,t;var n,r;var i=new THREE.Matrix4;var s={camera:{fov:0,style:""},objects:{}};var o=document.createElement("div");o.style.overflow="hidden";o.style.WebkitTransformStyle="preserve-3d";o.style.MozTransformStyle="preserve-3d";o.style.oTransformStyle="preserve-3d";o.style.transformStyle="preserve-3d";this.domElement=o;var u=document.createElement("div");u.style.WebkitTransformStyle="preserve-3d";u.style.MozTransformStyle="preserve-3d";u.style.oTransformStyle="preserve-3d";u.style.transformStyle="preserve-3d";o.appendChild(u);this.setClearColor=function(){};this.setSize=function(i,s){e=i;t=s;n=e/2;r=t/2;o.style.width=i+"px";o.style.height=s+"px";u.style.width=i+"px";u.style.height=s+"px"};var a=function(e){return Math.abs(e)<1e-6?0:e};var f=function(e){var t=e.elements;return"matrix3d("+a(t[0])+","+a(-t[1])+","+a(t[2])+","+a(t[3])+","+a(t[4])+","+a(-t[5])+","+a(t[6])+","+a(t[7])+","+a(t[8])+","+a(-t[9])+","+a(t[10])+","+a(t[11])+","+a(t[12])+","+a(-t[13])+","+a(t[14])+","+a(t[15])+")"};var l=function(e){var t=e.elements;return"translate3d(-50%,-50%,0) matrix3d("+a(t[0])+","+a(t[1])+","+a(t[2])+","+a(t[3])+","+a(-t[4])+","+a(-t[5])+","+a(-t[6])+","+a(-t[7])+","+a(t[8])+","+a(t[9])+","+a(t[10])+","+a(t[11])+","+a(t[12])+","+a(t[13])+","+a(t[14])+","+a(t[15])+")"};var c=function(e,t){if(e instanceof THREE.CSS3DObject){var n;if(e instanceof THREE.CSS3DSprite){i.copy(t.matrixWorldInverse);i.transpose();i.copyPosition(e.matrixWorld);i.scale(e.scale);i.elements[3]=0;i.elements[7]=0;i.elements[11]=0;i.elements[15]=1;n=l(i)}else{n=l(e.matrixWorld)}var r=e.element;var o=s.objects[e.id];if(o===undefined||o!==n){r.style.WebkitTransform=n;r.style.MozTransform=n;r.style.oTransform=n;r.style.transform=n;s.objects[e.id]=n}if(r.parentNode!==u){u.appendChild(r)}}for(var a=0,f=e.children.length;a<f;a++){c(e.children[a],t)}};this.render=function(e,i){var a=.5/Math.tan(THREE.Math.degToRad(i.fov*.5))*t;if(s.camera.fov!==a){o.style.WebkitPerspective=a+"px";o.style.MozPerspective=a+"px";o.style.oPerspective=a+"px";o.style.perspective=a+"px";s.camera.fov=a}e.updateMatrixWorld();if(i.parent===undefined)i.updateMatrixWorld();i.matrixWorldInverse.getInverse(i.matrixWorld);var l="translate3d(0,0,"+a+"px)"+f(i.matrixWorldInverse)+" translate3d("+n+"px,"+r+"px, 0)";if(s.camera.style!==l){u.style.WebkitTransform=l;u.style.MozTransform=l;u.style.oTransform=l;u.style.transform=l;s.camera.style=l}c(e,i)}}